2022-03-30 22:19:24,712 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-30 22:19:24,713 - parso.python.diff - DEBUG - diff update: line_lengths old: 9; new: 9
2022-03-30 22:19:24,713 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:8] new[1:8]
2022-03-30 22:19:24,713 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:8] new[1:8]
2022-03-30 22:19:24,713 - parso.python.diff - DEBUG - diff update: -> code[replace] old[9:9] new[9:9]
2022-03-30 22:19:24,714 - parso.python.diff - DEBUG - diff _parse: parse_part from 9 to 9 (to 8 in part parser)
2022-03-30 22:19:24,714 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-30 22:19:41,608 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-30 22:19:41,608 - parso.python.diff - DEBUG - diff update: line_lengths old: 9; new: 5
2022-03-30 22:19:41,609 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:9] new[1:5]
2022-03-30 22:19:41,609 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 5 (to 4 in part parser)
2022-03-30 22:19:41,610 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-30 22:19:42,767 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-30 22:19:42,768 - parso.python.diff - DEBUG - diff update: line_lengths old: 5; new: 5
2022-03-30 22:19:42,768 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:4] new[1:4]
2022-03-30 22:19:42,768 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[3:3] new[1:3]
2022-03-30 22:19:42,768 - parso.python.diff - DEBUG - diff _parse: parse_part from 4 to 5 (to 4 in part parser)
2022-03-30 22:19:42,768 - parso.python.diff - DEBUG - diff update: -> code[replace] old[5:5] new[5:5]
2022-03-30 22:19:42,769 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-30 22:20:07,721 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-30 22:20:07,721 - parso.python.diff - DEBUG - diff update: line_lengths old: 5; new: 5
2022-03-30 22:20:07,722 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:4] new[1:4]
2022-03-30 22:20:07,722 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[3:3] new[1:3]
2022-03-30 22:20:07,723 - parso.python.diff - DEBUG - diff _parse: parse_part from 4 to 5 (to 4 in part parser)
2022-03-30 22:20:07,724 - parso.python.diff - DEBUG - diff update: -> code[replace] old[5:5] new[5:5]
2022-03-30 22:20:07,724 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-30 22:22:49,570 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-30 22:22:49,571 - parso.python.diff - DEBUG - diff update: line_lengths old: 5; new: 3
2022-03-30 22:22:49,571 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:2] new[1:2]
2022-03-30 22:22:49,572 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 3 (to 2 in part parser)
2022-03-30 22:22:49,572 - parso.python.diff - DEBUG - diff update: -> code[replace] old[3:5] new[3:3]
2022-03-30 22:22:49,572 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-30 22:22:49,633 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/frame.py
2022-03-30 22:22:49,661 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/__init__.py
2022-03-30 22:22:49,664 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/__init__.py
2022-03-30 22:22:49,729 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/generic.py
2022-03-30 22:22:49,768 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/base.py
2022-03-30 22:22:49,818 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/accessor.py
2022-03-30 22:22:49,846 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/indexing.py
2022-03-30 22:22:49,862 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/arraylike.py
2022-03-30 22:22:49,870 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/_typing.py
2022-03-30 22:22:49,895 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/typing.py
2022-03-30 22:22:49,913 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
2022-03-30 22:22:49,961 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/series.py
2022-03-30 22:22:50,057 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/common.py
2022-03-30 22:22:50,065 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/_libs/__init__.py
2022-03-30 22:22:50,234 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/indexes/__init__.py
2022-03-30 22:22:50,239 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/indexes/api.py
2022-03-30 22:22:50,286 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/indexes/base.py
2022-03-30 22:22:50,607 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/arrays/__init__.py
2022-03-30 22:22:50,618 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/arrays/base.py
2022-03-30 22:22:50,627 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/__init__.py
2022-03-30 22:22:50,632 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/__init__.py
2022-03-30 22:22:50,651 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/numeric.py
2022-03-30 22:22:50,664 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/umath.py
2022-03-30 22:22:50,670 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/numerictypes.py
2022-03-30 22:22:50,684 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/fromnumeric.py
2022-03-30 22:22:50,701 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/arrayprint.py
2022-03-30 22:22:50,705 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/_asarray.py
2022-03-30 22:22:50,710 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/_ufunc_config.py
2022-03-30 22:22:50,746 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/records.py
2022-03-30 22:22:50,750 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/memmap.py
2022-03-30 22:22:50,755 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/function_base.py
2022-03-30 22:22:50,760 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/machar.py
2022-03-30 22:22:50,770 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/getlimits.py
2022-03-30 22:22:50,780 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/shape_base.py
2022-03-30 22:22:50,797 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/einsumfunc.py
2022-03-30 22:22:50,800 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/__init__.py
2022-03-30 22:22:50,808 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/type_check.py
2022-03-30 22:22:50,817 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/index_tricks.py
2022-03-30 22:22:50,848 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/function_base.py
2022-03-30 22:22:50,861 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/nanfunctions.py
2022-03-30 22:22:50,873 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/shape_base.py
2022-03-30 22:22:50,900 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/stride_tricks.py
2022-03-30 22:22:50,907 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/twodim_base.py
2022-03-30 22:22:50,910 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/ufunclike.py
2022-03-30 22:22:50,920 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/histograms.py
2022-03-30 22:22:50,933 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/polynomial.py
2022-03-30 22:22:50,946 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/utils.py
2022-03-30 22:22:50,954 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/arraysetops.py
2022-03-30 22:22:50,979 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/npyio.py
2022-03-30 22:22:50,987 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/financial.py
2022-03-30 22:22:50,996 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/arraypad.py
2022-03-30 22:22:51,000 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/_version.py
2022-03-30 22:22:51,003 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/matrixlib/__init__.py
2022-03-30 22:22:51,011 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/matrixlib/defmatrix.py
2022-03-30 22:23:05,188 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-30 22:23:05,188 - parso.python.diff - DEBUG - diff update: line_lengths old: 3; new: 3
2022-03-30 22:23:05,188 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:2] new[1:2]
2022-03-30 22:23:05,189 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 3 (to 2 in part parser)
2022-03-30 22:23:05,189 - parso.python.diff - DEBUG - diff update: -> code[replace] old[3:3] new[3:3]
2022-03-30 22:23:05,189 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-30 23:17:19,097 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-30 23:17:19,098 - parso.python.diff - DEBUG - diff update: line_lengths old: 3; new: 54
2022-03-30 23:17:19,098 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:12]
2022-03-30 23:17:19,105 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 54 (to 53 in part parser)
2022-03-30 23:17:19,105 - parso.python.diff - DEBUG - diff update: -> code[equal] old[2:2] new[13:13]
2022-03-30 23:17:19,105 - parso.python.diff - DEBUG - diff update: -> code[replace] old[3:3] new[14:54]
2022-03-30 23:17:19,105 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-30 23:17:19,131 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/abc.py
2022-03-30 23:17:19,135 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/abc.pyi
2022-03-30 23:17:19,158 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/random.py
2022-03-30 23:17:19,165 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/random.pyi
2022-03-30 23:17:19,170 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/2and3/_random.pyi
2022-03-30 23:17:21,742 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-30 23:17:21,743 - parso.python.diff - DEBUG - diff update: line_lengths old: 54; new: 54
2022-03-30 23:17:21,743 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:53] new[1:53]
2022-03-30 23:17:21,743 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:53] new[1:6]
2022-03-30 23:17:21,750 - parso.python.diff - DEBUG - diff _parse: parse_part from 7 to 54 (to 53 in part parser)
2022-03-30 23:17:21,751 - parso.python.diff - DEBUG - diff update: -> code[replace] old[54:54] new[54:54]
2022-03-30 23:17:21,751 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-30 23:17:24,027 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-30 23:17:24,028 - parso.python.diff - DEBUG - diff update: line_lengths old: 54; new: 54
2022-03-30 23:17:24,028 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:53] new[1:53]
2022-03-30 23:17:24,028 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:53] new[1:6]
2022-03-30 23:17:24,037 - parso.python.diff - DEBUG - diff _parse: parse_part from 7 to 54 (to 53 in part parser)
2022-03-30 23:17:24,037 - parso.python.diff - DEBUG - diff update: -> code[replace] old[54:54] new[54:54]
2022-03-30 23:17:24,037 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-30 23:22:11,730 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-30 23:22:11,731 - parso.python.diff - DEBUG - diff update: line_lengths old: 54; new: 1
2022-03-30 23:22:11,731 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:54] new[1:1]
2022-03-30 23:22:11,732 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-30 23:22:11,732 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-30 23:22:28,440 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-30 23:22:28,441 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-03-30 23:22:28,441 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-03-30 23:22:28,441 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-30 23:22:28,441 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-30 23:22:34,694 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-30 23:22:34,694 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-03-30 23:22:34,694 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-03-30 23:22:34,695 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-30 23:22:34,695 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-30 23:22:38,847 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-30 23:22:38,847 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-03-30 23:22:38,848 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-03-30 23:22:38,848 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-30 23:22:38,848 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-30 23:24:09,182 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-30 23:24:09,183 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 2
2022-03-30 23:24:09,183 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:2]
2022-03-30 23:24:09,184 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 2 (to 1 in part parser)
2022-03-30 23:24:09,184 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-30 23:24:25,542 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-30 23:24:25,542 - parso.python.diff - DEBUG - diff update: line_lengths old: 2; new: 1
2022-03-30 23:24:25,542 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:2] new[1:1]
2022-03-30 23:24:25,543 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-30 23:24:25,543 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-30 23:24:28,511 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-30 23:24:28,511 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-03-30 23:24:28,511 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-03-30 23:24:28,512 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-30 23:24:28,512 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-30 23:24:34,125 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-30 23:24:34,125 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-03-30 23:24:34,125 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-03-30 23:24:34,126 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-30 23:24:34,126 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-30 23:25:09,923 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-30 23:25:09,924 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 2
2022-03-30 23:25:09,924 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:2]
2022-03-30 23:25:09,925 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 2 (to 1 in part parser)
2022-03-30 23:25:09,925 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-30 23:32:45,588 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-30 23:32:45,589 - parso.python.diff - DEBUG - diff update: line_lengths old: 2; new: 2
2022-03-30 23:32:45,589 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:2] new[1:2]
2022-03-30 23:32:45,590 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 2 (to 1 in part parser)
2022-03-30 23:32:45,590 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-30 23:32:49,687 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-30 23:32:49,687 - parso.python.diff - DEBUG - diff update: line_lengths old: 2; new: 3
2022-03-30 23:32:49,687 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:1] new[1:1]
2022-03-30 23:32:49,687 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:1] new[1:1]
2022-03-30 23:32:49,687 - parso.python.diff - DEBUG - diff update: -> code[replace] old[2:2] new[2:3]
2022-03-30 23:32:49,688 - parso.python.diff - DEBUG - diff _parse: parse_part from 2 to 3 (to 2 in part parser)
2022-03-30 23:32:49,688 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 00:00:13,447 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 00:00:13,449 - parso.python.diff - DEBUG - diff update: line_lengths old: 3; new: 7
2022-03-31 00:00:13,449 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:3] new[1:7]
2022-03-31 00:00:13,450 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 7 (to 6 in part parser)
2022-03-31 00:00:13,450 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 00:01:04,976 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 00:01:04,977 - parso.python.diff - DEBUG - diff update: line_lengths old: 7; new: 43
2022-03-31 00:01:04,977 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:4] new[1:4]
2022-03-31 00:01:04,977 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:6] new[1:4]
2022-03-31 00:01:04,978 - parso.python.diff - DEBUG - diff update: -> code[replace] old[5:5] new[5:5]
2022-03-31 00:01:04,978 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 5 (to 6 in part parser)
2022-03-31 00:01:04,978 - parso.python.diff - DEBUG - diff update: -> code[equal] old[6:6] new[6:6]
2022-03-31 00:01:04,986 - parso.python.diff - DEBUG - diff _parse: parse_part from 6 to 43 (to 42 in part parser)
2022-03-31 00:01:04,986 - parso.python.diff - DEBUG - diff update: -> code[replace] old[7:7] new[7:43]
2022-03-31 00:01:04,986 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 00:01:08,666 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 00:01:08,666 - parso.python.diff - DEBUG - diff update: line_lengths old: 43; new: 43
2022-03-31 00:01:08,667 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:42] new[1:42]
2022-03-31 00:01:08,667 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:42] new[1:5]
2022-03-31 00:01:08,674 - parso.python.diff - DEBUG - diff _parse: parse_part from 6 to 43 (to 42 in part parser)
2022-03-31 00:01:08,674 - parso.python.diff - DEBUG - diff update: -> code[replace] old[43:43] new[43:43]
2022-03-31 00:01:08,674 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 00:01:12,851 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 00:01:12,851 - parso.python.diff - DEBUG - diff update: line_lengths old: 43; new: 43
2022-03-31 00:01:12,852 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:42] new[1:42]
2022-03-31 00:01:12,852 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:42] new[1:5]
2022-03-31 00:01:12,858 - parso.python.diff - DEBUG - diff _parse: parse_part from 6 to 43 (to 42 in part parser)
2022-03-31 00:01:12,859 - parso.python.diff - DEBUG - diff update: -> code[replace] old[43:43] new[43:43]
2022-03-31 00:01:12,859 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 00:02:17,562 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 00:02:17,563 - parso.python.diff - DEBUG - diff update: line_lengths old: 43; new: 1
2022-03-31 00:02:17,563 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:43] new[1:1]
2022-03-31 00:02:17,564 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 00:02:17,564 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 00:02:21,421 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 00:02:21,422 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-03-31 00:02:21,422 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-03-31 00:02:21,422 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 00:02:21,422 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 00:20:15,243 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 00:20:15,245 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-03-31 00:20:15,245 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-03-31 00:20:15,245 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 00:20:15,245 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 00:20:20,522 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 00:20:20,523 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 2
2022-03-31 00:20:20,523 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:2]
2022-03-31 00:20:20,523 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 2 (to 1 in part parser)
2022-03-31 00:20:20,524 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 01:00:58,695 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 01:00:58,696 - parso.python.diff - DEBUG - diff update: line_lengths old: 2; new: 1
2022-03-31 01:00:58,696 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:2] new[1:1]
2022-03-31 01:00:58,697 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 01:00:58,697 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 01:06:40,010 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 01:06:40,011 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 13
2022-03-31 01:06:40,011 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:13]
2022-03-31 01:06:40,013 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 13 (to 12 in part parser)
2022-03-31 01:06:40,013 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 01:22:54,985 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 01:22:54,986 - parso.python.diff - DEBUG - diff update: line_lengths old: 13; new: 1
2022-03-31 01:22:54,986 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:13] new[1:1]
2022-03-31 01:22:54,986 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 01:22:54,987 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 01:32:20,064 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 01:32:20,064 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-03-31 01:32:20,064 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-03-31 01:32:20,065 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 01:32:20,065 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 01:40:29,911 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 01:40:29,913 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 5
2022-03-31 01:40:29,913 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:5]
2022-03-31 01:40:29,914 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 5 (to 4 in part parser)
2022-03-31 01:40:29,914 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 01:40:49,895 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 01:40:49,896 - parso.python.diff - DEBUG - diff update: line_lengths old: 5; new: 1
2022-03-31 01:40:49,896 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:5] new[1:1]
2022-03-31 01:40:49,896 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 01:40:49,896 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 01:41:15,972 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 01:41:15,972 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 5
2022-03-31 01:41:15,972 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:5]
2022-03-31 01:41:15,973 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 5 (to 4 in part parser)
2022-03-31 01:41:15,973 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 01:41:28,832 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 01:41:28,832 - parso.python.diff - DEBUG - diff update: line_lengths old: 5; new: 5
2022-03-31 01:41:28,832 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:4] new[1:4]
2022-03-31 01:41:28,834 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 5 (to 4 in part parser)
2022-03-31 01:41:28,834 - parso.python.diff - DEBUG - diff update: -> code[replace] old[5:5] new[5:5]
2022-03-31 01:41:28,835 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 01:41:42,793 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 01:41:42,793 - parso.python.diff - DEBUG - diff update: line_lengths old: 5; new: 6
2022-03-31 01:41:42,793 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:4] new[1:4]
2022-03-31 01:41:42,795 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 6 (to 5 in part parser)
2022-03-31 01:41:42,795 - parso.python.diff - DEBUG - diff update: -> code[replace] old[5:5] new[5:6]
2022-03-31 01:41:42,795 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 01:43:41,257 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 01:43:41,258 - parso.python.diff - DEBUG - diff update: line_lengths old: 6; new: 3
2022-03-31 01:43:41,258 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:2] new[1:2]
2022-03-31 01:43:41,259 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 3 (to 2 in part parser)
2022-03-31 01:43:41,259 - parso.python.diff - DEBUG - diff update: -> code[replace] old[3:6] new[3:3]
2022-03-31 01:43:41,259 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 01:48:21,925 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-03-31 01:48:37,741 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-03-31 01:48:37,741 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,741 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,741 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-03-31 01:48:37,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-03-31 01:48:37,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-03-31 01:48:37,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-03-31 01:48:37,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-03-31 01:48:37,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-03-31 01:48:37,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-03-31 01:48:37,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-03-31 01:48:37,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-03-31 01:48:37,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-03-31 01:48:37,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-03-31 01:48:37,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-03-31 01:48:37,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:37,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-03-31 01:48:37,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-03-31 01:48:37,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-03-31 01:48:37,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-03-31 01:48:37,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-03-31 01:48:37,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:37,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:37,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-03-31 01:48:37,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-03-31 01:48:37,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-03-31 01:48:37,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-03-31 01:48:37,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-03-31 01:48:37,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-03-31 01:48:37,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-03-31 01:48:37,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-03-31 01:48:37,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-03-31 01:48:37,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-03-31 01:48:37,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-03-31 01:48:37,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:37,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-03-31 01:48:37,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-03-31 01:48:37,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-03-31 01:48:37,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-03-31 01:48:37,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-03-31 01:48:37,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-03-31 01:48:37,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-03-31 01:48:37,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-03-31 01:48:37,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-03-31 01:48:37,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-03-31 01:48:37,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-03-31 01:48:37,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-03-31 01:48:37,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-03-31 01:48:37,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-03-31 01:48:37,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-03-31 01:48:37,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-03-31 01:48:37,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-03-31 01:48:37,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-03-31 01:48:37,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-03-31 01:48:37,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-03-31 01:48:37,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:37,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-03-31 01:48:37,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:37,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-03-31 01:48:37,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-03-31 01:48:37,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-03-31 01:48:37,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-03-31 01:48:37,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-03-31 01:48:37,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-03-31 01:48:37,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-03-31 01:48:37,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-03-31 01:48:37,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-03-31 01:48:37,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-03-31 01:48:37,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-03-31 01:48:37,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-03-31 01:48:37,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-03-31 01:48:37,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-03-31 01:48:37,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-03-31 01:48:37,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-03-31 01:48:37,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-03-31 01:48:37,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-03-31 01:48:37,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-03-31 01:48:37,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-03-31 01:48:37,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:37,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-03-31 01:48:37,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-03-31 01:48:37,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-03-31 01:48:37,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:37,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:37,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-03-31 01:48:37,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:37,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:37,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-03-31 01:48:37,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:37,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:37,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-03-31 01:48:44,525 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2022-03-31 01:48:44,525 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,525 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,525 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,525 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-03-31 01:48:44,525 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-03-31 01:48:44,525 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,526 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,526 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,526 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-03-31 01:48:44,526 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,526 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,526 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-03-31 01:48:44,526 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,526 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,526 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,526 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,526 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,526 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,526 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,527 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,527 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,527 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,527 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,527 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,527 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,527 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,527 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,527 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,527 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,528 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,528 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,528 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,528 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,528 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,528 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-03-31 01:48:44,528 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-03-31 01:48:44,528 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,528 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,528 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-03-31 01:48:44,528 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,528 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,528 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,529 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,529 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,529 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,529 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,529 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,529 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-03-31 01:48:44,529 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,529 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,529 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,529 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,529 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-03-31 01:48:44,529 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,530 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,530 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,530 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,530 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,530 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,530 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,530 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-03-31 01:48:44,530 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,530 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,530 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,531 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,531 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-03-31 01:48:44,531 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,531 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,531 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,531 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,531 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,531 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-03-31 01:48:44,531 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,531 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,532 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,532 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,532 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,532 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,532 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,532 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,532 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,532 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,532 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,532 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,532 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,532 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,532 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,533 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,533 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,533 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-03-31 01:48:44,533 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,533 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-03-31 01:48:44,533 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-03-31 01:48:44,533 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,533 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,533 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,533 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,533 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,533 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,533 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,533 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,534 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,534 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-03-31 01:48:44,534 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,534 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-03-31 01:48:44,534 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,534 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,534 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,534 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,534 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,534 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,535 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,535 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,535 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,535 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,535 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,536 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,536 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,536 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,536 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,536 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,536 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,536 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,536 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,536 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,536 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-03-31 01:48:44,537 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-03-31 01:48:44,537 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,537 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,537 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,537 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,537 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,537 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,537 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-03-31 01:48:44,537 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,537 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,537 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,537 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,537 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,538 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,538 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,538 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-03-31 01:48:44,538 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,538 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,538 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,538 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,538 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-03-31 01:48:44,538 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-03-31 01:48:44,538 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,538 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-03-31 01:48:44,538 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,538 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,538 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,539 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,539 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,539 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,539 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,539 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,539 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,539 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,539 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-03-31 01:48:44,539 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,539 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,539 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-03-31 01:48:44,539 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,539 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,540 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,540 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,540 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,540 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,540 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,540 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-03-31 01:48:44,540 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,540 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,540 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,540 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,540 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,540 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,540 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,540 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,541 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,541 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,541 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,541 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,541 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,541 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,541 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,541 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,541 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,541 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,541 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,541 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,541 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,541 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-03-31 01:48:44,542 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,542 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,542 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,542 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-03-31 01:48:44,542 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,542 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,542 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,542 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,542 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,542 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,542 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-03-31 01:48:44,542 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,542 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-03-31 01:48:44,542 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,543 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,543 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,543 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,543 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,543 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-03-31 01:48:44,543 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,543 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,543 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,543 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,543 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,543 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,544 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-03-31 01:48:44,544 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,544 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,544 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,544 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,544 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,544 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,544 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-03-31 01:48:44,544 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,544 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,544 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,544 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,544 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,544 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,545 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-03-31 01:48:44,545 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,545 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-03-31 01:48:44,545 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,545 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,545 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,545 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,545 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,545 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-03-31 01:48:44,545 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,545 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-03-31 01:48:44,545 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-03-31 01:48:44,546 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,546 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,546 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,546 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,546 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,546 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-03-31 01:48:44,546 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-03-31 01:48:44,546 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,546 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,546 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,546 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,546 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,546 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,547 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-03-31 01:48:44,547 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,547 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,547 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,547 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,547 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-03-31 01:48:44,547 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,547 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,547 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,548 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,548 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,548 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,548 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,548 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,548 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,548 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,548 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,548 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,548 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,548 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,548 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,548 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-03-31 01:48:44,548 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-03-31 01:48:44,549 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,549 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,549 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,549 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-03-31 01:48:44,549 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,549 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,549 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,549 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,549 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,549 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,549 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,549 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,549 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,550 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,550 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,550 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,550 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,550 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,550 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,550 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,550 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,550 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,550 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,550 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,550 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,550 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,551 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,551 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,551 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-03-31 01:48:44,551 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,551 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,551 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,551 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,551 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,551 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,551 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,551 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,551 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-03-31 01:48:44,551 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,551 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,552 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,552 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,552 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,552 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,552 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,552 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,552 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-03-31 01:48:44,552 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,552 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,552 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,553 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,553 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,553 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,553 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,553 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,553 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,553 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,553 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,553 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,553 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,553 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-03-31 01:48:44,554 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,554 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,554 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-03-31 01:48:44,554 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,554 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,554 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-03-31 01:48:44,554 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,554 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,554 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,554 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,554 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,554 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,555 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,555 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,555 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,555 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,555 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,555 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,555 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,555 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,555 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-03-31 01:48:44,556 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-03-31 01:48:44,556 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,556 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,556 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,556 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,556 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-03-31 01:48:44,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-03-31 01:48:44,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-03-31 01:48:44,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-03-31 01:48:44,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-03-31 01:48:44,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-03-31 01:48:44,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-03-31 01:48:44,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-03-31 01:48:44,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-03-31 01:48:44,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-03-31 01:48:44,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-03-31 01:48:44,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-03-31 01:48:44,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-03-31 01:48:44,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-03-31 01:48:44,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-03-31 01:48:44,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-03-31 01:48:44,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-03-31 01:48:44,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2022-03-31 01:48:44,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-03-31 01:48:44,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-03-31 01:48:44,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-03-31 01:48:44,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-03-31 01:48:44,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-03-31 01:48:44,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-03-31 01:48:44,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-03-31 01:48:44,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-03-31 01:48:44,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-03-31 01:48:44,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-03-31 01:48:44,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-03-31 01:48:44,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-03-31 01:48:44,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-03-31 01:48:44,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-03-31 01:48:44,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-03-31 01:48:44,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-03-31 01:48:44,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-03-31 01:48:44,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-03-31 01:48:44,597 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-03-31 01:48:44,597 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,597 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,597 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,597 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,597 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,597 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,597 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-03-31 01:48:44,597 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,597 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,597 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,597 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,597 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,597 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,598 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,598 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-03-31 01:48:44,598 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,598 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,598 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,598 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,598 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-03-31 01:48:44,598 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-03-31 01:48:44,598 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,598 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-03-31 01:48:44,598 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,598 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,598 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,599 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,599 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,599 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,599 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,599 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,599 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,599 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,599 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-03-31 01:48:44,599 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,600 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,600 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-03-31 01:48:44,600 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,600 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,600 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,600 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,600 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,600 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,600 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,600 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-03-31 01:48:44,600 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,601 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,601 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,601 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,601 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,601 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,601 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,601 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,601 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,601 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,602 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,602 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,602 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,602 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,602 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,602 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,602 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,602 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,602 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,602 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,602 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,602 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-03-31 01:48:44,603 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,603 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,603 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,603 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-03-31 01:48:44,603 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,603 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,603 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,603 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,603 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,603 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,603 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-03-31 01:48:44,603 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,603 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-03-31 01:48:44,604 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,604 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,604 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,604 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,604 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,604 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-03-31 01:48:44,604 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,604 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,604 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,604 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,604 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,604 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,604 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-03-31 01:48:44,604 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,605 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,605 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,605 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,605 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,605 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,605 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-03-31 01:48:44,605 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,605 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,605 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,605 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,605 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,605 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,605 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-03-31 01:48:44,605 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,605 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-03-31 01:48:44,606 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,606 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,606 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,606 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,606 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,606 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-03-31 01:48:44,606 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,606 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-03-31 01:48:44,606 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-03-31 01:48:44,606 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,606 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,606 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,606 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,606 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,606 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-03-31 01:48:44,607 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-03-31 01:48:44,607 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,607 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,607 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,607 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,607 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,607 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,607 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-03-31 01:48:44,607 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,607 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,607 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,607 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,607 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-03-31 01:48:44,607 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,608 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,608 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,608 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,608 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,608 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,608 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,608 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,608 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,608 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,608 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,608 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,608 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,608 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,608 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,608 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-03-31 01:48:44,608 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-03-31 01:48:44,609 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,609 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,609 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,609 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-03-31 01:48:44,609 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,609 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,609 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,609 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,609 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,609 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,609 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,609 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,609 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,609 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,610 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,610 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,610 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,610 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,610 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,610 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,610 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,610 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,610 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,610 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,610 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,610 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,610 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,611 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,611 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-03-31 01:48:44,611 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,611 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,611 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,611 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,611 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,611 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,611 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,611 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,611 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-03-31 01:48:44,611 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,611 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,611 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,612 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,612 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,612 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,612 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,612 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,612 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-03-31 01:48:44,612 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,612 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,612 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,612 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,612 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,612 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,613 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,613 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,613 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,613 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,613 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,613 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,613 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,613 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-03-31 01:48:44,613 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,613 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,613 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-03-31 01:48:44,613 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,613 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,613 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-03-31 01:48:44,614 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,614 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,614 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,614 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,614 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,614 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,614 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,614 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,614 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,614 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,615 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,615 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,615 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,615 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,615 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-03-31 01:48:44,615 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-03-31 01:48:44,615 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,615 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,615 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,615 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,615 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,615 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,616 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,616 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,616 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,616 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,616 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,616 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,616 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,616 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,616 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,616 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,616 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,616 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,616 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,616 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,616 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,617 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,617 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-03-31 01:48:44,617 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,617 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,617 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,617 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,617 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,617 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,617 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,617 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-03-31 01:48:44,617 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,617 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,617 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,617 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,618 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,618 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-03-31 01:48:44,618 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,618 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,618 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-03-31 01:48:44,618 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,618 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,618 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,618 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-03-31 01:48:44,618 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,618 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,618 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-03-31 01:48:44,618 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,618 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-03-31 01:48:44,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-03-31 01:48:44,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-03-31 01:48:44,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-03-31 01:48:44,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-03-31 01:48:44,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-03-31 01:48:44,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-03-31 01:48:44,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-03-31 01:48:44,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-03-31 01:48:44,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,623 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,623 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,623 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,623 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,623 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 01:48:44,623 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,623 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,623 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-03-31 01:48:44,623 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,624 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 01:48:44,624 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,624 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 01:48:44,624 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,624 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,624 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,624 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,624 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,624 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,625 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,625 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 01:48:44,625 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,625 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,625 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,625 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,625 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,626 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,626 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-03-31 01:48:44,626 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-03-31 01:54:33,018 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2022-03-31 01:54:33,042 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2022-03-31 01:54:33,069 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/typing.py
2022-03-31 01:54:33,086 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
2022-03-31 02:12:37,247 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 02:12:37,248 - parso.python.diff - DEBUG - diff update: line_lengths old: 5; new: 1
2022-03-31 02:12:37,248 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:5] new[1:1]
2022-03-31 02:12:37,248 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 02:12:37,248 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 02:12:42,696 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 02:12:42,696 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-03-31 02:12:42,697 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-03-31 02:12:42,697 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 02:12:42,697 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 02:14:09,399 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 02:14:09,400 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 4
2022-03-31 02:14:09,400 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:4]
2022-03-31 02:14:09,401 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 4 (to 3 in part parser)
2022-03-31 02:14:09,401 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 02:15:34,238 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 02:15:34,238 - parso.python.diff - DEBUG - diff update: line_lengths old: 4; new: 6
2022-03-31 02:15:34,238 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:3] new[1:3]
2022-03-31 02:15:34,239 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 6 (to 5 in part parser)
2022-03-31 02:15:34,239 - parso.python.diff - DEBUG - diff update: -> code[replace] old[4:4] new[4:6]
2022-03-31 02:15:34,240 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 02:21:46,559 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 02:21:46,560 - parso.python.diff - DEBUG - diff update: line_lengths old: 6; new: 4
2022-03-31 02:21:46,560 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:6] new[1:4]
2022-03-31 02:21:46,561 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 4 (to 3 in part parser)
2022-03-31 02:21:46,561 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 02:23:19,251 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 02:23:19,252 - parso.python.diff - DEBUG - diff update: line_lengths old: 4; new: 1
2022-03-31 02:23:19,252 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:4] new[1:1]
2022-03-31 02:23:19,252 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 02:23:19,252 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 02:23:25,478 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 02:23:25,478 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-03-31 02:23:25,478 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-03-31 02:23:25,478 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 02:23:25,479 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 02:23:29,514 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 02:23:29,514 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-03-31 02:23:29,514 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-03-31 02:23:29,515 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 2 (to 0 in part parser)
2022-03-31 02:23:29,515 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 02:23:35,713 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 02:23:35,713 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-03-31 02:23:35,713 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-03-31 02:23:35,714 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 02:23:35,714 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 02:23:41,147 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 02:23:41,147 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-03-31 02:23:41,147 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-03-31 02:23:41,148 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 02:23:41,148 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 02:23:51,317 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 02:23:51,317 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-03-31 02:23:51,317 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-03-31 02:23:51,318 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 02:23:51,318 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 02:25:47,258 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 02:25:47,259 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 14
2022-03-31 02:25:47,259 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:14]
2022-03-31 02:25:47,261 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 14 (to 13 in part parser)
2022-03-31 02:25:47,261 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 02:28:36,959 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 02:28:36,960 - parso.python.diff - DEBUG - diff update: line_lengths old: 14; new: 17
2022-03-31 02:28:36,960 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:12] new[1:12]
2022-03-31 02:28:36,960 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:13] new[1:4]
2022-03-31 02:28:36,963 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 17 (to 16 in part parser)
2022-03-31 02:28:36,963 - parso.python.diff - DEBUG - diff update: -> code[insert] old[13:12] new[13:14]
2022-03-31 02:28:36,963 - parso.python.diff - DEBUG - diff update: -> code[equal] old[13:13] new[15:15]
2022-03-31 02:28:36,963 - parso.python.diff - DEBUG - diff update: -> code[replace] old[14:14] new[16:17]
2022-03-31 02:28:36,963 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 02:28:42,663 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 02:28:42,663 - parso.python.diff - DEBUG - diff update: line_lengths old: 17; new: 18
2022-03-31 02:28:42,663 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:16] new[1:16]
2022-03-31 02:28:42,664 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:16] new[1:4]
2022-03-31 02:28:42,667 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 18 (to 17 in part parser)
2022-03-31 02:28:42,667 - parso.python.diff - DEBUG - diff update: -> code[replace] old[17:17] new[17:18]
2022-03-31 02:28:42,668 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 02:52:41,721 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 02:52:41,723 - parso.python.diff - DEBUG - diff update: line_lengths old: 18; new: 24
2022-03-31 02:52:41,723 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:10] new[1:10]
2022-03-31 02:52:41,724 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:17] new[1:4]
2022-03-31 02:52:41,726 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 24 (to 23 in part parser)
2022-03-31 02:52:41,726 - parso.python.diff - DEBUG - diff update: -> code[insert] old[11:10] new[11:12]
2022-03-31 02:52:41,726 - parso.python.diff - DEBUG - diff update: -> code[equal] old[11:17] new[13:19]
2022-03-31 02:52:41,726 - parso.python.diff - DEBUG - diff update: -> code[replace] old[18:18] new[20:24]
2022-03-31 02:52:41,727 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 02:52:50,297 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 02:52:50,297 - parso.python.diff - DEBUG - diff update: line_lengths old: 24; new: 25
2022-03-31 02:52:50,297 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:23] new[1:23]
2022-03-31 02:52:50,298 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:23] new[1:4]
2022-03-31 02:52:50,301 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 25 (to 24 in part parser)
2022-03-31 02:52:50,302 - parso.python.diff - DEBUG - diff update: -> code[replace] old[24:24] new[24:25]
2022-03-31 02:52:50,302 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 02:54:00,791 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 02:54:00,791 - parso.python.diff - DEBUG - diff update: line_lengths old: 25; new: 27
2022-03-31 02:54:00,791 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:10] new[1:10]
2022-03-31 02:54:00,792 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:24] new[1:4]
2022-03-31 02:54:00,796 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 27 (to 26 in part parser)
2022-03-31 02:54:00,796 - parso.python.diff - DEBUG - diff update: -> code[replace] old[11:11] new[11:11]
2022-03-31 02:54:00,796 - parso.python.diff - DEBUG - diff update: -> code[equal] old[12:24] new[12:24]
2022-03-31 02:54:00,796 - parso.python.diff - DEBUG - diff update: -> code[replace] old[25:25] new[25:27]
2022-03-31 02:54:00,796 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 02:54:00,807 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/re.py
2022-03-31 02:54:00,819 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/re.pyi
2022-03-31 02:54:04,255 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 02:54:04,255 - parso.python.diff - DEBUG - diff update: line_lengths old: 27; new: 27
2022-03-31 02:54:04,255 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:26] new[1:26]
2022-03-31 02:54:04,256 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:26] new[1:4]
2022-03-31 02:54:04,259 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 27 (to 26 in part parser)
2022-03-31 02:54:04,259 - parso.python.diff - DEBUG - diff update: -> code[replace] old[27:27] new[27:27]
2022-03-31 02:54:04,259 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 02:54:54,927 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 02:54:54,927 - parso.python.diff - DEBUG - diff update: line_lengths old: 27; new: 27
2022-03-31 02:54:54,927 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:26] new[1:26]
2022-03-31 02:54:54,928 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:26] new[1:4]
2022-03-31 02:54:54,931 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 27 (to 26 in part parser)
2022-03-31 02:54:54,931 - parso.python.diff - DEBUG - diff update: -> code[replace] old[27:27] new[27:27]
2022-03-31 02:54:54,931 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 03:00:12,608 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 03:00:12,608 - parso.python.diff - DEBUG - diff update: line_lengths old: 27; new: 26
2022-03-31 03:00:12,608 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:19] new[1:19]
2022-03-31 03:00:12,609 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:26] new[1:4]
2022-03-31 03:00:12,611 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 26 (to 25 in part parser)
2022-03-31 03:00:12,611 - parso.python.diff - DEBUG - diff update: -> code[insert] old[20:19] new[20:20]
2022-03-31 03:00:12,611 - parso.python.diff - DEBUG - diff update: -> code[equal] old[20:20] new[21:21]
2022-03-31 03:00:12,611 - parso.python.diff - DEBUG - diff update: -> code[insert] old[21:20] new[22:22]
2022-03-31 03:00:12,611 - parso.python.diff - DEBUG - diff update: -> code[equal] old[21:23] new[23:25]
2022-03-31 03:00:12,611 - parso.python.diff - DEBUG - diff update: -> code[replace] old[24:27] new[26:26]
2022-03-31 03:00:12,612 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 03:00:18,473 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 03:00:18,474 - parso.python.diff - DEBUG - diff update: line_lengths old: 26; new: 27
2022-03-31 03:00:18,474 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:25] new[1:25]
2022-03-31 03:00:18,474 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:25] new[1:4]
2022-03-31 03:00:18,478 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 27 (to 26 in part parser)
2022-03-31 03:00:18,478 - parso.python.diff - DEBUG - diff update: -> code[replace] old[26:26] new[26:27]
2022-03-31 03:00:18,478 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 03:01:05,409 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 03:01:05,410 - parso.python.diff - DEBUG - diff update: line_lengths old: 27; new: 33
2022-03-31 03:01:05,410 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:26] new[1:26]
2022-03-31 03:01:05,411 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:26] new[1:4]
2022-03-31 03:01:05,415 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 33 (to 32 in part parser)
2022-03-31 03:01:05,415 - parso.python.diff - DEBUG - diff update: -> code[replace] old[27:27] new[27:33]
2022-03-31 03:01:05,415 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 03:02:53,085 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 03:02:53,085 - parso.python.diff - DEBUG - diff update: line_lengths old: 33; new: 35
2022-03-31 03:02:53,085 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:18] new[1:18]
2022-03-31 03:02:53,085 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:32] new[1:4]
2022-03-31 03:02:53,090 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 35 (to 34 in part parser)
2022-03-31 03:02:53,090 - parso.python.diff - DEBUG - diff update: -> code[insert] old[19:18] new[19:19]
2022-03-31 03:02:53,090 - parso.python.diff - DEBUG - diff update: -> code[equal] old[19:19] new[20:20]
2022-03-31 03:02:53,090 - parso.python.diff - DEBUG - diff update: -> code[delete] old[20:22] new[21:20]
2022-03-31 03:02:53,090 - parso.python.diff - DEBUG - diff update: -> code[equal] old[23:32] new[21:30]
2022-03-31 03:02:53,090 - parso.python.diff - DEBUG - diff update: -> code[replace] old[33:33] new[31:35]
2022-03-31 03:02:53,090 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 03:11:05,942 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 03:11:05,943 - parso.python.diff - DEBUG - diff update: line_lengths old: 35; new: 4
2022-03-31 03:11:05,943 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:35] new[1:4]
2022-03-31 03:11:05,944 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 4 (to 3 in part parser)
2022-03-31 03:11:05,944 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 03:11:14,169 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 03:11:14,169 - parso.python.diff - DEBUG - diff update: line_lengths old: 4; new: 4
2022-03-31 03:11:14,169 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:3] new[1:3]
2022-03-31 03:11:14,170 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:2] new[1:2]
2022-03-31 03:11:14,171 - parso.python.diff - DEBUG - diff _parse: parse_part from 3 to 4 (to 3 in part parser)
2022-03-31 03:11:14,171 - parso.python.diff - DEBUG - diff update: -> code[replace] old[4:4] new[4:4]
2022-03-31 03:11:14,171 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 03:11:17,567 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 03:11:17,567 - parso.python.diff - DEBUG - diff update: line_lengths old: 4; new: 4
2022-03-31 03:11:17,567 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:3] new[1:3]
2022-03-31 03:11:17,567 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:2] new[1:2]
2022-03-31 03:11:17,568 - parso.python.diff - DEBUG - diff _parse: parse_part from 3 to 4 (to 3 in part parser)
2022-03-31 03:11:17,568 - parso.python.diff - DEBUG - diff update: -> code[replace] old[4:4] new[4:4]
2022-03-31 03:11:17,569 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 03:12:23,212 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 03:12:23,212 - parso.python.diff - DEBUG - diff update: line_lengths old: 4; new: 40
2022-03-31 03:12:23,212 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:4] new[1:40]
2022-03-31 03:12:23,217 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 40 (to 39 in part parser)
2022-03-31 03:12:23,218 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 03:17:25,074 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 03:17:25,075 - parso.python.diff - DEBUG - diff update: line_lengths old: 40; new: 39
2022-03-31 03:17:25,075 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:13] new[1:13]
2022-03-31 03:17:25,075 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:39] new[1:10]
2022-03-31 03:17:25,078 - parso.python.diff - DEBUG - diff _parse: parse_part from 11 to 39 (to 38 in part parser)
2022-03-31 03:17:25,078 - parso.python.diff - DEBUG - diff update: -> code[delete] old[14:14] new[14:13]
2022-03-31 03:17:25,078 - parso.python.diff - DEBUG - diff update: -> code[equal] old[15:39] new[14:38]
2022-03-31 03:17:25,078 - parso.python.diff - DEBUG - diff update: -> code[replace] old[40:40] new[39:39]
2022-03-31 03:17:25,078 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 03:21:06,151 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 03:21:06,152 - parso.python.diff - DEBUG - diff update: line_lengths old: 39; new: 32
2022-03-31 03:21:06,152 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:14] new[1:14]
2022-03-31 03:21:06,152 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:38] new[1:10]
2022-03-31 03:21:06,154 - parso.python.diff - DEBUG - diff _parse: parse_part from 11 to 15 (to 16 in part parser)
2022-03-31 03:21:06,154 - parso.python.diff - DEBUG - diff update: -> code[replace] old[15:15] new[15:16]
2022-03-31 03:21:06,156 - parso.python.diff - DEBUG - diff _parse: parse_part from 16 to 32 (to 31 in part parser)
2022-03-31 03:21:06,156 - parso.python.diff - DEBUG - diff update: -> code[equal] old[16:17] new[17:18]
2022-03-31 03:21:06,156 - parso.python.diff - DEBUG - diff update: -> code[delete] old[18:19] new[19:18]
2022-03-31 03:21:06,156 - parso.python.diff - DEBUG - diff update: -> code[equal] old[20:32] new[19:31]
2022-03-31 03:21:06,156 - parso.python.diff - DEBUG - diff update: -> code[replace] old[33:39] new[32:32]
2022-03-31 03:21:06,156 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 03:21:10,913 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 03:21:10,914 - parso.python.diff - DEBUG - diff update: line_lengths old: 32; new: 33
2022-03-31 03:21:10,914 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:31] new[1:31]
2022-03-31 03:21:10,914 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:31] new[1:15]
2022-03-31 03:21:10,917 - parso.python.diff - DEBUG - diff _parse: parse_part from 16 to 33 (to 32 in part parser)
2022-03-31 03:21:10,917 - parso.python.diff - DEBUG - diff update: -> code[replace] old[32:32] new[32:33]
2022-03-31 03:21:10,918 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 03:22:33,621 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 03:22:33,622 - parso.python.diff - DEBUG - diff update: line_lengths old: 33; new: 30
2022-03-31 03:22:33,622 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:14] new[1:14]
2022-03-31 03:22:33,622 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:32] new[1:10]
2022-03-31 03:22:33,623 - parso.python.diff - DEBUG - diff _parse: parse_part from 11 to 16 (to 17 in part parser)
2022-03-31 03:22:33,623 - parso.python.diff - DEBUG - diff update: -> code[insert] old[15:14] new[15:15]
2022-03-31 03:22:33,623 - parso.python.diff - DEBUG - diff update: -> code[equal] old[15:28] new[16:29]
2022-03-31 03:22:33,625 - parso.python.diff - DEBUG - diff _parse: parse_part from 17 to 30 (to 29 in part parser)
2022-03-31 03:22:33,625 - parso.python.diff - DEBUG - diff update: -> code[replace] old[29:33] new[30:30]
2022-03-31 03:22:33,625 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 03:22:37,056 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 03:22:37,056 - parso.python.diff - DEBUG - diff update: line_lengths old: 30; new: 31
2022-03-31 03:22:37,056 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:29] new[1:29]
2022-03-31 03:22:37,056 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:29] new[1:16]
2022-03-31 03:22:37,059 - parso.python.diff - DEBUG - diff _parse: parse_part from 17 to 31 (to 30 in part parser)
2022-03-31 03:22:37,059 - parso.python.diff - DEBUG - diff update: -> code[replace] old[30:30] new[30:31]
2022-03-31 03:22:37,059 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 03:23:15,597 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 03:23:15,598 - parso.python.diff - DEBUG - diff update: line_lengths old: 31; new: 24
2022-03-31 03:23:15,598 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:23] new[1:23]
2022-03-31 03:23:15,598 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:30] new[1:16]
2022-03-31 03:23:15,599 - parso.python.diff - DEBUG - diff _parse: parse_part from 17 to 24 (to 23 in part parser)
2022-03-31 03:23:15,599 - parso.python.diff - DEBUG - diff update: -> code[replace] old[24:31] new[24:24]
2022-03-31 03:23:15,600 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 03:24:28,960 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 03:24:28,961 - parso.python.diff - DEBUG - diff update: line_lengths old: 24; new: 27
2022-03-31 03:24:28,961 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:23] new[1:23]
2022-03-31 03:24:28,961 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:23] new[1:16]
2022-03-31 03:24:28,964 - parso.python.diff - DEBUG - diff _parse: parse_part from 17 to 27 (to 26 in part parser)
2022-03-31 03:24:28,964 - parso.python.diff - DEBUG - diff update: -> code[insert] old[24:23] new[24:26]
2022-03-31 03:24:28,964 - parso.python.diff - DEBUG - diff update: -> code[equal] old[24:24] new[27:27]
2022-03-31 03:24:28,964 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 03:24:59,268 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 03:24:59,269 - parso.python.diff - DEBUG - diff update: line_lengths old: 27; new: 1
2022-03-31 03:24:59,269 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:27] new[1:1]
2022-03-31 03:24:59,269 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 03:24:59,269 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 03:25:05,726 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 03:25:05,726 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-03-31 03:25:05,726 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-03-31 03:25:05,727 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 03:25:05,727 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 03:25:44,223 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 03:25:44,224 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 4
2022-03-31 03:25:44,224 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:4]
2022-03-31 03:25:44,226 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 4 (to 3 in part parser)
2022-03-31 03:25:44,226 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 03:25:45,235 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 03:25:45,236 - parso.python.diff - DEBUG - diff update: line_lengths old: 4; new: 4
2022-03-31 03:25:45,236 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:3] new[1:3]
2022-03-31 03:25:45,236 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:2] new[1:2]
2022-03-31 03:25:45,237 - parso.python.diff - DEBUG - diff _parse: parse_part from 3 to 4 (to 3 in part parser)
2022-03-31 03:25:45,237 - parso.python.diff - DEBUG - diff update: -> code[replace] old[4:4] new[4:4]
2022-03-31 03:25:45,237 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 03:31:00,778 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 03:31:00,778 - parso.python.diff - DEBUG - diff update: line_lengths old: 4; new: 46
2022-03-31 03:31:00,778 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:2] new[1:25]
2022-03-31 03:31:00,782 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 46 (to 45 in part parser)
2022-03-31 03:31:00,782 - parso.python.diff - DEBUG - diff update: -> code[equal] old[3:3] new[26:26]
2022-03-31 03:31:00,782 - parso.python.diff - DEBUG - diff update: -> code[replace] old[4:4] new[27:46]
2022-03-31 03:31:00,782 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 21:02:15,003 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-03-31 21:02:24,090 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-03-31 21:02:24,091 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,091 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,091 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,091 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-03-31 21:02:24,091 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-03-31 21:02:24,091 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,091 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,091 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,091 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-03-31 21:02:24,092 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,092 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,092 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-03-31 21:02:24,092 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,092 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,093 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,093 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,093 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,093 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,093 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,093 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,093 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,093 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,093 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,093 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,093 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,093 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,093 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,093 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,094 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,094 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,094 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,094 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,094 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,094 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,094 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-03-31 21:02:24,094 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-03-31 21:02:24,094 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,094 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,094 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-03-31 21:02:24,094 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,094 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,094 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,094 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,095 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,095 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,095 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,095 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,095 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-03-31 21:02:24,095 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,095 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,095 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,095 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,095 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-03-31 21:02:24,095 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,095 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,095 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,095 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,096 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,096 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,096 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,096 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-03-31 21:02:24,096 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,096 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,096 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,096 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,096 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-03-31 21:02:24,096 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,096 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,096 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,096 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,096 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,096 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-03-31 21:02:24,097 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,097 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,097 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,097 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,097 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,097 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,097 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,097 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,097 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,097 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,097 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,097 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,097 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,097 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,097 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,098 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,098 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:24,098 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-03-31 21:02:24,098 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,098 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-03-31 21:02:24,098 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-03-31 21:02:24,098 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,098 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,098 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,098 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,098 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,098 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,098 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,098 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,098 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,099 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-03-31 21:02:24,099 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,099 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-03-31 21:02:24,099 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,099 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,099 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,099 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,099 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,099 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,099 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,099 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,099 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,099 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:24,099 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,099 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,100 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,100 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,100 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,100 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,100 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,100 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,100 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:24,100 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,100 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-03-31 21:02:24,100 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-03-31 21:02:24,100 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,100 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,100 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,100 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,100 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,101 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,101 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-03-31 21:02:24,101 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,101 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,101 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,101 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,101 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,101 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,101 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,101 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-03-31 21:02:24,101 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,101 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,101 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,101 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,101 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-03-31 21:02:24,102 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-03-31 21:02:24,102 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,102 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-03-31 21:02:24,102 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,102 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,102 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,102 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,102 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,102 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,102 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,102 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,102 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,102 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,102 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-03-31 21:02:24,102 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,103 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,103 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-03-31 21:02:24,103 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,103 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,103 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,103 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,103 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,103 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,103 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,103 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-03-31 21:02:24,103 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,103 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,103 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,103 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,103 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,104 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,104 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,104 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,104 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,104 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,104 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,104 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,104 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,104 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,104 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,104 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,104 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,105 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,105 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,105 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,105 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,105 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-03-31 21:02:24,105 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,105 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:24,105 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,105 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-03-31 21:02:24,105 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,105 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,105 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,105 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,105 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,105 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,106 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-03-31 21:02:24,106 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,106 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-03-31 21:02:24,106 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,106 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,106 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,106 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,106 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,106 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-03-31 21:02:24,106 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,106 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,106 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,106 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,107 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,107 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,107 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-03-31 21:02:24,107 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,107 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,107 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,107 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,107 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,107 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,107 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-03-31 21:02:24,107 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,107 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,107 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-03-31 21:02:24,107 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,107 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,108 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,108 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-03-31 21:02:24,108 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,108 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-03-31 21:02:24,108 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,108 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,108 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,108 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,108 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,108 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-03-31 21:02:24,108 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,108 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-03-31 21:02:24,108 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-03-31 21:02:24,108 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,108 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,109 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,109 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,109 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,109 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-03-31 21:02:24,109 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-03-31 21:02:24,109 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,109 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,109 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,109 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,109 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,109 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,109 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-03-31 21:02:24,109 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,109 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,109 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,110 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,110 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-03-31 21:02:24,110 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,110 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,110 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,110 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,110 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,110 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,110 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,110 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,110 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,110 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,110 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,110 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,110 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,111 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,111 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,111 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-03-31 21:02:24,111 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-03-31 21:02:24,111 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,111 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,111 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,111 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-03-31 21:02:24,111 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,111 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,111 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,111 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-03-31 21:02:24,111 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,111 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,112 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,112 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,112 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,112 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,112 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,112 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,112 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,112 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,112 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,112 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,112 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,112 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,112 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,112 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,112 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,113 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,113 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,113 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:24,113 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-03-31 21:02:24,113 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,113 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,113 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,113 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,113 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,113 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,113 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:24,113 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,113 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-03-31 21:02:24,113 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,113 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,114 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,114 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,114 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,114 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,114 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,114 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,114 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-03-31 21:02:24,114 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,114 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,114 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,114 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,114 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,114 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,114 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,114 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-03-31 21:02:24,115 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,115 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,115 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,115 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,115 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,116 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-03-31 21:02:24,116 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,116 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,116 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-03-31 21:02:24,116 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,116 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,116 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-03-31 21:02:24,116 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,116 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,116 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,117 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,117 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,117 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,117 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,117 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,117 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,117 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,117 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,117 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,117 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,117 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,118 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-03-31 21:02:24,118 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-03-31 21:02:24,118 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,118 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,118 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,118 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,118 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,118 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,118 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,118 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,118 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,118 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,119 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,119 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,119 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,119 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,119 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,119 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,119 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,119 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,119 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,119 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,119 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,119 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,119 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-03-31 21:02:24,119 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,119 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,120 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,120 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,120 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,120 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,120 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,120 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-03-31 21:02:24,120 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,120 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,120 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,120 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,120 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,120 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-03-31 21:02:24,120 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,120 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,120 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-03-31 21:02:24,121 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,121 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,121 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,121 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-03-31 21:02:24,121 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,121 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,121 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-03-31 21:02:24,121 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,121 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,121 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,121 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,121 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,121 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,121 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,121 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-03-31 21:02:24,122 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,122 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,122 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,122 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,122 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,122 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-03-31 21:02:24,122 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,122 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,122 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,122 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,122 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,122 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,122 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-03-31 21:02:24,122 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,122 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,123 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,123 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,123 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,123 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,123 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,123 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,123 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,123 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-03-31 21:02:24,123 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,123 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,123 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,123 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,123 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,123 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,123 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,124 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,124 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,124 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-03-31 21:02:24,124 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,124 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,124 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,124 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-03-31 21:02:24,124 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,124 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:24,124 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,124 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,124 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,124 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,124 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-03-31 21:02:24,124 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-03-31 21:02:24,125 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-03-31 21:02:24,125 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,125 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,125 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,125 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:24,125 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,125 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,125 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,125 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,125 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,125 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,125 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,125 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:24,125 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,125 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,126 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-03-31 21:02:24,126 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,126 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:24,126 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,126 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:24,126 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,126 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,126 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,126 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,126 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,126 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,126 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-03-31 21:02:24,126 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:24,126 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,126 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,126 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,127 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,127 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,127 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,127 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:24,127 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-03-31 21:02:43,234 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2022-03-31 21:02:43,234 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,235 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,235 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,235 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-03-31 21:02:43,235 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-03-31 21:02:43,235 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,235 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,235 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,235 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-03-31 21:02:43,235 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,235 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,235 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-03-31 21:02:43,235 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,235 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,236 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,236 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,236 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,236 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,236 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,236 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,236 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,236 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,236 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,236 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,236 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,236 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,236 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,237 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,237 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,237 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,237 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,237 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,237 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,237 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,237 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-03-31 21:02:43,237 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-03-31 21:02:43,237 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,237 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,238 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-03-31 21:02:43,238 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,238 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,238 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,238 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,239 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,239 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,239 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,239 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,239 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-03-31 21:02:43,239 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,241 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,241 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,241 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,241 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-03-31 21:02:43,242 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,242 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,242 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,242 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,242 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,242 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,242 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,242 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-03-31 21:02:43,242 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,243 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,243 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,243 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,243 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-03-31 21:02:43,243 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,243 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,243 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,244 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,244 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,244 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-03-31 21:02:43,244 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,244 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,244 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,244 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,244 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-03-31 21:02:43,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-03-31 21:02:43,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-03-31 21:02:43,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-03-31 21:02:43,247 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,247 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-03-31 21:02:43,247 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,247 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,247 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,247 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,247 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,247 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,247 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,248 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,248 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,249 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,249 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,249 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,249 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,249 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,250 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,250 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,250 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,250 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,250 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,250 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,250 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-03-31 21:02:43,251 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-03-31 21:02:43,251 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,251 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,251 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,251 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,251 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,252 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,252 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-03-31 21:02:43,252 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,252 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,252 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,252 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,252 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,252 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,252 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,253 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-03-31 21:02:43,253 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,253 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,253 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,253 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,253 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-03-31 21:02:43,253 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-03-31 21:02:43,253 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,254 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-03-31 21:02:43,254 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,254 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,254 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,254 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,254 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,254 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,255 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,255 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,255 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,255 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,255 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-03-31 21:02:43,255 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,255 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,255 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-03-31 21:02:43,255 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-03-31 21:02:43,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-03-31 21:02:43,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-03-31 21:02:43,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-03-31 21:02:43,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-03-31 21:02:43,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-03-31 21:02:43,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-03-31 21:02:43,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-03-31 21:02:43,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,261 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,261 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,261 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-03-31 21:02:43,261 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,261 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-03-31 21:02:43,261 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,261 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,261 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,261 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-03-31 21:02:43,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-03-31 21:02:43,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-03-31 21:02:43,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-03-31 21:02:43,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-03-31 21:02:43,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-03-31 21:02:43,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-03-31 21:02:43,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,264 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,264 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,264 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,264 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,264 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,264 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,264 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,264 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,264 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,264 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-03-31 21:02:43,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-03-31 21:02:43,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-03-31 21:02:43,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,266 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,266 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,266 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,266 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,266 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,266 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,266 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,266 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,266 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,266 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,266 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,266 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-03-31 21:02:43,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,268 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,268 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,268 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,268 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,268 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,268 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,268 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-03-31 21:02:43,268 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,268 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,269 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,269 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,269 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,269 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,269 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,269 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,269 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-03-31 21:02:43,269 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,269 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,269 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-03-31 21:02:43,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-03-31 21:02:43,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-03-31 21:02:43,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-03-31 21:02:43,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-03-31 21:02:43,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-03-31 21:02:43,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-03-31 21:02:43,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-03-31 21:02:43,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-03-31 21:02:43,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-03-31 21:02:43,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-03-31 21:02:43,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-03-31 21:02:43,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-03-31 21:02:43,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,277 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,277 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,277 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,277 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-03-31 21:02:43,277 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,277 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,277 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,277 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,277 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,277 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,278 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,278 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,278 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,278 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-03-31 21:02:43,278 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,278 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,278 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,278 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,278 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,278 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,278 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,278 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,278 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,278 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-03-31 21:02:43,279 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,279 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,279 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,279 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-03-31 21:02:43,279 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,279 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,279 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,279 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,279 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,279 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,279 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-03-31 21:02:43,279 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-03-31 21:02:43,279 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-03-31 21:02:43,279 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,280 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,280 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,280 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,280 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,280 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,280 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,280 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,280 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,280 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,280 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,280 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,280 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,280 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,280 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-03-31 21:02:43,280 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,281 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,281 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,281 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,281 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,281 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,281 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,281 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,281 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,281 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,281 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,281 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,281 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,281 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,281 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,281 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,282 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,282 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,282 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,282 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-03-31 21:02:43,299 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2022-03-31 21:02:43,300 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,300 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,300 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,300 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-03-31 21:02:43,300 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-03-31 21:02:43,300 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,300 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,300 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,300 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-03-31 21:02:43,300 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,300 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,300 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-03-31 21:02:43,300 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,301 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,301 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,301 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,301 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,301 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,301 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,301 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,301 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,301 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,301 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,301 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,301 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,301 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,301 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,302 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,302 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,302 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,302 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,302 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,302 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,302 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,302 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-03-31 21:02:43,302 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-03-31 21:02:43,302 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,302 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,302 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-03-31 21:02:43,302 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,302 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,302 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,303 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,303 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,303 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,303 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,303 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,303 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-03-31 21:02:43,303 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,303 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,303 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,303 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,303 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-03-31 21:02:43,303 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,303 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,303 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,303 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,304 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,304 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,304 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,304 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-03-31 21:02:43,304 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,304 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,304 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,304 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,304 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-03-31 21:02:43,304 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,304 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,304 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,304 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,305 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,305 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-03-31 21:02:43,305 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,305 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,305 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,305 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,305 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,305 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,305 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,305 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,305 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,305 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,306 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,306 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,306 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,306 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,306 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,306 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,306 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,306 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-03-31 21:02:43,306 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,306 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-03-31 21:02:43,306 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-03-31 21:02:43,307 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,307 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,307 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,307 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,307 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,307 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,307 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,307 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,307 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,308 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-03-31 21:02:43,308 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,308 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-03-31 21:02:43,308 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,308 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,308 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,308 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,308 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,308 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,308 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,308 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-03-31 21:02:43,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-03-31 21:02:43,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-03-31 21:02:43,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-03-31 21:02:43,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-03-31 21:02:43,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-03-31 21:02:43,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-03-31 21:02:43,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-03-31 21:02:43,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-03-31 21:02:43,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-03-31 21:02:43,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-03-31 21:02:43,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-03-31 21:02:43,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-03-31 21:02:43,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-03-31 21:02:43,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-03-31 21:02:43,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-03-31 21:02:43,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-03-31 21:02:43,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-03-31 21:02:43,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-03-31 21:02:43,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-03-31 21:02:43,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-03-31 21:02:43,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-03-31 21:02:43,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-03-31 21:02:43,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-03-31 21:02:43,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-03-31 21:02:43,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-03-31 21:02:43,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-03-31 21:02:43,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-03-31 21:02:43,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-03-31 21:02:43,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-03-31 21:02:43,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-03-31 21:02:43,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-03-31 21:02:43,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-03-31 21:02:43,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-03-31 21:02:43,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-03-31 21:02:43,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-03-31 21:02:43,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-03-31 21:02:43,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-03-31 21:02:43,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-03-31 21:02:43,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-03-31 21:02:43,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-03-31 21:02:43,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-03-31 21:02:43,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-03-31 21:02:43,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-03-31 21:02:43,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-03-31 21:02:43,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-03-31 21:02:43,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-03-31 21:02:43,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-03-31 21:02:43,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-03-31 21:02:43,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-03-31 21:02:43,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-03-31 21:02:43,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-03-31 21:02:43,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-03-31 21:02:43,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-03-31 21:02:43,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-03-31 21:02:43,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-03-31 21:02:43,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-03-31 21:02:43,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-03-31 21:02:43,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-03-31 21:43:00,371 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2022-03-31 21:43:00,570 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2022-03-31 21:43:06,674 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 21:43:06,675 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-03-31 21:43:06,675 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-03-31 21:43:06,676 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 21:43:06,676 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 21:43:17,734 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 21:43:17,734 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-03-31 21:43:17,734 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-03-31 21:43:17,735 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 21:43:17,735 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 21:43:24,675 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 21:43:24,675 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-03-31 21:43:24,675 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-03-31 21:43:24,676 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 21:43:24,676 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 22:59:00,389 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 22:59:00,390 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-03-31 22:59:00,390 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-03-31 22:59:00,390 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 22:59:00,390 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 22:59:29,327 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 22:59:29,327 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-03-31 22:59:29,327 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-03-31 22:59:29,328 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 22:59:29,328 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 22:59:32,996 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 22:59:32,996 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-03-31 22:59:32,996 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-03-31 22:59:32,996 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 22:59:32,996 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 22:59:48,555 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 22:59:48,555 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 3
2022-03-31 22:59:48,555 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:3]
2022-03-31 22:59:48,556 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 3 (to 2 in part parser)
2022-03-31 22:59:48,556 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 22:59:52,457 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 22:59:52,458 - parso.python.diff - DEBUG - diff update: line_lengths old: 3; new: 4
2022-03-31 22:59:52,458 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:2] new[1:2]
2022-03-31 22:59:52,458 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 4 (to 3 in part parser)
2022-03-31 22:59:52,459 - parso.python.diff - DEBUG - diff update: -> code[replace] old[3:3] new[3:4]
2022-03-31 22:59:52,459 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 23:00:05,486 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 23:00:05,486 - parso.python.diff - DEBUG - diff update: line_lengths old: 4; new: 4
2022-03-31 23:00:05,486 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:4] new[1:4]
2022-03-31 23:00:05,488 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 4 (to 3 in part parser)
2022-03-31 23:00:05,488 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 23:00:08,253 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 23:00:08,254 - parso.python.diff - DEBUG - diff update: line_lengths old: 4; new: 4
2022-03-31 23:00:08,254 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:3] new[1:3]
2022-03-31 23:00:08,255 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 4 (to 3 in part parser)
2022-03-31 23:00:08,255 - parso.python.diff - DEBUG - diff update: -> code[replace] old[4:4] new[4:4]
2022-03-31 23:00:08,255 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 23:00:16,916 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 23:00:16,916 - parso.python.diff - DEBUG - diff update: line_lengths old: 4; new: 1
2022-03-31 23:00:16,916 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:4] new[1:1]
2022-03-31 23:00:16,917 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 23:00:16,917 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 23:00:22,102 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 23:00:22,103 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-03-31 23:00:22,103 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-03-31 23:00:22,103 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 23:00:22,116 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 23:10:52,102 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 23:10:52,103 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 7
2022-03-31 23:10:52,104 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:7]
2022-03-31 23:10:52,105 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 7 (to 6 in part parser)
2022-03-31 23:10:52,106 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 23:12:31,553 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 23:12:31,554 - parso.python.diff - DEBUG - diff update: line_lengths old: 7; new: 1
2022-03-31 23:12:31,554 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:7] new[1:1]
2022-03-31 23:12:31,554 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 23:12:31,555 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 23:12:33,162 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 23:12:33,163 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-03-31 23:12:33,163 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-03-31 23:12:33,163 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-03-31 23:12:33,163 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 23:12:57,090 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 23:12:57,091 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 2
2022-03-31 23:12:57,091 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:2]
2022-03-31 23:12:57,091 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 2 (to 1 in part parser)
2022-03-31 23:12:57,091 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 23:13:09,916 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 23:13:09,916 - parso.python.diff - DEBUG - diff update: line_lengths old: 2; new: 2
2022-03-31 23:13:09,916 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:1] new[1:1]
2022-03-31 23:13:09,917 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 2 (to 1 in part parser)
2022-03-31 23:13:09,917 - parso.python.diff - DEBUG - diff update: -> code[replace] old[2:2] new[2:2]
2022-03-31 23:13:09,918 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 23:13:15,856 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 23:13:15,856 - parso.python.diff - DEBUG - diff update: line_lengths old: 2; new: 2
2022-03-31 23:13:15,857 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:1] new[1:1]
2022-03-31 23:13:15,857 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 2 (to 1 in part parser)
2022-03-31 23:13:15,857 - parso.python.diff - DEBUG - diff update: -> code[replace] old[2:2] new[2:2]
2022-03-31 23:13:15,857 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 23:13:46,097 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 23:13:46,097 - parso.python.diff - DEBUG - diff update: line_lengths old: 2; new: 5
2022-03-31 23:13:46,097 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:1] new[1:1]
2022-03-31 23:13:46,098 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 2 (to 4 in part parser)
2022-03-31 23:13:46,098 - parso.python.diff - DEBUG - diff update: -> code[replace] old[2:2] new[2:5]
2022-03-31 23:13:46,098 - parso.python.diff - DEBUG - diff _parse: parse_part from 3 to 5 (to 4 in part parser)
2022-03-31 23:13:46,098 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 23:13:47,255 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 23:13:47,256 - parso.python.diff - DEBUG - diff update: line_lengths old: 5; new: 5
2022-03-31 23:13:47,256 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:4] new[1:4]
2022-03-31 23:13:47,256 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[2:2] new[1:2]
2022-03-31 23:13:47,256 - parso.python.diff - DEBUG - diff _parse: parse_part from 3 to 5 (to 4 in part parser)
2022-03-31 23:13:47,257 - parso.python.diff - DEBUG - diff update: -> code[replace] old[5:5] new[5:5]
2022-03-31 23:13:47,257 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 23:20:41,955 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 23:20:41,956 - parso.python.diff - DEBUG - diff update: line_lengths old: 5; new: 7
2022-03-31 23:20:41,956 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:5] new[1:7]
2022-03-31 23:20:41,958 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 7 (to 6 in part parser)
2022-03-31 23:20:41,958 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 23:21:21,536 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 23:21:21,536 - parso.python.diff - DEBUG - diff update: line_lengths old: 7; new: 7
2022-03-31 23:21:21,537 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:6] new[1:6]
2022-03-31 23:21:21,537 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:6] new[1:4]
2022-03-31 23:21:21,538 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 7 (to 6 in part parser)
2022-03-31 23:21:21,538 - parso.python.diff - DEBUG - diff update: -> code[replace] old[7:7] new[7:7]
2022-03-31 23:21:21,538 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 23:21:44,531 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 23:21:44,531 - parso.python.diff - DEBUG - diff update: line_lengths old: 7; new: 9
2022-03-31 23:21:44,532 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:7] new[1:9]
2022-03-31 23:21:44,532 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 9 (to 8 in part parser)
2022-03-31 23:21:44,533 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 23:21:53,317 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 23:21:53,318 - parso.python.diff - DEBUG - diff update: line_lengths old: 9; new: 9
2022-03-31 23:21:53,318 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:7] new[1:7]
2022-03-31 23:21:53,319 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 9 (to 8 in part parser)
2022-03-31 23:21:53,319 - parso.python.diff - DEBUG - diff update: -> code[replace] old[8:9] new[8:9]
2022-03-31 23:21:53,319 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 23:21:57,323 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 23:21:57,323 - parso.python.diff - DEBUG - diff update: line_lengths old: 9; new: 9
2022-03-31 23:21:57,323 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:8] new[1:8]
2022-03-31 23:21:57,324 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 9 (to 8 in part parser)
2022-03-31 23:21:57,324 - parso.python.diff - DEBUG - diff update: -> code[replace] old[9:9] new[9:9]
2022-03-31 23:21:57,325 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 23:22:05,683 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 23:22:05,683 - parso.python.diff - DEBUG - diff update: line_lengths old: 9; new: 10
2022-03-31 23:22:05,683 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:8] new[1:8]
2022-03-31 23:22:05,684 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 10 (to 9 in part parser)
2022-03-31 23:22:05,685 - parso.python.diff - DEBUG - diff update: -> code[replace] old[9:9] new[9:10]
2022-03-31 23:22:05,686 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 23:22:09,923 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 23:22:09,923 - parso.python.diff - DEBUG - diff update: line_lengths old: 10; new: 10
2022-03-31 23:22:09,924 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:9] new[1:9]
2022-03-31 23:22:09,925 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 10 (to 9 in part parser)
2022-03-31 23:22:09,925 - parso.python.diff - DEBUG - diff update: -> code[replace] old[10:10] new[10:10]
2022-03-31 23:22:09,925 - parso.python.diff - DEBUG - diff update: diff parser end
2022-03-31 23:22:54,552 - parso.python.diff - DEBUG - diff update: diff parser start
2022-03-31 23:22:54,553 - parso.python.diff - DEBUG - diff update: line_lengths old: 10; new: 11
2022-03-31 23:22:54,554 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:9] new[1:9]
2022-03-31 23:22:54,555 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 11 (to 10 in part parser)
2022-03-31 23:22:54,555 - parso.python.diff - DEBUG - diff update: -> code[replace] old[10:10] new[10:11]
2022-03-31 23:22:54,555 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 00:15:54,435 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 00:15:54,436 - parso.python.diff - DEBUG - diff update: line_lengths old: 11; new: 18
2022-04-01 00:15:54,436 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:11] new[1:18]
2022-04-01 00:15:54,439 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 18 (to 17 in part parser)
2022-04-01 00:15:54,439 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 00:15:54,476 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/typing.py
2022-04-01 00:15:54,504 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
2022-04-01 00:33:02,360 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 00:33:02,361 - parso.python.diff - DEBUG - diff update: line_lengths old: 18; new: 31
2022-04-01 00:33:02,361 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:17] new[1:17]
2022-04-01 00:33:02,362 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:17] new[1:16]
2022-04-01 00:33:02,364 - parso.python.diff - DEBUG - diff _parse: parse_part from 17 to 31 (to 30 in part parser)
2022-04-01 00:33:02,364 - parso.python.diff - DEBUG - diff update: -> code[replace] old[18:18] new[18:31]
2022-04-01 00:33:02,364 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 00:41:18,169 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 00:41:18,170 - parso.python.diff - DEBUG - diff update: line_lengths old: 31; new: 39
2022-04-01 00:41:18,170 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:30] new[1:30]
2022-04-01 00:41:18,170 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:30] new[1:16]
2022-04-01 00:41:18,173 - parso.python.diff - DEBUG - diff _parse: parse_part from 17 to 39 (to 38 in part parser)
2022-04-01 00:41:18,173 - parso.python.diff - DEBUG - diff update: -> code[replace] old[31:31] new[31:39]
2022-04-01 00:41:18,173 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 00:57:11,244 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 00:57:11,245 - parso.python.diff - DEBUG - diff update: line_lengths old: 39; new: 19
2022-04-01 00:57:11,246 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:2] new[1:2]
2022-04-01 00:57:11,249 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 19 (to 18 in part parser)
2022-04-01 00:57:11,249 - parso.python.diff - DEBUG - diff update: -> code[replace] old[3:3] new[3:3]
2022-04-01 00:57:11,249 - parso.python.diff - DEBUG - diff update: -> code[equal] old[4:16] new[4:16]
2022-04-01 00:57:11,249 - parso.python.diff - DEBUG - diff update: -> code[delete] old[17:18] new[17:16]
2022-04-01 00:57:11,249 - parso.python.diff - DEBUG - diff update: -> code[equal] old[19:19] new[17:17]
2022-04-01 00:57:11,249 - parso.python.diff - DEBUG - diff update: -> code[replace] old[20:39] new[18:19]
2022-04-01 00:57:11,249 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 00:57:44,660 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 00:57:44,660 - parso.python.diff - DEBUG - diff update: line_lengths old: 19; new: 18
2022-04-01 00:57:44,660 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:17] new[1:17]
2022-04-01 00:57:44,660 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:18] new[1:16]
2022-04-01 00:57:44,661 - parso.python.diff - DEBUG - diff _parse: parse_part from 17 to 18 (to 17 in part parser)
2022-04-01 00:57:44,661 - parso.python.diff - DEBUG - diff update: -> code[replace] old[18:19] new[18:18]
2022-04-01 00:57:44,661 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 00:58:28,521 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 00:58:28,521 - parso.python.diff - DEBUG - diff update: line_lengths old: 18; new: 18
2022-04-01 00:58:28,522 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:17] new[1:17]
2022-04-01 00:58:28,522 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:17] new[1:16]
2022-04-01 00:58:28,523 - parso.python.diff - DEBUG - diff _parse: parse_part from 17 to 18 (to 17 in part parser)
2022-04-01 00:58:28,523 - parso.python.diff - DEBUG - diff update: -> code[replace] old[18:18] new[18:18]
2022-04-01 00:58:28,523 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 00:59:27,891 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 00:59:27,891 - parso.python.diff - DEBUG - diff update: line_lengths old: 18; new: 18
2022-04-01 00:59:27,891 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:15] new[1:15]
2022-04-01 00:59:27,892 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:17] new[1:11]
2022-04-01 00:59:27,894 - parso.python.diff - DEBUG - diff _parse: parse_part from 12 to 16 (to 17 in part parser)
2022-04-01 00:59:27,894 - parso.python.diff - DEBUG - diff update: -> code[replace] old[16:16] new[16:16]
2022-04-01 00:59:27,894 - parso.python.diff - DEBUG - diff update: -> code[equal] old[17:17] new[17:17]
2022-04-01 00:59:27,894 - parso.python.diff - DEBUG - diff _parse: parse_part from 17 to 18 (to 17 in part parser)
2022-04-01 00:59:27,894 - parso.python.diff - DEBUG - diff update: -> code[replace] old[18:18] new[18:18]
2022-04-01 00:59:27,895 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 00:59:33,246 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 00:59:33,246 - parso.python.diff - DEBUG - diff update: line_lengths old: 18; new: 19
2022-04-01 00:59:33,247 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:17] new[1:17]
2022-04-01 00:59:33,247 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:17] new[1:16]
2022-04-01 00:59:33,248 - parso.python.diff - DEBUG - diff _parse: parse_part from 17 to 19 (to 18 in part parser)
2022-04-01 00:59:33,248 - parso.python.diff - DEBUG - diff update: -> code[replace] old[18:18] new[18:19]
2022-04-01 00:59:33,249 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 01:18:20,865 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 01:18:20,867 - parso.python.diff - DEBUG - diff update: line_lengths old: 19; new: 10
2022-04-01 01:18:20,867 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-04-01 01:18:20,869 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 10 (to 9 in part parser)
2022-04-01 01:18:20,869 - parso.python.diff - DEBUG - diff update: -> code[equal] old[2:2] new[2:2]
2022-04-01 01:18:20,870 - parso.python.diff - DEBUG - diff update: -> code[replace] old[3:5] new[3:4]
2022-04-01 01:18:20,870 - parso.python.diff - DEBUG - diff update: -> code[equal] old[6:6] new[5:5]
2022-04-01 01:18:20,870 - parso.python.diff - DEBUG - diff update: -> code[replace] old[7:19] new[6:10]
2022-04-01 01:18:20,870 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 01:18:57,091 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 01:18:57,091 - parso.python.diff - DEBUG - diff update: line_lengths old: 10; new: 8
2022-04-01 01:18:57,091 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:6] new[1:6]
2022-04-01 01:18:57,091 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:9] new[1:4]
2022-04-01 01:18:57,092 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 8 (to 7 in part parser)
2022-04-01 01:18:57,093 - parso.python.diff - DEBUG - diff update: -> code[delete] old[7:7] new[7:6]
2022-04-01 01:18:57,093 - parso.python.diff - DEBUG - diff update: -> code[equal] old[8:8] new[7:7]
2022-04-01 01:18:57,093 - parso.python.diff - DEBUG - diff update: -> code[replace] old[9:10] new[8:8]
2022-04-01 01:18:57,093 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 01:19:50,897 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 01:19:50,897 - parso.python.diff - DEBUG - diff update: line_lengths old: 8; new: 1
2022-04-01 01:19:50,897 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:8] new[1:1]
2022-04-01 01:19:50,898 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-01 01:19:50,898 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 01:26:40,525 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 01:26:40,525 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 18
2022-04-01 01:26:40,525 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:18]
2022-04-01 01:26:40,529 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 18 (to 17 in part parser)
2022-04-01 01:26:40,529 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 01:28:33,925 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 01:28:33,926 - parso.python.diff - DEBUG - diff update: line_lengths old: 18; new: 63
2022-04-01 01:28:33,927 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:10]
2022-04-01 01:28:33,934 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 63 (to 62 in part parser)
2022-04-01 01:28:33,934 - parso.python.diff - DEBUG - diff update: -> code[equal] old[2:3] new[11:12]
2022-04-01 01:28:33,934 - parso.python.diff - DEBUG - diff update: -> code[replace] old[4:4] new[13:16]
2022-04-01 01:28:33,935 - parso.python.diff - DEBUG - diff update: -> code[equal] old[5:6] new[17:18]
2022-04-01 01:28:33,935 - parso.python.diff - DEBUG - diff update: -> code[delete] old[7:8] new[19:18]
2022-04-01 01:28:33,935 - parso.python.diff - DEBUG - diff update: -> code[equal] old[9:9] new[19:19]
2022-04-01 01:28:33,935 - parso.python.diff - DEBUG - diff update: -> code[replace] old[10:11] new[20:24]
2022-04-01 01:28:33,935 - parso.python.diff - DEBUG - diff update: -> code[equal] old[12:12] new[25:25]
2022-04-01 01:28:33,935 - parso.python.diff - DEBUG - diff update: -> code[replace] old[13:13] new[26:51]
2022-04-01 01:28:33,935 - parso.python.diff - DEBUG - diff update: -> code[equal] old[14:17] new[52:55]
2022-04-01 01:28:33,935 - parso.python.diff - DEBUG - diff update: -> code[replace] old[18:18] new[56:63]
2022-04-01 01:28:33,935 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 01:29:13,630 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 01:29:13,630 - parso.python.diff - DEBUG - diff update: line_lengths old: 63; new: 19
2022-04-01 01:29:13,630 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:10] new[1:1]
2022-04-01 01:29:13,635 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 19 (to 18 in part parser)
2022-04-01 01:29:13,635 - parso.python.diff - DEBUG - diff update: -> code[equal] old[11:12] new[2:3]
2022-04-01 01:29:13,635 - parso.python.diff - DEBUG - diff update: -> code[replace] old[13:16] new[4:4]
2022-04-01 01:29:13,636 - parso.python.diff - DEBUG - diff update: -> code[equal] old[17:18] new[5:6]
2022-04-01 01:29:13,636 - parso.python.diff - DEBUG - diff update: -> code[insert] old[19:18] new[7:8]
2022-04-01 01:29:13,636 - parso.python.diff - DEBUG - diff update: -> code[equal] old[19:19] new[9:9]
2022-04-01 01:29:13,636 - parso.python.diff - DEBUG - diff update: -> code[replace] old[20:24] new[10:11]
2022-04-01 01:29:13,636 - parso.python.diff - DEBUG - diff update: -> code[equal] old[25:25] new[12:12]
2022-04-01 01:29:13,636 - parso.python.diff - DEBUG - diff update: -> code[replace] old[26:51] new[13:13]
2022-04-01 01:29:13,636 - parso.python.diff - DEBUG - diff update: -> code[equal] old[52:55] new[14:17]
2022-04-01 01:29:13,636 - parso.python.diff - DEBUG - diff update: -> code[replace] old[56:63] new[18:19]
2022-04-01 01:29:13,636 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 01:32:51,240 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 01:32:51,240 - parso.python.diff - DEBUG - diff update: line_lengths old: 19; new: 2
2022-04-01 01:32:51,241 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:19] new[1:2]
2022-04-01 01:32:51,241 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 2 (to 1 in part parser)
2022-04-01 01:32:51,241 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 01:41:25,714 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 01:41:25,715 - parso.python.diff - DEBUG - diff update: line_lengths old: 2; new: 29
2022-04-01 01:41:25,715 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:2] new[1:29]
2022-04-01 01:41:25,719 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 29 (to 28 in part parser)
2022-04-01 01:41:25,719 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 01:50:04,286 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 01:50:04,287 - parso.python.diff - DEBUG - diff update: line_lengths old: 29; new: 1
2022-04-01 01:50:04,288 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:29] new[1:1]
2022-04-01 01:50:04,288 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-01 01:50:04,288 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 01:50:08,137 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 01:50:08,137 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-04-01 01:50:08,137 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-04-01 01:50:08,138 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-01 01:50:08,138 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:00:37,971 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:00:37,972 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 6
2022-04-01 02:00:37,972 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:6]
2022-04-01 02:00:37,973 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 6 (to 5 in part parser)
2022-04-01 02:00:37,973 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:01:57,050 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:01:57,051 - parso.python.diff - DEBUG - diff update: line_lengths old: 6; new: 6
2022-04-01 02:01:57,051 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:4] new[1:4]
2022-04-01 02:01:57,051 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:5] new[1:4]
2022-04-01 02:01:57,051 - parso.python.diff - DEBUG - diff update: -> code[replace] old[5:6] new[5:6]
2022-04-01 02:01:57,052 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 6 (to 5 in part parser)
2022-04-01 02:01:57,052 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:02:10,539 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:02:10,540 - parso.python.diff - DEBUG - diff update: line_lengths old: 6; new: 8
2022-04-01 02:02:10,540 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:5] new[1:5]
2022-04-01 02:02:10,540 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:5] new[1:4]
2022-04-01 02:02:10,541 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 8 (to 7 in part parser)
2022-04-01 02:02:10,541 - parso.python.diff - DEBUG - diff update: -> code[replace] old[6:6] new[6:8]
2022-04-01 02:02:10,541 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:02:55,787 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:02:55,788 - parso.python.diff - DEBUG - diff update: line_lengths old: 8; new: 7
2022-04-01 02:02:55,788 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:6] new[1:6]
2022-04-01 02:02:55,788 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:7] new[1:4]
2022-04-01 02:02:55,789 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 7 (to 6 in part parser)
2022-04-01 02:02:55,789 - parso.python.diff - DEBUG - diff update: -> code[replace] old[7:8] new[7:7]
2022-04-01 02:02:55,789 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:03:16,656 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:03:16,657 - parso.python.diff - DEBUG - diff update: line_lengths old: 7; new: 8
2022-04-01 02:03:16,657 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:6] new[1:6]
2022-04-01 02:03:16,657 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:6] new[1:4]
2022-04-01 02:03:16,658 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 8 (to 7 in part parser)
2022-04-01 02:03:16,658 - parso.python.diff - DEBUG - diff update: -> code[replace] old[7:7] new[7:8]
2022-04-01 02:03:16,658 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:03:29,133 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:03:29,133 - parso.python.diff - DEBUG - diff update: line_lengths old: 8; new: 9
2022-04-01 02:03:29,133 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:7] new[1:7]
2022-04-01 02:03:29,133 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:7] new[1:4]
2022-04-01 02:03:29,135 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 9 (to 8 in part parser)
2022-04-01 02:03:29,135 - parso.python.diff - DEBUG - diff update: -> code[replace] old[8:8] new[8:9]
2022-04-01 02:03:29,135 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:06:33,572 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:06:33,573 - parso.python.diff - DEBUG - diff update: line_lengths old: 9; new: 12
2022-04-01 02:06:33,573 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:8] new[1:8]
2022-04-01 02:06:33,573 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:8] new[1:4]
2022-04-01 02:06:33,575 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 12 (to 11 in part parser)
2022-04-01 02:06:33,575 - parso.python.diff - DEBUG - diff update: -> code[replace] old[9:9] new[9:12]
2022-04-01 02:06:33,576 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:08:37,649 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:08:37,649 - parso.python.diff - DEBUG - diff update: line_lengths old: 12; new: 14
2022-04-01 02:08:37,649 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:11] new[1:11]
2022-04-01 02:08:37,650 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:11] new[1:4]
2022-04-01 02:08:37,651 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 14 (to 13 in part parser)
2022-04-01 02:08:37,651 - parso.python.diff - DEBUG - diff update: -> code[replace] old[12:12] new[12:14]
2022-04-01 02:08:37,651 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:12:02,507 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:12:02,508 - parso.python.diff - DEBUG - diff update: line_lengths old: 14; new: 29
2022-04-01 02:12:02,508 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:2] new[1:2]
2022-04-01 02:12:02,512 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 29 (to 28 in part parser)
2022-04-01 02:12:02,512 - parso.python.diff - DEBUG - diff update: -> code[replace] old[3:4] new[3:4]
2022-04-01 02:12:02,512 - parso.python.diff - DEBUG - diff update: -> code[equal] old[5:6] new[5:6]
2022-04-01 02:12:02,512 - parso.python.diff - DEBUG - diff update: -> code[insert] old[7:6] new[7:9]
2022-04-01 02:12:02,512 - parso.python.diff - DEBUG - diff update: -> code[equal] old[7:13] new[10:16]
2022-04-01 02:12:02,512 - parso.python.diff - DEBUG - diff update: -> code[replace] old[14:14] new[17:29]
2022-04-01 02:12:02,512 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:12:03,783 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:12:03,783 - parso.python.diff - DEBUG - diff update: line_lengths old: 29; new: 29
2022-04-01 02:12:03,783 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:28] new[1:28]
2022-04-01 02:12:03,784 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:28] new[1:4]
2022-04-01 02:12:03,788 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 29 (to 28 in part parser)
2022-04-01 02:12:03,788 - parso.python.diff - DEBUG - diff update: -> code[replace] old[29:29] new[29:29]
2022-04-01 02:12:03,788 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:12:09,712 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:12:09,713 - parso.python.diff - DEBUG - diff update: line_lengths old: 29; new: 29
2022-04-01 02:12:09,713 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:28] new[1:28]
2022-04-01 02:12:09,713 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:28] new[1:4]
2022-04-01 02:12:09,717 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 29 (to 28 in part parser)
2022-04-01 02:12:09,717 - parso.python.diff - DEBUG - diff update: -> code[replace] old[29:29] new[29:29]
2022-04-01 02:12:09,717 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:15:05,659 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:15:05,660 - parso.python.diff - DEBUG - diff update: line_lengths old: 29; new: 48
2022-04-01 02:15:05,660 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-04-01 02:15:05,666 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 48 (to 47 in part parser)
2022-04-01 02:15:05,666 - parso.python.diff - DEBUG - diff update: -> code[equal] old[2:2] new[2:2]
2022-04-01 02:15:05,666 - parso.python.diff - DEBUG - diff update: -> code[replace] old[3:4] new[3:4]
2022-04-01 02:15:05,666 - parso.python.diff - DEBUG - diff update: -> code[equal] old[5:5] new[5:5]
2022-04-01 02:15:05,666 - parso.python.diff - DEBUG - diff update: -> code[replace] old[6:6] new[6:8]
2022-04-01 02:15:05,666 - parso.python.diff - DEBUG - diff update: -> code[equal] old[7:7] new[9:9]
2022-04-01 02:15:05,666 - parso.python.diff - DEBUG - diff update: -> code[replace] old[8:9] new[10:11]
2022-04-01 02:15:05,666 - parso.python.diff - DEBUG - diff update: -> code[equal] old[10:10] new[12:12]
2022-04-01 02:15:05,666 - parso.python.diff - DEBUG - diff update: -> code[replace] old[11:12] new[13:24]
2022-04-01 02:15:05,666 - parso.python.diff - DEBUG - diff update: -> code[equal] old[13:13] new[25:25]
2022-04-01 02:15:05,666 - parso.python.diff - DEBUG - diff update: -> code[replace] old[14:15] new[26:28]
2022-04-01 02:15:05,666 - parso.python.diff - DEBUG - diff update: -> code[equal] old[16:16] new[29:29]
2022-04-01 02:15:05,666 - parso.python.diff - DEBUG - diff update: -> code[replace] old[17:19] new[30:32]
2022-04-01 02:15:05,667 - parso.python.diff - DEBUG - diff update: -> code[equal] old[20:20] new[33:33]
2022-04-01 02:15:05,667 - parso.python.diff - DEBUG - diff update: -> code[replace] old[21:27] new[34:35]
2022-04-01 02:15:05,667 - parso.python.diff - DEBUG - diff update: -> code[equal] old[28:28] new[36:36]
2022-04-01 02:15:05,667 - parso.python.diff - DEBUG - diff update: -> code[replace] old[29:29] new[37:48]
2022-04-01 02:15:05,667 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:15:23,471 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:15:23,471 - parso.python.diff - DEBUG - diff update: line_lengths old: 48; new: 48
2022-04-01 02:15:23,471 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:47] new[1:47]
2022-04-01 02:15:23,472 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:47] new[1:4]
2022-04-01 02:15:23,478 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 48 (to 47 in part parser)
2022-04-01 02:15:23,478 - parso.python.diff - DEBUG - diff update: -> code[replace] old[48:48] new[48:48]
2022-04-01 02:15:23,479 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:15:33,720 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:15:33,720 - parso.python.diff - DEBUG - diff update: line_lengths old: 48; new: 48
2022-04-01 02:15:33,721 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:47] new[1:47]
2022-04-01 02:15:33,721 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:47] new[1:4]
2022-04-01 02:15:33,727 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 48 (to 47 in part parser)
2022-04-01 02:15:33,727 - parso.python.diff - DEBUG - diff update: -> code[replace] old[48:48] new[48:48]
2022-04-01 02:15:33,727 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:15:36,363 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:15:36,363 - parso.python.diff - DEBUG - diff update: line_lengths old: 48; new: 48
2022-04-01 02:15:36,363 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:47] new[1:47]
2022-04-01 02:15:36,363 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:47] new[1:4]
2022-04-01 02:15:36,370 - parso.python.diff - DEBUG - diff _parse: parse_part from 5 to 48 (to 47 in part parser)
2022-04-01 02:15:36,370 - parso.python.diff - DEBUG - diff update: -> code[replace] old[48:48] new[48:48]
2022-04-01 02:15:36,370 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:16:13,230 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:16:13,230 - parso.python.diff - DEBUG - diff update: line_lengths old: 48; new: 60
2022-04-01 02:16:13,230 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:1] new[1:1]
2022-04-01 02:16:13,238 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 60 (to 59 in part parser)
2022-04-01 02:16:13,238 - parso.python.diff - DEBUG - diff update: -> code[insert] old[2:1] new[2:5]
2022-04-01 02:16:13,238 - parso.python.diff - DEBUG - diff update: -> code[equal] old[2:47] new[6:51]
2022-04-01 02:16:13,238 - parso.python.diff - DEBUG - diff update: -> code[replace] old[48:48] new[52:60]
2022-04-01 02:16:13,238 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:16:13,273 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/random.py
2022-04-01 02:16:13,287 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/random.pyi
2022-04-01 02:16:13,294 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/2and3/_random.pyi
2022-04-01 02:24:09,387 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:24:09,389 - parso.python.diff - DEBUG - diff update: line_lengths old: 60; new: 3
2022-04-01 02:24:09,389 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-04-01 02:24:09,390 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 3 (to 2 in part parser)
2022-04-01 02:24:09,390 - parso.python.diff - DEBUG - diff update: -> code[equal] old[2:2] new[2:2]
2022-04-01 02:24:09,390 - parso.python.diff - DEBUG - diff update: -> code[replace] old[3:60] new[3:3]
2022-04-01 02:24:09,390 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:24:49,297 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:24:49,297 - parso.python.diff - DEBUG - diff update: line_lengths old: 3; new: 1
2022-04-01 02:24:49,297 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:3] new[1:1]
2022-04-01 02:24:49,298 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-01 02:24:49,298 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:24:52,344 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:24:52,344 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-04-01 02:24:52,344 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-04-01 02:24:52,344 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-01 02:24:52,345 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:25:01,060 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:25:01,060 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-04-01 02:25:01,060 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-04-01 02:25:01,061 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-01 02:25:01,061 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:25:09,618 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:25:09,618 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-04-01 02:25:09,618 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-04-01 02:25:09,619 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-01 02:25:09,619 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:25:15,446 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:25:15,446 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 2
2022-04-01 02:25:15,446 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:2]
2022-04-01 02:25:15,448 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 2 (to 1 in part parser)
2022-04-01 02:25:15,448 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:33:58,532 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:33:58,533 - parso.python.diff - DEBUG - diff update: line_lengths old: 2; new: 65
2022-04-01 02:33:58,533 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:2] new[1:65]
2022-04-01 02:33:58,541 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 65 (to 64 in part parser)
2022-04-01 02:33:58,541 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:34:04,846 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:34:04,847 - parso.python.diff - DEBUG - diff update: line_lengths old: 65; new: 65
2022-04-01 02:34:04,847 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:64] new[1:64]
2022-04-01 02:34:04,847 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:64] new[1:8]
2022-04-01 02:34:05,038 - parso.python.diff - DEBUG - diff _parse: parse_part from 9 to 65 (to 64 in part parser)
2022-04-01 02:34:05,038 - parso.python.diff - DEBUG - diff update: -> code[replace] old[65:65] new[65:65]
2022-04-01 02:34:05,038 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:34:11,315 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:34:11,315 - parso.python.diff - DEBUG - diff update: line_lengths old: 65; new: 65
2022-04-01 02:34:11,315 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:64] new[1:64]
2022-04-01 02:34:11,316 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:64] new[1:8]
2022-04-01 02:34:11,324 - parso.python.diff - DEBUG - diff _parse: parse_part from 9 to 65 (to 64 in part parser)
2022-04-01 02:34:11,324 - parso.python.diff - DEBUG - diff update: -> code[replace] old[65:65] new[65:65]
2022-04-01 02:34:11,324 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:34:14,037 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:34:14,038 - parso.python.diff - DEBUG - diff update: line_lengths old: 65; new: 65
2022-04-01 02:34:14,038 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:64] new[1:64]
2022-04-01 02:34:14,038 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:64] new[1:8]
2022-04-01 02:34:14,046 - parso.python.diff - DEBUG - diff _parse: parse_part from 9 to 65 (to 64 in part parser)
2022-04-01 02:34:14,047 - parso.python.diff - DEBUG - diff update: -> code[replace] old[65:65] new[65:65]
2022-04-01 02:34:14,047 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:34:20,416 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:34:20,416 - parso.python.diff - DEBUG - diff update: line_lengths old: 65; new: 65
2022-04-01 02:34:20,416 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:64] new[1:64]
2022-04-01 02:34:20,417 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:64] new[1:8]
2022-04-01 02:34:20,425 - parso.python.diff - DEBUG - diff _parse: parse_part from 9 to 65 (to 64 in part parser)
2022-04-01 02:34:20,425 - parso.python.diff - DEBUG - diff update: -> code[replace] old[65:65] new[65:65]
2022-04-01 02:34:20,425 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:35:47,469 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:35:47,469 - parso.python.diff - DEBUG - diff update: line_lengths old: 65; new: 64
2022-04-01 02:35:47,470 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:61] new[1:61]
2022-04-01 02:35:47,470 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:64] new[1:8]
2022-04-01 02:35:47,477 - parso.python.diff - DEBUG - diff _parse: parse_part from 9 to 64 (to 63 in part parser)
2022-04-01 02:35:47,478 - parso.python.diff - DEBUG - diff update: -> code[replace] old[62:65] new[62:64]
2022-04-01 02:35:47,478 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:36:17,810 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:36:17,810 - parso.python.diff - DEBUG - diff update: line_lengths old: 64; new: 64
2022-04-01 02:36:17,810 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:63] new[1:63]
2022-04-01 02:36:17,811 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:63] new[1:8]
2022-04-01 02:36:17,818 - parso.python.diff - DEBUG - diff _parse: parse_part from 9 to 64 (to 63 in part parser)
2022-04-01 02:36:17,818 - parso.python.diff - DEBUG - diff update: -> code[replace] old[64:64] new[64:64]
2022-04-01 02:36:17,818 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 02:36:23,862 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 02:36:23,862 - parso.python.diff - DEBUG - diff update: line_lengths old: 64; new: 64
2022-04-01 02:36:23,863 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:63] new[1:63]
2022-04-01 02:36:23,863 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:63] new[1:8]
2022-04-01 02:36:23,871 - parso.python.diff - DEBUG - diff _parse: parse_part from 9 to 64 (to 63 in part parser)
2022-04-01 02:36:23,871 - parso.python.diff - DEBUG - diff update: -> code[replace] old[64:64] new[64:64]
2022-04-01 02:36:23,871 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 03:11:00,848 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-01 03:11:00,850 - parso.python.diff - DEBUG - diff update: line_lengths old: 64; new: 60
2022-04-01 03:11:00,850 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:59] new[1:59]
2022-04-01 03:11:00,850 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:63] new[1:8]
2022-04-01 03:11:00,856 - parso.python.diff - DEBUG - diff _parse: parse_part from 9 to 60 (to 59 in part parser)
2022-04-01 03:11:00,856 - parso.python.diff - DEBUG - diff update: -> code[replace] old[60:64] new[60:60]
2022-04-01 03:11:00,856 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-01 22:28:34,935 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-01 22:28:36,189 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-01 22:28:36,190 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,190 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,190 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,190 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-01 22:28:36,190 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-01 22:28:36,191 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,191 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,191 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,191 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-01 22:28:36,191 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,191 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,191 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-01 22:28:36,191 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,191 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,191 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,191 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,192 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,192 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,192 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,192 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,192 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,192 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,192 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,192 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,193 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,193 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,193 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,193 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,193 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,193 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,193 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,193 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,193 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,193 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,193 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-01 22:28:36,193 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-01 22:28:36,194 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,194 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,194 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-01 22:28:36,194 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,194 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,194 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,194 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,194 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,194 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,194 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-01 22:28:36,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-01 22:28:36,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-01 22:28:36,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-01 22:28:36,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-01 22:28:36,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:36,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-01 22:28:36,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-01 22:28:36,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-01 22:28:36,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-01 22:28:36,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-01 22:28:36,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:36,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:36,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-01 22:28:36,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-01 22:28:36,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-01 22:28:36,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-01 22:28:36,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-01 22:28:36,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-01 22:28:36,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-01 22:28:36,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-01 22:28:36,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-01 22:28:36,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-01 22:28:36,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-01 22:28:36,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:36,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-01 22:28:36,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-01 22:28:36,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-01 22:28:36,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-01 22:28:36,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-01 22:28:36,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,208 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,208 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,208 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,208 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-01 22:28:36,208 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,208 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,208 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-01 22:28:36,208 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,208 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,208 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,208 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-01 22:28:36,208 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,209 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-01 22:28:36,209 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,209 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,209 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,209 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,209 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,209 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-01 22:28:36,209 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,209 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-01 22:28:36,209 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-01 22:28:36,209 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,209 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,209 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-01 22:28:36,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-01 22:28:36,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-01 22:28:36,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,211 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,211 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-01 22:28:36,211 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,211 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,211 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,211 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,211 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,211 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,211 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,211 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,211 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,211 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,211 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,211 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,211 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-01 22:28:36,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-01 22:28:36,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-01 22:28:36,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-01 22:28:36,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:36,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-01 22:28:36,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:36,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-01 22:28:36,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-01 22:28:36,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-01 22:28:36,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-01 22:28:36,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-01 22:28:36,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-01 22:28:36,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-01 22:28:36,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-01 22:28:36,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-01 22:28:36,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-01 22:28:36,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-01 22:28:36,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-01 22:28:36,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-01 22:28:36,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-01 22:28:36,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-01 22:28:36,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-01 22:28:36,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-01 22:28:36,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-01 22:28:36,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-01 22:28:36,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-01 22:28:36,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:36,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-01 22:28:36,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-01 22:28:36,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-01 22:28:36,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:36,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:36,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-01 22:28:36,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:36,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:36,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-01 22:28:36,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:36,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,226 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,226 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,226 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,226 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,226 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,226 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:36,226 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-01 22:28:40,142 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2022-04-01 22:28:40,143 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,143 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,143 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,143 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-01 22:28:40,143 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-01 22:28:40,143 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,143 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,143 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,143 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-01 22:28:40,143 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,143 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-01 22:28:40,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-01 22:28:40,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-01 22:28:40,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-01 22:28:40,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-01 22:28:40,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-01 22:28:40,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-01 22:28:40,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-01 22:28:40,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-01 22:28:40,148 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,148 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,148 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,148 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,148 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,148 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,148 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,148 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,148 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,148 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,148 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,148 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,148 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,148 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,148 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-01 22:28:40,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-01 22:28:40,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-01 22:28:40,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-01 22:28:40,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-01 22:28:40,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-01 22:28:40,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-01 22:28:40,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-01 22:28:40,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-01 22:28:40,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-01 22:28:40,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-01 22:28:40,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-01 22:28:40,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-01 22:28:40,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-01 22:28:40,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-01 22:28:40,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-01 22:28:40,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-01 22:28:40,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-01 22:28:40,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-01 22:28:40,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-01 22:28:40,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-01 22:28:40,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-01 22:28:40,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-01 22:28:40,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-01 22:28:40,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-01 22:28:40,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-01 22:28:40,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-01 22:28:40,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-01 22:28:40,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-01 22:28:40,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-01 22:28:40,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-01 22:28:40,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-01 22:28:40,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-01 22:28:40,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-01 22:28:40,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-01 22:28:40,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-01 22:28:40,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-01 22:28:40,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-01 22:28:40,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-01 22:28:40,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-01 22:28:40,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-01 22:28:40,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-01 22:28:40,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-01 22:28:40,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-01 22:28:40,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-01 22:28:40,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-01 22:28:40,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-01 22:28:40,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-01 22:28:40,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-01 22:28:40,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-01 22:28:40,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-01 22:28:40,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-01 22:28:40,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-01 22:28:40,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-01 22:28:40,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-01 22:28:40,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-01 22:28:40,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-01 22:28:40,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-01 22:28:40,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-01 22:28:40,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2022-04-01 22:28:40,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-01 22:28:40,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-01 22:28:40,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-01 22:28:40,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-01 22:28:40,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-01 22:28:40,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-01 22:28:40,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-01 22:28:40,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-01 22:28:40,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-01 22:28:40,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-01 22:28:40,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-01 22:28:40,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-01 22:28:40,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,202 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-01 22:28:40,203 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-01 22:28:40,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-01 22:28:40,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-01 22:28:40,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-01 22:28:40,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,204 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,205 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-01 22:28:40,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-01 22:28:40,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,206 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-01 22:28:40,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-01 22:28:40,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,207 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,208 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,208 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,208 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-01 22:28:40,208 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-01 22:28:40,208 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,208 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-01 22:28:40,208 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,208 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,208 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,208 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,208 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,208 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,208 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,209 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,209 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,209 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,209 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-01 22:28:40,209 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,209 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,209 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-01 22:28:40,209 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,209 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,209 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,209 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,209 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-01 22:28:40,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,210 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,211 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,211 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,211 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,211 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,211 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,211 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,211 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,211 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,211 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,211 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-01 22:28:40,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-01 22:28:40,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,212 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-01 22:28:40,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-01 22:28:40,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-01 22:28:40,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,213 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-01 22:28:40,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-01 22:28:40,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,214 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-01 22:28:40,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-01 22:28:40,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-01 22:28:40,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-01 22:28:40,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-01 22:28:40,215 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-01 22:28:40,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-01 22:28:40,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-01 22:28:40,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,216 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-01 22:28:40,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,217 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-01 22:28:40,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-01 22:28:40,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-01 22:28:40,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,218 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,219 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-01 22:28:40,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,220 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-01 22:28:40,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,221 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-01 22:28:40,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,222 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-01 22:28:40,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-01 22:28:40,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-01 22:28:40,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,223 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-01 22:28:40,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-01 22:28:40,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,224 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,225 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,226 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,226 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,226 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,226 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,226 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,226 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-01 22:28:40,226 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,226 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,226 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,226 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,226 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,226 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,227 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,227 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-01 22:28:40,227 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,227 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,227 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,227 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,227 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,227 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-01 22:28:40,227 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,227 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,227 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-01 22:28:40,228 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,228 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,228 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,228 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-01 22:28:40,228 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,228 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,228 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-01 22:28:40,228 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,228 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,228 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,228 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,228 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,228 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,229 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,229 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-01 22:28:40,229 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,229 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,229 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,229 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,229 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,229 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-01 22:28:40,229 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,229 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,229 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,229 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,229 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,229 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,229 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-01 22:28:40,229 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,230 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,230 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,230 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,230 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,230 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,230 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,230 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,230 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,230 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-01 22:28:40,230 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,230 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,230 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,230 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,230 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,231 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,231 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,231 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,231 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,231 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-01 22:28:40,231 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,231 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,231 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,231 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-01 22:28:40,231 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,231 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,231 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,231 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,231 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,232 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,232 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-01 22:28:40,232 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-01 22:28:40,232 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-01 22:28:40,232 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,232 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,232 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,232 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,232 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,232 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,232 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,232 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,232 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,232 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,232 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,233 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 22:28:40,233 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,233 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,233 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-01 22:28:40,233 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,233 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 22:28:40,233 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,233 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 22:28:40,233 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,233 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,233 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,233 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,233 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,233 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,233 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,233 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 22:28:40,234 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,234 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,234 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,234 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,234 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,234 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,234 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-01 22:28:40,234 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-01 23:14:45,485 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-01 23:14:50,556 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-01 23:14:50,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-01 23:14:50,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-01 23:14:50,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-01 23:14:50,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-01 23:14:50,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-01 23:14:50,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-01 23:14:50,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-01 23:14:50,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-01 23:14:50,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-01 23:14:50,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-01 23:14:50,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-01 23:14:50,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-01 23:14:50,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-01 23:14:50,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-01 23:14:50,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-01 23:14:50,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-01 23:14:50,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-01 23:14:50,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-01 23:14:50,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 23:14:50,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-01 23:14:50,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-01 23:14:50,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-01 23:14:50,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-01 23:14:50,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,568 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,568 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,568 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,568 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,568 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-01 23:14:50,568 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,568 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,568 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,568 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,568 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-01 23:14:50,568 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-01 23:14:50,568 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,569 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-01 23:14:50,569 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,569 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,569 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,569 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,569 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,569 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,569 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,569 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,569 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,570 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,570 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-01 23:14:50,570 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,570 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,570 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-01 23:14:50,570 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,570 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,570 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,570 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,570 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,570 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,570 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,570 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-01 23:14:50,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-01 23:14:50,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 23:14:50,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-01 23:14:50,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-01 23:14:50,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-01 23:14:50,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-01 23:14:50,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,574 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,574 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,574 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,574 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-01 23:14:50,574 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,574 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,574 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,574 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,574 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,574 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,574 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-01 23:14:50,574 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,574 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,574 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-01 23:14:50,574 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,575 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,575 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,575 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-01 23:14:50,575 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,575 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-01 23:14:50,575 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,575 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,575 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,575 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,575 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,576 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-01 23:14:50,576 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,576 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-01 23:14:50,576 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-01 23:14:50,576 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,576 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-01 23:14:50,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-01 23:14:50,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-01 23:14:50,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-01 23:14:50,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-01 23:14:50,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-01 23:14:50,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-01 23:14:50,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-01 23:14:50,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,580 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,580 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,580 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,580 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,580 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,580 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,580 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,580 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,580 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,580 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,580 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,580 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,580 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,581 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,581 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,581 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,581 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,581 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,581 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-01 23:14:50,581 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-01 23:14:50,581 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,581 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,581 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,581 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,581 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,581 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,581 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-01 23:14:50,582 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,582 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-01 23:14:50,582 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,582 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,582 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,582 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,582 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,582 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,582 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,582 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,582 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-01 23:14:50,582 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,582 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,582 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,582 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,583 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,583 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,583 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,583 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-01 23:14:50,583 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,583 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,583 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,583 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,583 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,583 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-01 23:14:50,583 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,583 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,583 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-01 23:14:50,583 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,583 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-01 23:14:50,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-01 23:14:50,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-01 23:14:50,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-01 23:14:50,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-01 23:14:50,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-01 23:14:50,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-01 23:14:50,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-01 23:14:50,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-01 23:14:50,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-01 23:14:50,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-01 23:14:50,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-01 23:14:50,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-01 23:14:50,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-01 23:14:50,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-01 23:14:50,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 23:14:50,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-01 23:14:50,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-01 23:14:50,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-01 23:14:50,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 23:14:50,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:14:50,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-01 23:14:50,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:14:50,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:14:50,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-01 23:14:50,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 23:14:50,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:14:50,596 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-01 23:15:01,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2022-04-01 23:15:01,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-01 23:15:01,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-01 23:15:01,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-01 23:15:01,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-01 23:15:01,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-01 23:15:01,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-01 23:15:01,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-01 23:15:01,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-01 23:15:01,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-01 23:15:01,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-01 23:15:01,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-01 23:15:01,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-01 23:15:01,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,929 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,929 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,929 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,929 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,929 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,929 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,929 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,929 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,929 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,929 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,929 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-01 23:15:01,929 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-01 23:15:01,929 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,929 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-01 23:15:01,929 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-01 23:15:01,929 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,930 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,930 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,930 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,930 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,930 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,930 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,930 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,930 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,930 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-01 23:15:01,930 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,930 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-01 23:15:01,930 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,930 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,930 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,930 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,931 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,931 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,931 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,931 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,931 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,931 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 23:15:01,931 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,931 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,931 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,931 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,931 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,931 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,931 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,931 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,931 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-01 23:15:01,931 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,932 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-01 23:15:01,932 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-01 23:15:01,932 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,932 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,932 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,932 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,932 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,932 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,932 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-01 23:15:01,932 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,932 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,932 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,932 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,932 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,933 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,933 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,933 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-01 23:15:01,933 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,933 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,933 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,933 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,933 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-01 23:15:01,933 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-01 23:15:01,933 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,933 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-01 23:15:01,933 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,934 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,934 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,934 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,934 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,934 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,934 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,934 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,934 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,934 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,935 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-01 23:15:01,935 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,935 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,935 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-01 23:15:01,935 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,935 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,935 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,935 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,935 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,935 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,935 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,936 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-01 23:15:01,936 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,936 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,936 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,936 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,936 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,936 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,936 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,936 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,936 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,936 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,936 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,936 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,936 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,937 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,937 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,937 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,937 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,937 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,937 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,937 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,937 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,937 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-01 23:15:01,937 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,937 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 23:15:01,937 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,938 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-01 23:15:01,938 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,938 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,938 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,938 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,938 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,938 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,938 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-01 23:15:01,938 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,938 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-01 23:15:01,939 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,939 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,939 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,939 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,939 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,939 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-01 23:15:01,939 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,939 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,939 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,939 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,939 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,939 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,939 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-01 23:15:01,940 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,940 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,940 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,940 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,940 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,940 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,940 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-01 23:15:01,940 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,940 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,940 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-01 23:15:01,940 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,940 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,940 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,940 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-01 23:15:01,940 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,940 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-01 23:15:01,941 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,941 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,941 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,941 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,941 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,941 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-01 23:15:01,941 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,941 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-01 23:15:01,941 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-01 23:15:01,941 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,941 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,941 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,941 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,941 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,941 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-01 23:15:01,941 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-01 23:15:01,942 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,942 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,942 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,942 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,942 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,942 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,942 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-01 23:15:01,942 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,942 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,942 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,942 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,942 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-01 23:15:01,942 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,942 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,942 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,943 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,943 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,943 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,943 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,943 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,943 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,943 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,943 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,943 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,943 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,943 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,943 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,943 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-01 23:15:01,943 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-01 23:15:01,943 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,943 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,944 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,944 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-01 23:15:01,944 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,944 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,944 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,944 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-01 23:15:01,944 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,944 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,944 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,944 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,944 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,944 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,944 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,944 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,944 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,944 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,945 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,945 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,945 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,945 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,945 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,945 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,945 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,945 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,945 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,945 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-01 23:15:01,945 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-01 23:15:01,945 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,945 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,945 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,945 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,946 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,946 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,946 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-01 23:15:01,946 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,946 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-01 23:15:01,946 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,946 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,946 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,946 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,946 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,946 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,946 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,946 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,946 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-01 23:15:01,946 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,946 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,947 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,947 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,947 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,947 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,947 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,947 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-01 23:15:01,947 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,947 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,947 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,947 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,947 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,947 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-01 23:15:01,947 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,947 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,947 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-01 23:15:01,948 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,948 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,948 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-01 23:15:01,948 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,948 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,948 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,948 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,948 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,948 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,948 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,948 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,948 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,948 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,948 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,948 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,948 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,949 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,949 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-01 23:15:01,949 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-01 23:15:01,949 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,949 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,949 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,949 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,949 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,949 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,949 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,949 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,949 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,949 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,949 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,949 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,949 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,950 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,950 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,950 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,950 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,950 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,950 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,950 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,950 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,950 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,950 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-01 23:15:01,950 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,950 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,950 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,950 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,950 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,950 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,951 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,951 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-01 23:15:01,951 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,951 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,951 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,951 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,951 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,951 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-01 23:15:01,951 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,951 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,951 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-01 23:15:01,951 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,951 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,951 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,951 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-01 23:15:01,952 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,952 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,952 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-01 23:15:01,952 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,952 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,952 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,952 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,952 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,952 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,952 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,952 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-01 23:15:01,952 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,952 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,952 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,952 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,952 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,953 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-01 23:15:01,953 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,953 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,953 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,953 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,953 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,953 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,953 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-01 23:15:01,953 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,953 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,953 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,953 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,953 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,953 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,954 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,954 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,954 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,954 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-01 23:15:01,954 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,954 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,954 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,954 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,954 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,954 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,954 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,954 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,955 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,955 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-01 23:15:01,955 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,955 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,955 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,955 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-01 23:15:01,955 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,955 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 23:15:01,955 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,955 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,956 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,956 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,956 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-01 23:15:01,956 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-01 23:15:01,956 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-01 23:15:01,956 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,956 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,956 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,956 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 23:15:01,956 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,956 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,957 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,957 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,957 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,957 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,957 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,957 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,957 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,957 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,957 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-01 23:15:01,957 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,957 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,957 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-01 23:15:01,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 23:15:01,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,959 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,959 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,959 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-01 23:15:01,977 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2022-04-01 23:15:01,977 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-01 23:15:01,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-01 23:15:01,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-01 23:15:01,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-01 23:15:01,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-01 23:15:01,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-01 23:15:01,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-01 23:15:01,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-01 23:15:01,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-01 23:15:01,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-01 23:15:01,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-01 23:15:01,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-01 23:15:01,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-01 23:15:01,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-01 23:15:01,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-01 23:15:01,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-01 23:15:01,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-01 23:15:01,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-01 23:15:01,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 23:15:01,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-01 23:15:01,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-01 23:15:01,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-01 23:15:01,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-01 23:15:01,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-01 23:15:01,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-01 23:15:01,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-01 23:15:01,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-01 23:15:01,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-01 23:15:01,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-01 23:15:01,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-01 23:15:01,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-01 23:15:01,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 23:15:01,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-01 23:15:01,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-01 23:15:01,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-01 23:15:01,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-01 23:15:01,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,992 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,992 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,992 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,992 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-01 23:15:01,992 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,992 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,992 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,992 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,992 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,992 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,992 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-01 23:15:01,992 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,992 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,992 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-01 23:15:01,992 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,992 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,993 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,993 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-01 23:15:01,993 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,993 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-01 23:15:01,993 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,993 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,993 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,993 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,993 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,993 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-01 23:15:01,993 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,993 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-01 23:15:01,993 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-01 23:15:01,993 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,994 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,994 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,994 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,994 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,994 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-01 23:15:01,994 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-01 23:15:01,994 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,994 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,994 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,994 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,994 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,994 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,995 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-01 23:15:01,995 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,995 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,995 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,995 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,995 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-01 23:15:01,995 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,995 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,995 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,995 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,995 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,995 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,995 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,995 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,995 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,996 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,996 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,996 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,996 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,996 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,996 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,996 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-01 23:15:01,996 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-01 23:15:01,996 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,996 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,996 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,996 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-01 23:15:01,996 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,997 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,997 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,997 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-01 23:15:01,997 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,997 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,997 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,997 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,997 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,997 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,997 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,998 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:01,998 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,998 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,998 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,998 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,998 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,998 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,998 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,999 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:01,999 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,999 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,999 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,999 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-01 23:15:01,999 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-01 23:15:01,999 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,999 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:01,999 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,999 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,999 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:01,999 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:02,000 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-01 23:15:02,000 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,000 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-01 23:15:02,000 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,000 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,000 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,000 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:02,000 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:02,000 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:02,000 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,000 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,000 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-01 23:15:02,000 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,000 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,001 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,001 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,001 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:02,001 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,001 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:02,001 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-01 23:15:02,001 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:02,001 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,001 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:02,001 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:02,001 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,001 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-01 23:15:02,001 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,001 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,002 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-01 23:15:02,002 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,002 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,002 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-01 23:15:02,002 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:02,002 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:02,002 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,002 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:02,002 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:02,002 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,002 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:02,002 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:02,002 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,002 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:02,003 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,003 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:02,003 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,003 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,003 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-01 23:15:02,003 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-01 23:15:02,003 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,003 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,003 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:02,003 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,003 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,003 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,003 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,003 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,004 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,004 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:02,004 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,004 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:02,004 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:02,004 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:02,004 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,004 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,004 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,004 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,004 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,004 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,004 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,004 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,004 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-01 23:15:02,004 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,005 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,005 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,005 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,005 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,005 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,005 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,005 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-01 23:15:02,005 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,005 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,005 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,005 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:02,005 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,005 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-01 23:15:02,005 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:02,005 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:02,006 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-01 23:15:02,006 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:02,006 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,006 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,006 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-01 23:15:02,006 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,006 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,006 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-01 23:15:02,006 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:02,006 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:02,006 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:02,006 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,006 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,006 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,007 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,007 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-01 23:15:02,007 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,007 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,007 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,007 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:02,007 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,007 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-01 23:15:02,007 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,007 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,007 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,007 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,007 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,007 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,008 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-01 23:15:02,008 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,008 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,008 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,008 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,008 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,008 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,008 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,008 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,008 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,008 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-01 23:15:02,008 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:02,008 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:02,008 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,009 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,009 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:02,009 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,009 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,009 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,009 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,009 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-01 23:15:02,009 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,009 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:02,009 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,009 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-01 23:15:02,009 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,009 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 23:15:02,010 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,010 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,010 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,010 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,010 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-01 23:15:02,010 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-01 23:15:02,010 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-01 23:15:02,010 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,011 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,011 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,011 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 23:15:02,011 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,011 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,011 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,011 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,011 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,011 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,011 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,011 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-01 23:15:02,011 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,011 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-01 23:15:02,012 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-01 23:15:02,012 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,012 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-01 23:15:02,012 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,012 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-01 23:15:02,012 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,012 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,012 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,012 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,012 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,012 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,012 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-01 23:15:02,012 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-01 23:15:02,012 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,012 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,013 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,013 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,013 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,013 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,013 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-01 23:15:02,013 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-02 00:00:46,178 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-02 00:00:51,362 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-02 00:00:51,363 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,363 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,364 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,364 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-02 00:00:51,364 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-02 00:00:51,364 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,364 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-02 00:00:51,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-02 00:00:51,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,367 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,367 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-02 00:00:51,367 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-02 00:00:51,367 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,367 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,367 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-02 00:00:51,367 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,367 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,367 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,367 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,367 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,367 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-02 00:00:51,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-02 00:00:51,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-02 00:00:51,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-02 00:00:51,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-02 00:00:51,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-02 00:00:51,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-02 00:00:51,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-02 00:00:51,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-02 00:00:51,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-02 00:00:51,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-02 00:00:51,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 00:00:51,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-02 00:00:51,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-02 00:00:51,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-02 00:00:51,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-02 00:00:51,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-02 00:00:51,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-02 00:00:51,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-02 00:00:51,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-02 00:00:51,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-02 00:00:51,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-02 00:00:51,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-02 00:00:51,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-02 00:00:51,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 00:00:51,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-02 00:00:51,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-02 00:00:51,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-02 00:00:51,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-02 00:00:51,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-02 00:00:51,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-02 00:00:51,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-02 00:00:51,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-02 00:00:51,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-02 00:00:51,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-02 00:00:51,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-02 00:00:51,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-02 00:00:51,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-02 00:00:51,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-02 00:00:51,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-02 00:00:51,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-02 00:00:51,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-02 00:00:51,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-02 00:00:51,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-02 00:00:51,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-02 00:00:51,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-02 00:00:51,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-02 00:00:51,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-02 00:00:51,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-02 00:00:51,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-02 00:00:51,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-02 00:00:51,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-02 00:00:51,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-02 00:00:51,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-02 00:00:51,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-02 00:00:51,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-02 00:00:51,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-02 00:00:51,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-02 00:00:51,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-02 00:00:51,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-02 00:00:51,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-02 00:00:51,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-02 00:00:51,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-02 00:00:51,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-02 00:00:51,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-02 00:00:51,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-02 00:00:51,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-02 00:00:51,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-02 00:00:51,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 00:00:51,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-02 00:00:51,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-02 00:00:51,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-02 00:00:51,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 00:00:51,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 00:00:51,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-02 00:00:51,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 00:00:51,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 00:00:51,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-02 00:00:51,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 00:00:51,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,403 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,403 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,403 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,403 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,403 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-02 00:00:51,403 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-02 00:01:23,739 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2022-04-02 00:01:23,780 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2022-04-02 00:03:22,337 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 00:03:22,337 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 2
2022-04-02 00:03:22,337 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:2]
2022-04-02 00:03:22,338 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 2 (to 1 in part parser)
2022-04-02 00:03:22,338 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 00:12:34,637 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 00:12:34,637 - parso.python.diff - DEBUG - diff update: line_lengths old: 2; new: 1
2022-04-02 00:12:34,638 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:2] new[1:1]
2022-04-02 00:12:34,638 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-02 00:12:34,638 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 00:17:09,131 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 00:17:09,131 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 12
2022-04-02 00:17:09,131 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:12]
2022-04-02 00:17:09,132 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 12 (to 11 in part parser)
2022-04-02 00:17:09,132 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 00:25:20,577 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 00:25:20,578 - parso.python.diff - DEBUG - diff update: line_lengths old: 12; new: 12
2022-04-02 00:25:20,578 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:11] new[1:11]
2022-04-02 00:25:20,579 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[7:11] new[1:10]
2022-04-02 00:25:20,579 - parso.python.diff - DEBUG - diff _parse: parse_part from 11 to 12 (to 11 in part parser)
2022-04-02 00:25:20,579 - parso.python.diff - DEBUG - diff update: -> code[replace] old[12:12] new[12:12]
2022-04-02 00:25:20,579 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 00:26:06,775 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 00:26:06,775 - parso.python.diff - DEBUG - diff update: line_lengths old: 12; new: 20
2022-04-02 00:26:06,775 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:11] new[1:11]
2022-04-02 00:26:06,775 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[7:11] new[1:10]
2022-04-02 00:26:06,776 - parso.python.diff - DEBUG - diff _parse: parse_part from 11 to 16 (to 17 in part parser)
2022-04-02 00:26:06,777 - parso.python.diff - DEBUG - diff update: -> code[replace] old[12:12] new[12:20]
2022-04-02 00:26:06,777 - parso.python.diff - DEBUG - diff _parse: parse_part from 17 to 20 (to 19 in part parser)
2022-04-02 00:26:06,777 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 00:43:07,651 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 00:43:07,651 - parso.python.diff - DEBUG - diff update: line_lengths old: 20; new: 1
2022-04-02 00:43:07,651 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:20] new[1:1]
2022-04-02 00:43:07,652 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-02 00:43:07,652 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 00:43:10,770 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 00:43:10,770 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-04-02 00:43:10,770 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-04-02 00:43:10,771 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-02 00:43:10,771 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 00:48:10,209 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 00:48:10,209 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-04-02 00:48:10,209 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-04-02 00:48:10,210 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-02 00:48:10,210 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 11:07:59,909 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-02 11:09:39,551 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-02 11:09:39,552 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,552 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,552 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,552 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-02 11:09:39,552 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-02 11:09:39,553 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,553 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,553 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,553 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-02 11:09:39,553 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,553 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,553 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-02 11:09:39,553 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,553 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,553 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,553 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,554 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,554 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,554 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,554 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,554 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,554 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,554 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,554 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,555 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,555 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,555 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,555 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,555 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,555 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,555 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,556 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,556 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,556 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,556 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-02 11:09:39,556 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-02 11:09:39,556 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,556 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,556 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-02 11:09:39,556 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,556 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,556 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,556 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-02 11:09:39,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-02 11:09:39,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,557 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-02 11:09:39,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-02 11:09:39,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,558 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-02 11:09:39,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,559 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-02 11:09:39,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-02 11:09:39,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-02 11:09:39,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-02 11:09:39,560 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-02 11:09:39,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-02 11:09:39,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,561 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 11:09:39,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,562 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-02 11:09:39,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-02 11:09:39,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-02 11:09:39,563 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-02 11:09:39,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,564 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-02 11:09:39,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-02 11:09:39,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-02 11:09:39,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-02 11:09:39,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,565 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-02 11:09:39,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-02 11:09:39,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,566 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-02 11:09:39,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,567 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,568 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,568 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,568 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,568 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,568 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,568 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,568 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,568 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,568 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,568 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,568 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,569 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,569 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,569 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,569 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-02 11:09:39,569 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,569 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 11:09:39,569 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,570 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-02 11:09:39,570 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,570 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,570 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,570 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,570 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,570 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,570 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-02 11:09:39,570 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,570 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-02 11:09:39,570 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,570 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-02 11:09:39,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-02 11:09:39,571 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-02 11:09:39,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-02 11:09:39,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,572 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-02 11:09:39,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-02 11:09:39,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-02 11:09:39,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-02 11:09:39,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-02 11:09:39,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,573 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,574 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,574 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,574 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-02 11:09:39,574 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-02 11:09:39,574 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,574 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,574 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,574 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,574 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,574 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,575 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-02 11:09:39,575 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,575 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,575 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,575 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,575 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-02 11:09:39,575 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,575 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,575 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,575 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,575 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,575 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,575 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,576 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,576 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,576 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,576 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,576 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,576 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,576 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,576 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,576 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-02 11:09:39,576 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-02 11:09:39,576 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,576 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,576 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-02 11:09:39,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-02 11:09:39,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,577 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-02 11:09:39,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-02 11:09:39,578 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-02 11:09:39,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-02 11:09:39,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,579 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,580 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,580 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,580 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,580 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-02 11:09:39,580 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,580 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,580 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,580 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,580 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,580 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,580 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,580 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-02 11:09:39,581 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,581 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,581 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,581 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,581 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,581 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-02 11:09:39,581 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,581 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,581 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-02 11:09:39,581 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,581 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,582 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-02 11:09:39,582 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,582 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,582 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,583 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,583 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,583 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,583 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,583 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,583 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,583 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,583 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-02 11:09:39,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-02 11:09:39,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,584 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,585 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-02 11:09:39,586 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-02 11:09:39,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,587 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-02 11:09:39,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-02 11:09:39,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-02 11:09:39,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-02 11:09:39,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,588 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-02 11:09:39,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-02 11:09:39,589 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-02 11:09:39,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,590 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-02 11:09:39,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-02 11:09:39,591 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-02 11:09:39,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 11:09:39,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-02 11:09:39,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-02 11:09:39,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-02 11:09:39,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,592 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 11:09:39,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 11:09:39,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-02 11:09:39,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,593 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 11:09:39,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 11:09:39,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-02 11:09:39,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 11:09:39,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,594 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-02 11:09:39,595 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-02 11:50:23,768 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/frame.py
2022-04-02 11:50:23,889 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2022-04-02 11:50:23,893 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/__init__.py
2022-04-02 11:50:23,895 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/__init__.py
2022-04-02 11:50:23,956 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/generic.py
2022-04-02 11:50:23,998 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/base.py
2022-04-02 11:50:24,008 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/accessor.py
2022-04-02 11:50:24,115 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/indexing.py
2022-04-02 11:50:24,131 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/arraylike.py
2022-04-02 11:50:24,141 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/_typing.py
2022-04-02 11:50:24,165 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/typing.py
2022-04-02 11:50:24,180 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
2022-04-02 11:50:24,190 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2022-04-02 11:50:24,232 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/series.py
2022-04-02 11:50:24,327 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/common.py
2022-04-02 11:50:24,334 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/_libs/__init__.py
2022-04-02 11:50:24,760 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/indexes/__init__.py
2022-04-02 11:50:24,765 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/indexes/api.py
2022-04-02 11:50:24,815 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/indexes/base.py
2022-04-02 11:50:24,851 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/arrays/__init__.py
2022-04-02 11:50:24,864 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/arrays/base.py
2022-04-02 11:50:24,874 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/__init__.py
2022-04-02 11:50:24,879 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/__init__.py
2022-04-02 11:50:24,895 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/numeric.py
2022-04-02 11:50:24,904 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/umath.py
2022-04-02 11:50:24,930 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/numerictypes.py
2022-04-02 11:50:24,946 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/fromnumeric.py
2022-04-02 11:50:24,965 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/arrayprint.py
2022-04-02 11:50:24,969 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/_asarray.py
2022-04-02 11:50:24,973 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/_ufunc_config.py
2022-04-02 11:50:24,985 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/records.py
2022-04-02 11:50:24,989 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/memmap.py
2022-04-02 11:50:24,994 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/function_base.py
2022-04-02 11:50:25,001 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/machar.py
2022-04-02 11:50:25,011 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/getlimits.py
2022-04-02 11:50:25,018 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/shape_base.py
2022-04-02 11:50:25,032 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/einsumfunc.py
2022-04-02 11:50:25,035 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/__init__.py
2022-04-02 11:50:25,059 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/type_check.py
2022-04-02 11:50:25,067 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/index_tricks.py
2022-04-02 11:50:25,099 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/function_base.py
2022-04-02 11:50:25,110 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/nanfunctions.py
2022-04-02 11:50:25,118 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/shape_base.py
2022-04-02 11:50:25,122 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/stride_tricks.py
2022-04-02 11:50:25,130 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/twodim_base.py
2022-04-02 11:50:25,134 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/ufunclike.py
2022-04-02 11:50:25,147 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/histograms.py
2022-04-02 11:50:25,162 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/polynomial.py
2022-04-02 11:50:25,179 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/utils.py
2022-04-02 11:50:25,187 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/arraysetops.py
2022-04-02 11:50:25,237 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/npyio.py
2022-04-02 11:50:25,245 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/financial.py
2022-04-02 11:50:25,254 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/arraypad.py
2022-04-02 11:50:25,258 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/_version.py
2022-04-02 11:50:25,260 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/matrixlib/__init__.py
2022-04-02 11:50:25,267 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/matrixlib/defmatrix.py
2022-04-02 11:50:25,293 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/indexers.py
2022-04-02 11:50:25,311 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/api.py
2022-04-02 11:50:25,327 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/indexes/range.py
2022-04-02 11:50:25,341 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/pandas/core/indexes/numeric.py
2022-04-02 11:50:25,378 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/types.py
2022-04-02 11:50:25,385 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/types.pyi
2022-04-02 11:50:25,427 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/numpy/core/multiarray.py
2022-04-02 12:15:31,245 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 12:15:31,245 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 23
2022-04-02 12:15:31,245 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:23]
2022-04-02 12:15:31,248 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 23 (to 22 in part parser)
2022-04-02 12:15:31,248 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 12:20:30,896 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 12:20:30,896 - parso.python.diff - DEBUG - diff update: line_lengths old: 23; new: 1
2022-04-02 12:20:30,896 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:23] new[1:1]
2022-04-02 12:20:30,896 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-02 12:20:30,896 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 12:20:43,586 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 12:20:43,586 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-04-02 12:20:43,586 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-04-02 12:20:43,586 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-02 12:20:43,586 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 12:20:58,953 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 12:20:58,953 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-04-02 12:20:58,953 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-04-02 12:20:58,954 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-02 12:20:58,954 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 12:21:58,782 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 12:21:58,782 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 2
2022-04-02 12:21:58,782 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:2]
2022-04-02 12:21:58,783 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 2 (to 1 in part parser)
2022-04-02 12:21:58,783 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 12:22:09,807 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 12:22:09,808 - parso.python.diff - DEBUG - diff update: line_lengths old: 2; new: 3
2022-04-02 12:22:09,808 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:1] new[1:1]
2022-04-02 12:22:09,809 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 3 (to 2 in part parser)
2022-04-02 12:22:09,809 - parso.python.diff - DEBUG - diff update: -> code[replace] old[2:2] new[2:3]
2022-04-02 12:22:09,809 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 12:22:30,248 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 12:22:30,248 - parso.python.diff - DEBUG - diff update: line_lengths old: 3; new: 4
2022-04-02 12:22:30,248 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:2] new[1:2]
2022-04-02 12:22:30,249 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 4 (to 3 in part parser)
2022-04-02 12:22:30,249 - parso.python.diff - DEBUG - diff update: -> code[replace] old[3:3] new[3:4]
2022-04-02 12:22:30,249 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 12:22:34,467 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 12:22:34,467 - parso.python.diff - DEBUG - diff update: line_lengths old: 4; new: 5
2022-04-02 12:22:34,467 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:3] new[1:3]
2022-04-02 12:22:34,468 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 5 (to 4 in part parser)
2022-04-02 12:22:34,469 - parso.python.diff - DEBUG - diff update: -> code[replace] old[4:4] new[4:5]
2022-04-02 12:22:34,469 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 12:22:46,167 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 12:22:46,168 - parso.python.diff - DEBUG - diff update: line_lengths old: 5; new: 6
2022-04-02 12:22:46,168 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:4] new[1:4]
2022-04-02 12:22:46,169 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 6 (to 5 in part parser)
2022-04-02 12:22:46,169 - parso.python.diff - DEBUG - diff update: -> code[replace] old[5:5] new[5:6]
2022-04-02 12:22:46,169 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 12:22:56,247 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 12:22:56,248 - parso.python.diff - DEBUG - diff update: line_lengths old: 6; new: 7
2022-04-02 12:22:56,249 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:5] new[1:5]
2022-04-02 12:22:56,250 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 7 (to 6 in part parser)
2022-04-02 12:22:56,250 - parso.python.diff - DEBUG - diff update: -> code[replace] old[6:6] new[6:7]
2022-04-02 12:22:56,250 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 12:23:13,719 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 12:23:13,719 - parso.python.diff - DEBUG - diff update: line_lengths old: 7; new: 9
2022-04-02 12:23:13,719 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:6] new[1:6]
2022-04-02 12:23:13,720 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 9 (to 8 in part parser)
2022-04-02 12:23:13,721 - parso.python.diff - DEBUG - diff update: -> code[replace] old[7:7] new[7:9]
2022-04-02 12:23:13,721 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 12:24:25,391 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 12:24:25,391 - parso.python.diff - DEBUG - diff update: line_lengths old: 9; new: 2
2022-04-02 12:24:25,391 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:9] new[1:2]
2022-04-02 12:24:25,392 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 2 (to 1 in part parser)
2022-04-02 12:24:25,392 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 12:25:12,328 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 12:25:12,328 - parso.python.diff - DEBUG - diff update: line_lengths old: 2; new: 23
2022-04-02 12:25:12,328 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:2] new[1:23]
2022-04-02 12:25:12,332 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 23 (to 22 in part parser)
2022-04-02 12:25:12,332 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 12:25:21,250 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 12:25:21,251 - parso.python.diff - DEBUG - diff update: line_lengths old: 23; new: 1
2022-04-02 12:25:21,251 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:23] new[1:1]
2022-04-02 12:25:21,251 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-02 12:25:21,252 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 12:25:32,308 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 12:25:32,309 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 3
2022-04-02 12:25:32,309 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:3]
2022-04-02 12:25:32,310 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 3 (to 2 in part parser)
2022-04-02 12:25:32,310 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 12:25:33,108 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 12:25:33,108 - parso.python.diff - DEBUG - diff update: line_lengths old: 3; new: 3
2022-04-02 12:25:33,109 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:2] new[1:2]
2022-04-02 12:25:33,110 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 3 (to 2 in part parser)
2022-04-02 12:25:33,110 - parso.python.diff - DEBUG - diff update: -> code[replace] old[3:3] new[3:3]
2022-04-02 12:25:33,110 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 12:25:35,954 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 12:25:35,955 - parso.python.diff - DEBUG - diff update: line_lengths old: 3; new: 3
2022-04-02 12:25:35,955 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:2] new[1:2]
2022-04-02 12:25:35,956 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 3 (to 2 in part parser)
2022-04-02 12:25:35,956 - parso.python.diff - DEBUG - diff update: -> code[replace] old[3:3] new[3:3]
2022-04-02 12:25:35,956 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 14:35:52,154 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 14:35:52,155 - parso.python.diff - DEBUG - diff update: line_lengths old: 3; new: 1
2022-04-02 14:35:52,156 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:3] new[1:1]
2022-04-02 14:35:52,156 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-02 14:35:52,156 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 14:57:47,644 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 14:57:47,646 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 34
2022-04-02 14:57:47,646 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:34]
2022-04-02 14:57:47,650 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 34 (to 33 in part parser)
2022-04-02 14:57:47,650 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 15:14:24,403 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 15:14:24,404 - parso.python.diff - DEBUG - diff update: line_lengths old: 34; new: 2
2022-04-02 15:14:24,404 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:34] new[1:2]
2022-04-02 15:14:24,404 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 2 (to 1 in part parser)
2022-04-02 15:14:24,405 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 15:16:11,010 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 15:16:11,011 - parso.python.diff - DEBUG - diff update: line_lengths old: 2; new: 2
2022-04-02 15:16:11,011 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:1] new[1:1]
2022-04-02 15:16:11,012 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 2 (to 1 in part parser)
2022-04-02 15:16:11,012 - parso.python.diff - DEBUG - diff update: -> code[replace] old[2:2] new[2:2]
2022-04-02 15:16:11,012 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 15:16:12,012 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 15:16:12,012 - parso.python.diff - DEBUG - diff update: line_lengths old: 2; new: 2
2022-04-02 15:16:12,012 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:1] new[1:1]
2022-04-02 15:16:12,013 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 2 (to 1 in part parser)
2022-04-02 15:16:12,013 - parso.python.diff - DEBUG - diff update: -> code[replace] old[2:2] new[2:2]
2022-04-02 15:16:12,013 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 15:18:38,768 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-02 15:22:11,303 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-02 15:22:11,303 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,304 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,304 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,304 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-02 15:22:11,304 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-02 15:22:11,304 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,304 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,304 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,304 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-02 15:22:11,305 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,305 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,305 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-02 15:22:11,305 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,305 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,305 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,305 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,305 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,305 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,305 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,306 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,306 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,306 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,306 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,306 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,306 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,306 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,306 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,306 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,306 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,306 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,306 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,307 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,307 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,307 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,307 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-02 15:22:11,307 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-02 15:22:11,307 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,307 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,307 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-02 15:22:11,307 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,307 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,307 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,307 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,308 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,308 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,308 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,308 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,308 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-02 15:22:11,308 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,308 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,308 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,308 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,308 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-02 15:22:11,308 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,308 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-02 15:22:11,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-02 15:22:11,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-02 15:22:11,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-02 15:22:11,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-02 15:22:11,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-02 15:22:11,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-02 15:22:11,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-02 15:22:11,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-02 15:22:11,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 15:22:11,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-02 15:22:11,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-02 15:22:11,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-02 15:22:11,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-02 15:22:11,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-02 15:22:11,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-02 15:22:11,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-02 15:22:11,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-02 15:22:11,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-02 15:22:11,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-02 15:22:11,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-02 15:22:11,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-02 15:22:11,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 15:22:11,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-02 15:22:11,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-02 15:22:11,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-02 15:22:11,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-02 15:22:11,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-02 15:22:11,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-02 15:22:11,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-02 15:22:11,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-02 15:22:11,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-02 15:22:11,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-02 15:22:11,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-02 15:22:11,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-02 15:22:11,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-02 15:22:11,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-02 15:22:11,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-02 15:22:11,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-02 15:22:11,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-02 15:22:11,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-02 15:22:11,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-02 15:22:11,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-02 15:22:11,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-02 15:22:11,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-02 15:22:11,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-02 15:22:11,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-02 15:22:11,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-02 15:22:11,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-02 15:22:11,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-02 15:22:11,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-02 15:22:11,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-02 15:22:11,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-02 15:22:11,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-02 15:22:11,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-02 15:22:11,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-02 15:22:11,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-02 15:22:11,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-02 15:22:11,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-02 15:22:11,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-02 15:22:11,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-02 15:22:11,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-02 15:22:11,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-02 15:22:11,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-02 15:22:11,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-02 15:22:11,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-02 15:22:11,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 15:22:11,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-02 15:22:11,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-02 15:22:11,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-02 15:22:11,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 15:22:11,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 15:22:11,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-02 15:22:11,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 15:22:11,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 15:22:11,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-02 15:22:11,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 15:22:11,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-02 15:22:11,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-02 15:41:13,943 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2022-04-02 15:41:13,988 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2022-04-02 15:41:14,027 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 15:41:14,028 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-04-02 15:41:14,028 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-04-02 15:41:14,028 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-02 15:41:14,028 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 15:49:10,848 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 15:49:10,849 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-04-02 15:49:10,849 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-04-02 15:49:10,850 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-02 15:49:10,850 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 15:55:52,435 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 15:55:52,436 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-04-02 15:55:52,436 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-04-02 15:55:52,436 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-02 15:55:52,436 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 15:55:53,549 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 15:55:53,549 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-04-02 15:55:53,550 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-04-02 15:55:53,550 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-02 15:55:53,550 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 15:55:58,242 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 15:55:58,242 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-04-02 15:55:58,243 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-04-02 15:55:58,243 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-02 15:55:58,244 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 15:56:04,509 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 15:56:04,509 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-04-02 15:56:04,509 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-04-02 15:56:04,510 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-02 15:56:04,510 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 15:56:07,265 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 15:56:07,265 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-04-02 15:56:07,266 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-04-02 15:56:07,266 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-02 15:56:07,266 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 16:02:33,778 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-02 16:27:41,094 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-02 16:27:49,143 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-02 16:27:49,143 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-02 16:27:49,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-02 16:27:49,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-02 16:27:49,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,144 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-02 16:27:49,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,145 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-02 16:27:49,146 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-02 16:27:49,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-02 16:27:49,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,147 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-02 16:27:49,148 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,148 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,148 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,148 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,148 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-02 16:27:49,148 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,148 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,148 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,148 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,148 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-02 16:27:49,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-02 16:27:49,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,149 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-02 16:27:49,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,150 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-02 16:27:49,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-02 16:27:49,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-02 16:27:49,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-02 16:27:49,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,151 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-02 16:27:49,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-02 16:27:49,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,152 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 16:27:49,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-02 16:27:49,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,153 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-02 16:27:49,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-02 16:27:49,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-02 16:27:49,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,154 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-02 16:27:49,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-02 16:27:49,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-02 16:27:49,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-02 16:27:49,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-02 16:27:49,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-02 16:27:49,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-02 16:27:49,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-02 16:27:49,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 16:27:49,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-02 16:27:49,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-02 16:27:49,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-02 16:27:49,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-02 16:27:49,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-02 16:27:49,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-02 16:27:49,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-02 16:27:49,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-02 16:27:49,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-02 16:27:49,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-02 16:27:49,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-02 16:27:49,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-02 16:27:49,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-02 16:27:49,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-02 16:27:49,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-02 16:27:49,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-02 16:27:49,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-02 16:27:49,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-02 16:27:49,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-02 16:27:49,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-02 16:27:49,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-02 16:27:49,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-02 16:27:49,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-02 16:27:49,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-02 16:27:49,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-02 16:27:49,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-02 16:27:49,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-02 16:27:49,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-02 16:27:49,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-02 16:27:49,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-02 16:27:49,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-02 16:27:49,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-02 16:27:49,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-02 16:27:49,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-02 16:27:49,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-02 16:27:49,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-02 16:27:49,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-02 16:27:49,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-02 16:27:49,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-02 16:27:49,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-02 16:27:49,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,179 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,179 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-02 16:27:49,179 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,179 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,179 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,179 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,179 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,179 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,179 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,179 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,180 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,180 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-02 16:27:49,180 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,180 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,180 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,180 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-02 16:27:49,180 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,180 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 16:27:49,180 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,180 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,180 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,181 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,181 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-02 16:27:49,181 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-02 16:27:49,181 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-02 16:27:49,181 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,181 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,181 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,181 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 16:27:49,181 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,181 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,181 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,181 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,181 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,182 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,182 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,182 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 16:27:49,182 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,182 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,182 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-02 16:27:49,182 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,182 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 16:27:49,182 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,182 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 16:27:49,182 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,182 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,182 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-02 16:27:49,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 16:27:49,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-02 16:27:49,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-02 16:37:22,066 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2022-04-02 16:37:22,109 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2022-04-02 16:44:46,735 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 16:44:46,736 - parso.python.diff - DEBUG - diff update: line_lengths old: 25; new: 26
2022-04-02 16:44:46,736 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:22] new[1:22]
2022-04-02 16:44:46,736 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[3:24] new[1:20]
2022-04-02 16:44:46,737 - parso.python.diff - DEBUG - diff _parse: parse_part from 21 to 23 (to 24 in part parser)
2022-04-02 16:44:46,737 - parso.python.diff - DEBUG - diff update: -> code[replace] old[23:25] new[23:26]
2022-04-02 16:44:46,738 - parso.python.diff - DEBUG - diff _parse: parse_part from 24 to 26 (to 25 in part parser)
2022-04-02 16:44:46,738 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 17:11:55,327 - root - ERROR - ultratb inspect_error: Internal Python error in the inspect module.
Below is the traceback from this internal error.

2022-04-02 17:14:38,888 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-02 17:14:38,891 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,891 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,891 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,891 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-02 17:14:38,891 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-02 17:14:38,892 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,892 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,892 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,892 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-02 17:14:38,892 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,892 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,892 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-02 17:14:38,892 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,892 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,892 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,892 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,893 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,893 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,893 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,893 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,893 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,893 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,893 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,893 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,893 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,893 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,893 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,893 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,893 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-02 17:14:38,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-02 17:14:38,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-02 17:14:38,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-02 17:14:38,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-02 17:14:38,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-02 17:14:38,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-02 17:14:38,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-02 17:14:38,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-02 17:14:38,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-02 17:14:38,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-02 17:14:38,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-02 17:14:38,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-02 17:14:38,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-02 17:14:38,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 17:14:38,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-02 17:14:38,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-02 17:14:38,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-02 17:14:38,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,901 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,901 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-02 17:14:38,901 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,901 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,901 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,901 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,901 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,901 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,901 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,902 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-02 17:14:38,902 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,902 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,902 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,902 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,902 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-02 17:14:38,902 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-02 17:14:38,902 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,902 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-02 17:14:38,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-02 17:14:38,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-02 17:14:38,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-02 17:14:38,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-02 17:14:38,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 17:14:38,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-02 17:14:38,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-02 17:14:38,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-02 17:14:38,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-02 17:14:38,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-02 17:14:38,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-02 17:14:38,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-02 17:14:38,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-02 17:14:38,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-02 17:14:38,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-02 17:14:38,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-02 17:14:38,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-02 17:14:38,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-02 17:14:38,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-02 17:14:38,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-02 17:14:38,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-02 17:14:38,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,912 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,912 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,912 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-02 17:14:38,912 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-02 17:14:38,912 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,912 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,912 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,912 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-02 17:14:38,912 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,912 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,912 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-02 17:14:38,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-02 17:14:38,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-02 17:14:38,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,915 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-02 17:14:38,915 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,915 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-02 17:14:38,915 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,915 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,915 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,915 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,915 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,915 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,915 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,915 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-02 17:14:38,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-02 17:14:38,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-02 17:14:38,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-02 17:14:38,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-02 17:14:38,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-02 17:14:38,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-02 17:14:38,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-02 17:14:38,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-02 17:14:38,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-02 17:14:38,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-02 17:14:38,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-02 17:14:38,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-02 17:14:38,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-02 17:14:38,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-02 17:14:38,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-02 17:14:38,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-02 17:14:38,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-02 17:14:38,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-02 17:14:38,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 17:14:38,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-02 17:14:38,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-02 17:14:38,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-02 17:14:38,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 17:14:38,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 17:14:38,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-02 17:14:38,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 17:14:38,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 17:14:38,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-02 17:14:38,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 17:14:38,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-02 17:14:38,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-02 17:57:52,215 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2022-04-02 17:57:52,255 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2022-04-02 17:58:04,291 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 17:58:04,292 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 1
2022-04-02 17:58:04,292 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:1]
2022-04-02 17:58:04,292 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-02 17:58:04,292 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 18:04:59,192 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 18:04:59,192 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 21
2022-04-02 18:04:59,192 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:21]
2022-04-02 18:04:59,195 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 21 (to 20 in part parser)
2022-04-02 18:04:59,195 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 18:04:59,236 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/sklearn/__init__.py
2022-04-02 18:04:59,250 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/sklearn/base.py
2022-04-02 18:05:49,843 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 18:05:49,844 - parso.python.diff - DEBUG - diff update: line_lengths old: 21; new: 1
2022-04-02 18:05:49,844 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:21] new[1:1]
2022-04-02 18:05:49,845 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-02 18:05:49,845 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 18:05:54,208 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 18:05:54,208 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 2
2022-04-02 18:05:54,209 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:2]
2022-04-02 18:05:54,209 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 2 (to 1 in part parser)
2022-04-02 18:05:54,210 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 18:05:55,220 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 18:05:55,221 - parso.python.diff - DEBUG - diff update: line_lengths old: 2; new: 2
2022-04-02 18:05:55,221 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:1] new[1:1]
2022-04-02 18:05:55,221 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:1] new[1:1]
2022-04-02 18:05:55,221 - parso.python.diff - DEBUG - diff update: -> code[replace] old[2:2] new[2:2]
2022-04-02 18:05:55,222 - parso.python.diff - DEBUG - diff _parse: parse_part from 2 to 2 (to 1 in part parser)
2022-04-02 18:05:55,222 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 18:11:55,423 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 18:11:55,424 - parso.python.diff - DEBUG - diff update: line_lengths old: 2; new: 21
2022-04-02 18:11:55,425 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:2] new[1:21]
2022-04-02 18:11:55,428 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 21 (to 20 in part parser)
2022-04-02 18:11:55,428 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 18:13:19,453 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 18:13:19,453 - parso.python.diff - DEBUG - diff update: line_lengths old: 21; new: 30
2022-04-02 18:13:19,453 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:18] new[1:18]
2022-04-02 18:13:19,453 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[3:20] new[1:15]
2022-04-02 18:13:19,454 - parso.python.diff - DEBUG - diff _parse: parse_part from 16 to 16 (to 16 in part parser)
2022-04-02 18:13:19,456 - parso.python.diff - DEBUG - diff _parse: parse_part from 17 to 30 (to 29 in part parser)
2022-04-02 18:13:19,456 - parso.python.diff - DEBUG - diff update: -> code[insert] old[19:18] new[19:20]
2022-04-02 18:13:19,457 - parso.python.diff - DEBUG - diff update: -> code[equal] old[19:20] new[21:22]
2022-04-02 18:13:19,457 - parso.python.diff - DEBUG - diff update: -> code[replace] old[21:21] new[23:30]
2022-04-02 18:13:19,457 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 18:13:19,484 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/typing.py
2022-04-02 18:13:19,499 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
2022-04-02 18:16:08,819 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 18:16:08,819 - parso.python.diff - DEBUG - diff update: line_lengths old: 30; new: 38
2022-04-02 18:16:08,819 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:19] new[1:19]
2022-04-02 18:16:08,819 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[3:29] new[1:19]
2022-04-02 18:16:08,819 - parso.python.diff - DEBUG - diff update: -> code[insert] old[20:19] new[20:20]
2022-04-02 18:16:08,820 - parso.python.diff - DEBUG - diff _parse: parse_part from 20 to 20 (to 22 in part parser)
2022-04-02 18:16:08,820 - parso.python.diff - DEBUG - diff update: -> code[equal] old[20:22] new[21:23]
2022-04-02 18:16:08,820 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[22:22] new[21:23]
2022-04-02 18:16:08,821 - parso.python.diff - DEBUG - diff update: -> code[delete] old[23:24] new[24:23]
2022-04-02 18:16:08,821 - parso.python.diff - DEBUG - diff update: -> code[equal] old[25:29] new[24:28]
2022-04-02 18:16:08,821 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[26:26] new[24:25]
2022-04-02 18:16:08,822 - parso.python.diff - DEBUG - diff _parse: parse_part from 26 to 34 (to 35 in part parser)
2022-04-02 18:16:08,822 - parso.python.diff - DEBUG - diff update: -> code[replace] old[30:30] new[29:38]
2022-04-02 18:16:08,823 - parso.python.diff - DEBUG - diff _parse: parse_part from 35 to 38 (to 37 in part parser)
2022-04-02 18:16:08,823 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 18:16:08,831 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/re.py
2022-04-02 18:16:08,838 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/re.pyi
2022-04-02 18:16:12,813 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 18:16:12,813 - parso.python.diff - DEBUG - diff update: line_lengths old: 38; new: 38
2022-04-02 18:16:12,813 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:37] new[1:37]
2022-04-02 18:16:12,814 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[3:37] new[1:36]
2022-04-02 18:16:12,814 - parso.python.diff - DEBUG - diff _parse: parse_part from 37 to 38 (to 37 in part parser)
2022-04-02 18:16:12,815 - parso.python.diff - DEBUG - diff update: -> code[replace] old[38:38] new[38:38]
2022-04-02 18:16:12,815 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 18:17:21,326 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 18:17:21,327 - parso.python.diff - DEBUG - diff update: line_lengths old: 38; new: 36
2022-04-02 18:17:21,327 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:35] new[1:35]
2022-04-02 18:17:21,327 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[3:37] new[1:34]
2022-04-02 18:17:21,328 - parso.python.diff - DEBUG - diff _parse: parse_part from 35 to 36 (to 35 in part parser)
2022-04-02 18:17:21,328 - parso.python.diff - DEBUG - diff update: -> code[replace] old[36:38] new[36:36]
2022-04-02 18:17:21,328 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 18:18:12,998 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 18:18:12,999 - parso.python.diff - DEBUG - diff update: line_lengths old: 36; new: 39
2022-04-02 18:18:12,999 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:35] new[1:35]
2022-04-02 18:18:12,999 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[3:35] new[1:34]
2022-04-02 18:18:13,000 - parso.python.diff - DEBUG - diff _parse: parse_part from 35 to 36 (to 37 in part parser)
2022-04-02 18:18:13,000 - parso.python.diff - DEBUG - diff update: -> code[replace] old[36:36] new[36:39]
2022-04-02 18:18:13,001 - parso.python.diff - DEBUG - diff _parse: parse_part from 37 to 39 (to 38 in part parser)
2022-04-02 18:18:13,001 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 18:18:47,593 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 18:18:47,593 - parso.python.diff - DEBUG - diff update: line_lengths old: 39; new: 40
2022-04-02 18:18:47,593 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:38] new[1:38]
2022-04-02 18:18:47,594 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[3:38] new[1:38]
2022-04-02 18:18:47,594 - parso.python.diff - DEBUG - diff update: -> code[replace] old[39:39] new[39:40]
2022-04-02 18:18:47,594 - parso.python.diff - DEBUG - diff _parse: parse_part from 39 to 40 (to 39 in part parser)
2022-04-02 18:18:47,594 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 18:20:24,445 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 18:20:24,446 - parso.python.diff - DEBUG - diff update: line_lengths old: 40; new: 26
2022-04-02 18:20:24,446 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:25] new[1:25]
2022-04-02 18:20:24,446 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[3:39] new[1:25]
2022-04-02 18:20:24,446 - parso.python.diff - DEBUG - diff update: -> code[replace] old[26:40] new[26:26]
2022-04-02 18:20:24,447 - parso.python.diff - DEBUG - diff _parse: parse_part from 26 to 26 (to 25 in part parser)
2022-04-02 18:20:24,447 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 18:20:30,757 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 18:20:30,757 - parso.python.diff - DEBUG - diff update: line_lengths old: 26; new: 27
2022-04-02 18:20:30,757 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:25] new[1:25]
2022-04-02 18:20:30,757 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[3:25] new[1:25]
2022-04-02 18:20:30,758 - parso.python.diff - DEBUG - diff update: -> code[replace] old[26:26] new[26:27]
2022-04-02 18:20:30,758 - parso.python.diff - DEBUG - diff _parse: parse_part from 26 to 27 (to 26 in part parser)
2022-04-02 18:20:30,758 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 18:24:24,228 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 18:24:24,229 - parso.python.diff - DEBUG - diff update: line_lengths old: 27; new: 49
2022-04-02 18:24:24,229 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:26] new[1:26]
2022-04-02 18:24:24,229 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[3:26] new[1:26]
2022-04-02 18:24:24,229 - parso.python.diff - DEBUG - diff update: -> code[replace] old[27:27] new[27:49]
2022-04-02 18:24:24,232 - parso.python.diff - DEBUG - diff _parse: parse_part from 27 to 49 (to 48 in part parser)
2022-04-02 18:24:24,232 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 18:28:07,202 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-02 18:33:07,088 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 18:33:07,089 - parso.python.diff - DEBUG - diff update: line_lengths old: 49; new: 1
2022-04-02 18:33:07,090 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:49] new[1:1]
2022-04-02 18:33:07,090 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 1 (to 0 in part parser)
2022-04-02 18:33:07,090 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 18:33:59,189 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 18:33:59,189 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 6
2022-04-02 18:33:59,189 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:6]
2022-04-02 18:33:59,190 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 6 (to 5 in part parser)
2022-04-02 18:33:59,190 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 18:38:01,728 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 18:38:01,728 - parso.python.diff - DEBUG - diff update: line_lengths old: 6; new: 4
2022-04-02 18:38:01,728 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:6] new[1:4]
2022-04-02 18:38:01,728 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 4 (to 3 in part parser)
2022-04-02 18:38:01,728 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 18:38:09,920 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 18:38:09,921 - parso.python.diff - DEBUG - diff update: line_lengths old: 4; new: 4
2022-04-02 18:38:09,921 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:3] new[1:3]
2022-04-02 18:38:09,921 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[3:3] new[1:3]
2022-04-02 18:38:09,921 - parso.python.diff - DEBUG - diff update: -> code[replace] old[4:4] new[4:4]
2022-04-02 18:38:09,922 - parso.python.diff - DEBUG - diff _parse: parse_part from 4 to 4 (to 3 in part parser)
2022-04-02 18:38:09,922 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 18:38:52,704 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 18:38:52,704 - parso.python.diff - DEBUG - diff update: line_lengths old: 4; new: 15
2022-04-02 18:38:52,705 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:4] new[1:15]
2022-04-02 18:38:52,707 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 15 (to 14 in part parser)
2022-04-02 18:38:52,707 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 18:38:57,126 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 18:38:57,126 - parso.python.diff - DEBUG - diff update: line_lengths old: 15; new: 16
2022-04-02 18:38:57,126 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:14] new[1:14]
2022-04-02 18:38:57,127 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:14] new[1:8]
2022-04-02 18:38:57,128 - parso.python.diff - DEBUG - diff _parse: parse_part from 9 to 16 (to 15 in part parser)
2022-04-02 18:38:57,128 - parso.python.diff - DEBUG - diff update: -> code[replace] old[15:15] new[15:16]
2022-04-02 18:38:57,128 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 18:39:38,459 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 18:39:38,459 - parso.python.diff - DEBUG - diff update: line_lengths old: 16; new: 3
2022-04-02 18:39:38,459 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:16] new[1:3]
2022-04-02 18:39:38,460 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 3 (to 2 in part parser)
2022-04-02 18:39:38,460 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 18:39:51,407 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 18:39:51,408 - parso.python.diff - DEBUG - diff update: line_lengths old: 3; new: 4
2022-04-02 18:39:51,408 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:2] new[1:2]
2022-04-02 18:39:51,409 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 4 (to 3 in part parser)
2022-04-02 18:39:51,409 - parso.python.diff - DEBUG - diff update: -> code[replace] old[3:3] new[3:4]
2022-04-02 18:39:51,409 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 18:43:03,514 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 18:43:03,515 - parso.python.diff - DEBUG - diff update: line_lengths old: 4; new: 13
2022-04-02 18:43:03,516 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:4] new[1:13]
2022-04-02 18:43:03,517 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 13 (to 12 in part parser)
2022-04-02 18:43:03,518 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 18:43:30,245 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 18:43:30,245 - parso.python.diff - DEBUG - diff update: line_lengths old: 13; new: 13
2022-04-02 18:43:30,245 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:10] new[1:10]
2022-04-02 18:43:30,246 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:12] new[1:8]
2022-04-02 18:43:30,247 - parso.python.diff - DEBUG - diff _parse: parse_part from 9 to 13 (to 12 in part parser)
2022-04-02 18:43:30,247 - parso.python.diff - DEBUG - diff update: -> code[replace] old[11:11] new[11:11]
2022-04-02 18:43:30,247 - parso.python.diff - DEBUG - diff update: -> code[equal] old[12:12] new[12:12]
2022-04-02 18:43:30,247 - parso.python.diff - DEBUG - diff update: -> code[replace] old[13:13] new[13:13]
2022-04-02 18:43:30,247 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 21:05:12,583 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-02 21:06:51,010 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2022-04-02 21:06:51,064 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2022-04-02 21:06:53,668 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 21:06:53,668 - parso.python.diff - DEBUG - diff update: line_lengths old: 14; new: 14
2022-04-02 21:06:53,669 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:13] new[1:13]
2022-04-02 21:06:53,669 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:13] new[1:8]
2022-04-02 21:06:53,670 - parso.python.diff - DEBUG - diff _parse: parse_part from 9 to 14 (to 13 in part parser)
2022-04-02 21:06:53,670 - parso.python.diff - DEBUG - diff update: -> code[replace] old[14:14] new[14:14]
2022-04-02 21:06:53,670 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 21:06:55,772 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 21:06:55,772 - parso.python.diff - DEBUG - diff update: line_lengths old: 14; new: 14
2022-04-02 21:06:55,772 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:13] new[1:13]
2022-04-02 21:06:55,773 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:13] new[1:8]
2022-04-02 21:06:55,774 - parso.python.diff - DEBUG - diff _parse: parse_part from 9 to 14 (to 13 in part parser)
2022-04-02 21:06:55,774 - parso.python.diff - DEBUG - diff update: -> code[replace] old[14:14] new[14:14]
2022-04-02 21:06:55,774 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 21:07:35,236 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 21:07:35,236 - parso.python.diff - DEBUG - diff update: line_lengths old: 14; new: 3
2022-04-02 21:07:35,237 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:14] new[1:3]
2022-04-02 21:07:35,237 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 3 (to 2 in part parser)
2022-04-02 21:07:35,237 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 21:07:47,964 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 21:07:47,965 - parso.python.diff - DEBUG - diff update: line_lengths old: 3; new: 4
2022-04-02 21:07:47,965 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:2] new[1:2]
2022-04-02 21:07:47,965 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 3 (to 3 in part parser)
2022-04-02 21:07:47,966 - parso.python.diff - DEBUG - diff update: -> code[replace] old[3:3] new[3:4]
2022-04-02 21:07:47,966 - parso.python.diff - DEBUG - diff _parse: parse_part from 4 to 4 (to 3 in part parser)
2022-04-02 21:07:47,966 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 21:08:05,316 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 21:08:05,317 - parso.python.diff - DEBUG - diff update: line_lengths old: 4; new: 5
2022-04-02 21:08:05,317 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:3] new[1:3]
2022-04-02 21:08:05,317 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[3:3] new[1:3]
2022-04-02 21:08:05,317 - parso.python.diff - DEBUG - diff update: -> code[replace] old[4:4] new[4:5]
2022-04-02 21:08:05,319 - parso.python.diff - DEBUG - diff _parse: parse_part from 4 to 5 (to 4 in part parser)
2022-04-02 21:08:05,319 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 21:08:24,620 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 21:08:24,620 - parso.python.diff - DEBUG - diff update: line_lengths old: 5; new: 15
2022-04-02 21:08:24,620 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:5] new[1:15]
2022-04-02 21:08:24,623 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 15 (to 14 in part parser)
2022-04-02 21:08:24,623 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 21:08:31,572 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 21:08:31,572 - parso.python.diff - DEBUG - diff update: line_lengths old: 15; new: 15
2022-04-02 21:08:31,572 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:14] new[1:14]
2022-04-02 21:08:31,573 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:14] new[1:8]
2022-04-02 21:08:31,574 - parso.python.diff - DEBUG - diff _parse: parse_part from 9 to 15 (to 14 in part parser)
2022-04-02 21:08:31,574 - parso.python.diff - DEBUG - diff update: -> code[replace] old[15:15] new[15:15]
2022-04-02 21:08:31,574 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 21:10:57,954 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 21:10:57,955 - parso.python.diff - DEBUG - diff update: line_lengths old: 15; new: 18
2022-04-02 21:10:57,955 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:14] new[1:14]
2022-04-02 21:10:57,955 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:14] new[1:8]
2022-04-02 21:10:57,957 - parso.python.diff - DEBUG - diff _parse: parse_part from 9 to 18 (to 17 in part parser)
2022-04-02 21:10:57,958 - parso.python.diff - DEBUG - diff update: -> code[replace] old[15:15] new[15:18]
2022-04-02 21:10:57,958 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 21:10:59,818 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 21:10:59,819 - parso.python.diff - DEBUG - diff update: line_lengths old: 18; new: 18
2022-04-02 21:10:59,819 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:17] new[1:17]
2022-04-02 21:10:59,819 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:17] new[1:8]
2022-04-02 21:10:59,821 - parso.python.diff - DEBUG - diff _parse: parse_part from 9 to 18 (to 17 in part parser)
2022-04-02 21:10:59,822 - parso.python.diff - DEBUG - diff update: -> code[replace] old[18:18] new[18:18]
2022-04-02 21:10:59,822 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 21:11:07,707 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 21:11:07,707 - parso.python.diff - DEBUG - diff update: line_lengths old: 18; new: 18
2022-04-02 21:11:07,708 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:17] new[1:17]
2022-04-02 21:11:07,709 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:17] new[1:8]
2022-04-02 21:11:07,711 - parso.python.diff - DEBUG - diff _parse: parse_part from 9 to 19 (to 17 in part parser)
2022-04-02 21:11:07,711 - parso.python.diff - DEBUG - diff update: -> code[replace] old[18:18] new[18:18]
2022-04-02 21:11:07,711 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 21:11:07,785 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/typing.py
2022-04-02 21:11:07,804 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
2022-04-02 21:11:12,011 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 21:11:12,011 - parso.python.diff - DEBUG - diff update: line_lengths old: 18; new: 18
2022-04-02 21:11:12,012 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:17] new[1:17]
2022-04-02 21:11:12,012 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:17] new[1:8]
2022-04-02 21:11:12,014 - parso.python.diff - DEBUG - diff _parse: parse_part from 9 to 19 (to 17 in part parser)
2022-04-02 21:11:12,014 - parso.python.diff - DEBUG - diff update: -> code[replace] old[18:18] new[18:18]
2022-04-02 21:11:12,014 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 21:11:16,364 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 21:11:16,365 - parso.python.diff - DEBUG - diff update: line_lengths old: 18; new: 18
2022-04-02 21:11:16,365 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:17] new[1:17]
2022-04-02 21:11:16,365 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:17] new[1:8]
2022-04-02 21:11:16,367 - parso.python.diff - DEBUG - diff _parse: parse_part from 9 to 18 (to 17 in part parser)
2022-04-02 21:11:16,367 - parso.python.diff - DEBUG - diff update: -> code[replace] old[18:18] new[18:18]
2022-04-02 21:11:16,367 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 21:11:17,346 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 21:11:17,347 - parso.python.diff - DEBUG - diff update: line_lengths old: 18; new: 18
2022-04-02 21:11:17,347 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:17] new[1:17]
2022-04-02 21:11:17,347 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:17] new[1:8]
2022-04-02 21:11:17,349 - parso.python.diff - DEBUG - diff _parse: parse_part from 9 to 18 (to 17 in part parser)
2022-04-02 21:11:17,349 - parso.python.diff - DEBUG - diff update: -> code[replace] old[18:18] new[18:18]
2022-04-02 21:11:17,349 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 21:11:20,907 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 21:11:20,907 - parso.python.diff - DEBUG - diff update: line_lengths old: 18; new: 18
2022-04-02 21:11:20,907 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:17] new[1:17]
2022-04-02 21:11:20,908 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:17] new[1:8]
2022-04-02 21:11:20,910 - parso.python.diff - DEBUG - diff _parse: parse_part from 9 to 18 (to 17 in part parser)
2022-04-02 21:11:20,911 - parso.python.diff - DEBUG - diff update: -> code[replace] old[18:18] new[18:18]
2022-04-02 21:11:20,911 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 21:30:43,608 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 21:30:43,608 - parso.python.diff - DEBUG - diff update: line_lengths old: 18; new: 25
2022-04-02 21:30:43,608 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:12]
2022-04-02 21:30:43,612 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 25 (to 24 in part parser)
2022-04-02 21:30:43,612 - parso.python.diff - DEBUG - diff update: -> code[equal] old[2:2] new[13:13]
2022-04-02 21:30:43,612 - parso.python.diff - DEBUG - diff update: -> code[replace] old[3:4] new[14:15]
2022-04-02 21:30:43,612 - parso.python.diff - DEBUG - diff update: -> code[equal] old[5:5] new[16:16]
2022-04-02 21:30:43,612 - parso.python.diff - DEBUG - diff update: -> code[replace] old[6:11] new[17:17]
2022-04-02 21:30:43,612 - parso.python.diff - DEBUG - diff update: -> code[equal] old[12:12] new[18:18]
2022-04-02 21:30:43,612 - parso.python.diff - DEBUG - diff update: -> code[replace] old[13:15] new[19:20]
2022-04-02 21:30:43,612 - parso.python.diff - DEBUG - diff update: -> code[equal] old[16:16] new[21:21]
2022-04-02 21:30:43,612 - parso.python.diff - DEBUG - diff update: -> code[insert] old[17:16] new[22:23]
2022-04-02 21:30:43,612 - parso.python.diff - DEBUG - diff update: -> code[equal] old[17:17] new[24:24]
2022-04-02 21:30:43,612 - parso.python.diff - DEBUG - diff update: -> code[replace] old[18:18] new[25:25]
2022-04-02 21:30:43,612 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 21:30:43,655 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/sklearn/__init__.py
2022-04-02 21:30:43,664 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/sklearn/base.py
2022-04-02 21:31:33,931 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 21:31:33,932 - parso.python.diff - DEBUG - diff update: line_lengths old: 25; new: 25
2022-04-02 21:31:33,932 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:24] new[1:24]
2022-04-02 21:31:33,933 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[3:24] new[1:23]
2022-04-02 21:31:33,933 - parso.python.diff - DEBUG - diff _parse: parse_part from 24 to 25 (to 24 in part parser)
2022-04-02 21:31:33,934 - parso.python.diff - DEBUG - diff update: -> code[replace] old[25:25] new[25:25]
2022-04-02 21:31:33,934 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 21:31:43,284 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 21:31:43,284 - parso.python.diff - DEBUG - diff update: line_lengths old: 25; new: 25
2022-04-02 21:31:43,284 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:24] new[1:24]
2022-04-02 21:31:43,284 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[3:24] new[1:23]
2022-04-02 21:31:43,285 - parso.python.diff - DEBUG - diff _parse: parse_part from 24 to 25 (to 24 in part parser)
2022-04-02 21:31:43,285 - parso.python.diff - DEBUG - diff update: -> code[replace] old[25:25] new[25:25]
2022-04-02 21:31:43,286 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 21:31:47,548 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-02 21:31:47,548 - parso.python.diff - DEBUG - diff update: line_lengths old: 25; new: 26
2022-04-02 21:31:47,548 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:24] new[1:24]
2022-04-02 21:31:47,549 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[3:24] new[1:23]
2022-04-02 21:31:47,550 - parso.python.diff - DEBUG - diff _parse: parse_part from 24 to 25 (to 25 in part parser)
2022-04-02 21:31:47,550 - parso.python.diff - DEBUG - diff update: -> code[replace] old[25:25] new[25:26]
2022-04-02 21:31:47,551 - parso.python.diff - DEBUG - diff _parse: parse_part from 26 to 26 (to 25 in part parser)
2022-04-02 21:31:47,551 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-02 21:44:19,397 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-02 21:44:36,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-02 21:44:36,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-02 21:44:36,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-02 21:44:36,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-02 21:44:36,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-02 21:44:36,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-02 21:44:36,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-02 21:44:36,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-02 21:44:36,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-02 21:44:36,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-02 21:44:36,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-02 21:44:36,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-02 21:44:36,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-02 21:44:36,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-02 21:44:36,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-02 21:44:36,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-02 21:44:36,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-02 21:44:36,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-02 21:44:36,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-02 21:44:36,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 21:44:36,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-02 21:44:36,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-02 21:44:36,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-02 21:44:36,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-02 21:44:36,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-02 21:44:36,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-02 21:44:36,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-02 21:44:36,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-02 21:44:36,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-02 21:44:36,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-02 21:44:36,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-02 21:44:36,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-02 21:44:36,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 21:44:36,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-02 21:44:36,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-02 21:44:36,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-02 21:44:36,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-02 21:44:36,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-02 21:44:36,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-02 21:44:36,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-02 21:44:36,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-02 21:44:36,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-02 21:44:36,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-02 21:44:36,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-02 21:44:36,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-02 21:44:36,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-02 21:44:36,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-02 21:44:36,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-02 21:44:36,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-02 21:44:36,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-02 21:44:36,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-02 21:44:36,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-02 21:44:36,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-02 21:44:36,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-02 21:44:36,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-02 21:44:36,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-02 21:44:36,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-02 21:44:36,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-02 21:44:36,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-02 21:44:36,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-02 21:44:36,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-02 21:44:36,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-02 21:44:36,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-02 21:44:36,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-02 21:44:36,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-02 21:44:36,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-02 21:44:36,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-02 21:44:36,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-02 21:44:36,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-02 21:44:36,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-02 21:44:36,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-02 21:44:36,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-02 21:44:36,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-02 21:44:36,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-02 21:44:36,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-02 21:44:36,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-02 21:44:36,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 21:44:36,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-02 21:44:36,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-02 21:44:36,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-02 21:44:36,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 21:44:36,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 21:44:36,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-02 21:44:36,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 21:44:36,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 21:44:36,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-02 21:44:36,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 21:44:36,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-02 21:44:36,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-02 22:46:44,746 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-02 22:46:54,242 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-02 22:46:54,243 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,243 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,243 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,243 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-02 22:46:54,243 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-02 22:46:54,243 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,243 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,243 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,243 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-02 22:46:54,243 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,243 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,243 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-02 22:46:54,244 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,244 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,244 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,244 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,244 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,244 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,244 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,244 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,244 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,244 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,244 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,244 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,244 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,244 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-02 22:46:54,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-02 22:46:54,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-02 22:46:54,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,245 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-02 22:46:54,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-02 22:46:54,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,246 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,247 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,247 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,247 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,247 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,247 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,247 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-02 22:46:54,247 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,247 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,247 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,247 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,247 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-02 22:46:54,247 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,247 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,247 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,247 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,248 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,248 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-02 22:46:54,248 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,248 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,248 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,248 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,248 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,248 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,248 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,248 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,248 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,248 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,248 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,248 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,249 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,249 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,249 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,249 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,249 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-02 22:46:54,249 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-02 22:46:54,249 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,249 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-02 22:46:54,249 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-02 22:46:54,249 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,249 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,249 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,249 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,249 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,249 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,250 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,250 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,250 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,250 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-02 22:46:54,250 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,250 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-02 22:46:54,250 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,250 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,250 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,250 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,250 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,250 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,250 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,250 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,250 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,251 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 22:46:54,251 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,251 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,251 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,251 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,251 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,251 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,251 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,251 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,251 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-02 22:46:54,251 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,251 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-02 22:46:54,251 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-02 22:46:54,251 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,251 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,252 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,252 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,252 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,252 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,252 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-02 22:46:54,252 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,252 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,252 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,252 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,252 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,252 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,252 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,252 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-02 22:46:54,252 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,253 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,253 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,253 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,253 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-02 22:46:54,253 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-02 22:46:54,253 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,253 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-02 22:46:54,253 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,253 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,253 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,253 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,253 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,253 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,253 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,253 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,254 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,254 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,254 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-02 22:46:54,254 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,254 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,254 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-02 22:46:54,254 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,254 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,254 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,254 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,254 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,254 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,254 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,254 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-02 22:46:54,255 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,255 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,255 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,255 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,255 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,255 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,255 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,255 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,255 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,255 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,255 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,255 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,255 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,255 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,255 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-02 22:46:54,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 22:46:54,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-02 22:46:54,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,256 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-02 22:46:54,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-02 22:46:54,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-02 22:46:54,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,257 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-02 22:46:54,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-02 22:46:54,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-02 22:46:54,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,258 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-02 22:46:54,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-02 22:46:54,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-02 22:46:54,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-02 22:46:54,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-02 22:46:54,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,259 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-02 22:46:54,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-02 22:46:54,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-02 22:46:54,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,260 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,261 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,261 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,261 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-02 22:46:54,261 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,261 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,261 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,261 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,261 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,261 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,261 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,261 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,261 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,261 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,261 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,261 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-02 22:46:54,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-02 22:46:54,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-02 22:46:54,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-02 22:46:54,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,262 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,263 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,264 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,264 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,264 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-02 22:46:54,264 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-02 22:46:54,264 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,264 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,264 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,264 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,264 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,264 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,264 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-02 22:46:54,264 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,264 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-02 22:46:54,264 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-02 22:46:54,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,265 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,266 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-02 22:46:54,266 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,266 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,266 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,266 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,266 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,266 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-02 22:46:54,266 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,266 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,266 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-02 22:46:54,266 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,266 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,266 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-02 22:46:54,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,267 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-02 22:46:54,268 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-02 22:46:54,268 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,268 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,268 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,268 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,268 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,268 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,268 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,268 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,268 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,268 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,268 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,268 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,268 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,268 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,269 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,269 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,269 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,269 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,269 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,269 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,269 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,269 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,269 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-02 22:46:54,269 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,269 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,269 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,269 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,269 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,269 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-02 22:46:54,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-02 22:46:54,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-02 22:46:54,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,270 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-02 22:46:54,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-02 22:46:54,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-02 22:46:54,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,271 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-02 22:46:54,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-02 22:46:54,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,272 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-02 22:46:54,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,273 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-02 22:46:54,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-02 22:46:54,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 22:46:54,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-02 22:46:54,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-02 22:46:54,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-02 22:46:54,274 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 22:46:54,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 22:46:54,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-02 22:46:54,275 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 22:46:54,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 22:46:54,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-02 22:46:54,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 22:46:54,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,276 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,277 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,277 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,277 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-02 22:46:54,277 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-02 23:52:56,684 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-02 23:53:06,359 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-02 23:53:06,359 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,359 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,360 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,360 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-02 23:53:06,360 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-02 23:53:06,360 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,360 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,360 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,360 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-02 23:53:06,360 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,360 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,360 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-02 23:53:06,360 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,360 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,360 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,361 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,361 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,361 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,361 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,361 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,361 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,361 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,361 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,361 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,361 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,361 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,361 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,361 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,361 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,362 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,362 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,362 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,362 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,362 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,362 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-02 23:53:06,362 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-02 23:53:06,362 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,362 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,362 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-02 23:53:06,362 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,362 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,362 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,362 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,363 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,363 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,363 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,363 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,363 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-02 23:53:06,363 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,363 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,363 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,363 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,363 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-02 23:53:06,363 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,363 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,363 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,363 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,364 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,364 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,364 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,364 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-02 23:53:06,364 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,364 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,364 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,364 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,364 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-02 23:53:06,364 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,364 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,364 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,364 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,364 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-02 23:53:06,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,365 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-02 23:53:06,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-02 23:53:06,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-02 23:53:06,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-02 23:53:06,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,366 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,367 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,367 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,367 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,367 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,367 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,367 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-02 23:53:06,367 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,367 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-02 23:53:06,367 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,367 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,367 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,367 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,367 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 23:53:06,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,368 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-02 23:53:06,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-02 23:53:06,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-02 23:53:06,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-02 23:53:06,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,369 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-02 23:53:06,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-02 23:53:06,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-02 23:53:06,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,370 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-02 23:53:06,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-02 23:53:06,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,371 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-02 23:53:06,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-02 23:53:06,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,372 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-02 23:53:06,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 23:53:06,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-02 23:53:06,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-02 23:53:06,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-02 23:53:06,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-02 23:53:06,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-02 23:53:06,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-02 23:53:06,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-02 23:53:06,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-02 23:53:06,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-02 23:53:06,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-02 23:53:06,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-02 23:53:06,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-02 23:53:06,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-02 23:53:06,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-02 23:53:06,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-02 23:53:06,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-02 23:53:06,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-02 23:53:06,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-02 23:53:06,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-02 23:53:06,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-02 23:53:06,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-02 23:53:06,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-02 23:53:06,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-02 23:53:06,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-02 23:53:06,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-02 23:53:06,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-02 23:53:06,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-02 23:53:06,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-02 23:53:06,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-02 23:53:06,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-02 23:53:06,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-02 23:53:06,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-02 23:53:06,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-02 23:53:06,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-02 23:53:06,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-02 23:53:06,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-02 23:53:06,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-02 23:53:06,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-02 23:53:06,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-02 23:53:06,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-02 23:53:06,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-02 23:53:06,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-02 23:53:06,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-02 23:53:06,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 23:53:06,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-02 23:53:06,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-02 23:53:06,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-02 23:53:06,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 23:53:06,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-02 23:53:06,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-02 23:53:06,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-02 23:53:06,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-02 23:53:06,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-02 23:53:06,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-02 23:53:06,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-02 23:53:06,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-03 00:17:54,502 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-03 00:18:04,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-03 00:18:04,309 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-03 00:18:04,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-03 00:18:04,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-03 00:18:04,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-03 00:18:04,310 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,311 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-03 00:18:04,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-03 00:18:04,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-03 00:18:04,312 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-03 00:18:04,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,313 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-03 00:18:04,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-03 00:18:04,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,314 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-03 00:18:04,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-03 00:18:04,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,315 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-03 00:18:04,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-03 00:18:04,316 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-03 00:18:04,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-03 00:18:04,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-03 00:18:04,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,317 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-03 00:18:04,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-03 00:18:04,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,318 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-03 00:18:04,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-03 00:18:04,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-03 00:18:04,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,319 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-03 00:18:04,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-03 00:18:04,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,320 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-03 00:18:04,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-03 00:18:04,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-03 00:18:04,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,321 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-03 00:18:04,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-03 00:18:04,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,322 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-03 00:18:04,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,323 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-03 00:18:04,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-03 00:18:04,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-03 00:18:04,324 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-03 00:18:04,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-03 00:18:04,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,325 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-03 00:18:04,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-03 00:18:04,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,326 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-03 00:18:04,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,327 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-03 00:18:04,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-03 00:18:04,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-03 00:18:04,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,328 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-03 00:18:04,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-03 00:18:04,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-03 00:18:04,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,329 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-03 00:18:04,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-03 00:18:04,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-03 00:18:04,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,330 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-03 00:18:04,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,331 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-03 00:18:04,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-03 00:18:04,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-03 00:18:04,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,332 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-03 00:18:04,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,333 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-03 00:18:04,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-03 00:18:04,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,334 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-03 00:18:04,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-03 00:18:04,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,335 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-03 00:18:04,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-03 00:18:04,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,336 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-03 00:18:04,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-03 00:18:04,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-03 00:18:04,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,337 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,338 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-03 00:18:04,339 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-03 00:18:04,339 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,339 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,339 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,339 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,339 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,339 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,339 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,339 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,339 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,339 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,339 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,339 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,339 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,340 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,340 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,340 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,340 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,340 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,340 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,340 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,340 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,340 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,340 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-03 00:18:04,340 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,340 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,340 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,341 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,341 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,341 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,341 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,341 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-03 00:18:04,341 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,341 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,341 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,341 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,341 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,341 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-03 00:18:04,341 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,341 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,341 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-03 00:18:04,342 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,342 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,342 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,342 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-03 00:18:04,342 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,342 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,342 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-03 00:18:04,342 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,342 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,342 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,342 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,342 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,342 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,342 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,343 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-03 00:18:04,343 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,343 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,343 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,343 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,343 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,343 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-03 00:18:04,343 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,343 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,343 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,343 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,343 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,343 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,344 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-03 00:18:04,344 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,344 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,344 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,344 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,344 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,344 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,344 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,344 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,344 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,344 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-03 00:18:04,344 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,344 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,344 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,345 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,345 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,345 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,345 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,345 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,345 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,345 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-03 00:18:04,345 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,345 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,345 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,345 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-03 00:18:04,345 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,346 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-03 00:18:04,346 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,346 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,346 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,346 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,346 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-03 00:18:04,346 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-03 00:18:04,346 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-03 00:18:04,346 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,346 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,346 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,346 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-03 00:18:04,346 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,346 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,347 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,347 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,347 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,347 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,347 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,347 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:18:04,347 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,347 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,347 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-03 00:18:04,347 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,347 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:18:04,347 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,347 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:18:04,347 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,348 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,348 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,348 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,348 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,348 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,348 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-03 00:18:04,348 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-03 00:18:04,348 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,348 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,348 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,348 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,348 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,348 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,348 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:18:04,349 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-03 00:46:33,264 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-03 00:46:34,702 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-03 00:46:34,702 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,702 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,702 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,702 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-03 00:46:34,702 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-03 00:46:34,703 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,703 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,703 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,703 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-03 00:46:34,704 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,704 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,704 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-03 00:46:34,704 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,704 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,704 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,705 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,705 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,705 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,705 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,705 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,705 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,705 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,705 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,705 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,705 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,705 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,705 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,706 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,706 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,706 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,706 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,706 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,706 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,706 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,706 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-03 00:46:34,706 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-03 00:46:34,706 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,706 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,706 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-03 00:46:34,707 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,707 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,707 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,707 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,707 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,707 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,707 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,707 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,707 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-03 00:46:34,707 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,707 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,707 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,707 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,708 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-03 00:46:34,708 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,708 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,708 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,708 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,708 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,708 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,708 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,708 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-03 00:46:34,708 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,708 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,708 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,709 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,709 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-03 00:46:34,709 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,709 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,709 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,709 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,709 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,709 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-03 00:46:34,709 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,709 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,709 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,710 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,710 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,710 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,710 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,710 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,710 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,710 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,710 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,710 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,710 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,710 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,710 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,710 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,711 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-03 00:46:34,711 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-03 00:46:34,711 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,711 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-03 00:46:34,711 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-03 00:46:34,711 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,711 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,711 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,711 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,711 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,711 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,711 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,711 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,712 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,712 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-03 00:46:34,712 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,712 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-03 00:46:34,712 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,712 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,712 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,712 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,712 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,712 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,712 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,712 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,713 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,713 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-03 00:46:34,713 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,713 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,713 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,713 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,713 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,713 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,713 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,713 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,713 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-03 00:46:34,713 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,713 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-03 00:46:34,714 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-03 00:46:34,714 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,714 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,714 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,714 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,714 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,714 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,714 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-03 00:46:34,714 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,714 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,714 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,714 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,714 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,715 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,715 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,715 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-03 00:46:34,715 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,715 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,715 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,715 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,715 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-03 00:46:34,715 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-03 00:46:34,715 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,715 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-03 00:46:34,715 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,716 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,716 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,716 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,716 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,716 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,716 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,716 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,716 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,716 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,716 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-03 00:46:34,716 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,716 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,717 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-03 00:46:34,717 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,717 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,717 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,717 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,717 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,717 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,717 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,717 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-03 00:46:34,717 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,717 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,717 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,718 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,718 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,718 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,718 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,718 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,718 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,718 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,718 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,718 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,718 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,718 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,718 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,718 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,719 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,719 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,719 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,719 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,719 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,719 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-03 00:46:34,719 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,719 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-03 00:46:34,719 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,719 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-03 00:46:34,719 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,719 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,719 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,719 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,720 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,720 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,720 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-03 00:46:34,720 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,720 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-03 00:46:34,720 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,720 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,720 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,720 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,720 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,721 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-03 00:46:34,721 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,721 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,721 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,721 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,721 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,721 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,721 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-03 00:46:34,721 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,721 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,721 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,721 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,721 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,721 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,722 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-03 00:46:34,722 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,722 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,722 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-03 00:46:34,722 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,722 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,722 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,722 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-03 00:46:34,722 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,722 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-03 00:46:34,722 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,722 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,722 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,723 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,723 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,723 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-03 00:46:34,723 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,723 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-03 00:46:34,723 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-03 00:46:34,723 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,723 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,723 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,723 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,723 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,723 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-03 00:46:34,723 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-03 00:46:34,724 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,724 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,724 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,724 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,724 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,724 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,724 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-03 00:46:34,724 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,724 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,724 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,724 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,724 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-03 00:46:34,724 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,725 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,725 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,725 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,725 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,725 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,725 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,725 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,725 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,725 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,725 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,725 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,725 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,726 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,726 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,726 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-03 00:46:34,726 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-03 00:46:34,726 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,726 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,726 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,726 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-03 00:46:34,726 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,726 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,726 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,726 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-03 00:46:34,726 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,727 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,727 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,727 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,727 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,727 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,727 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,727 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,727 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,727 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,727 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,727 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,728 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,728 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,728 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,728 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,728 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,728 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,728 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,728 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-03 00:46:34,728 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-03 00:46:34,728 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,728 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,729 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,729 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,729 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,729 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,729 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-03 00:46:34,729 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,729 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-03 00:46:34,729 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,729 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,729 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,730 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,730 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,730 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,730 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,730 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,730 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-03 00:46:34,730 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,730 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,730 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,730 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,730 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,730 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,730 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,731 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-03 00:46:34,731 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,731 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,731 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,731 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,731 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,731 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-03 00:46:34,731 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,731 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,732 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-03 00:46:34,732 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,732 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,732 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-03 00:46:34,732 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,732 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,732 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,733 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,733 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,733 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,733 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,733 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,733 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,733 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,733 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,733 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,734 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,734 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,734 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-03 00:46:34,734 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-03 00:46:34,734 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,734 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,734 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,734 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,734 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,734 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,734 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,735 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,735 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,735 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,735 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,735 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,735 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,735 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,735 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,735 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,735 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,735 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,735 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,735 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,735 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,736 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,736 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-03 00:46:34,736 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,736 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,736 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,736 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,736 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,736 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,736 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,736 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-03 00:46:34,736 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,736 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,736 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,737 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,737 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,737 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-03 00:46:34,737 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,737 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,737 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-03 00:46:34,737 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,737 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,737 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,737 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-03 00:46:34,737 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,737 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,738 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-03 00:46:34,738 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,738 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,738 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,738 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,738 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,738 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,738 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,738 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-03 00:46:34,738 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,738 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,738 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,738 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,739 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,739 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-03 00:46:34,739 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,739 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,739 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,739 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,739 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,739 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,739 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-03 00:46:34,739 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,739 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,739 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,739 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,739 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,740 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,740 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,740 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,740 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,740 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-03 00:46:34,740 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,740 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,740 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,740 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,740 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,740 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,740 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,740 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,741 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,741 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-03 00:46:34,741 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,741 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,741 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,741 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-03 00:46:34,741 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,741 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-03 00:46:34,741 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,741 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,741 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,741 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,741 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-03 00:46:34,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-03 00:46:34,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-03 00:46:34,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-03 00:46:34,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 00:46:34,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-03 00:46:34,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 00:46:34,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 00:46:34,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-03 00:46:34,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-03 00:46:34,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-03 00:46:34,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-03 00:58:32,298 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-03 00:58:32,301 - parso.python.diff - DEBUG - diff update: line_lengths old: 26; new: 26
2022-04-03 00:58:32,301 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:10] new[1:16]
2022-04-03 00:58:32,304 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 26 (to 25 in part parser)
2022-04-03 00:58:32,305 - parso.python.diff - DEBUG - diff update: -> code[equal] old[11:11] new[17:17]
2022-04-03 00:58:32,305 - parso.python.diff - DEBUG - diff update: -> code[replace] old[12:17] new[18:20]
2022-04-03 00:58:32,305 - parso.python.diff - DEBUG - diff update: -> code[equal] old[18:18] new[21:21]
2022-04-03 00:58:32,305 - parso.python.diff - DEBUG - diff update: -> code[delete] old[19:20] new[22:21]
2022-04-03 00:58:32,305 - parso.python.diff - DEBUG - diff update: -> code[equal] old[21:21] new[22:22]
2022-04-03 00:58:32,305 - parso.python.diff - DEBUG - diff update: -> code[replace] old[22:23] new[23:24]
2022-04-03 00:58:32,305 - parso.python.diff - DEBUG - diff update: -> code[equal] old[24:24] new[25:25]
2022-04-03 00:58:32,305 - parso.python.diff - DEBUG - diff update: -> code[replace] old[25:26] new[26:26]
2022-04-03 00:58:32,305 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-03 01:00:15,494 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-03 01:00:15,494 - parso.python.diff - DEBUG - diff update: line_lengths old: 26; new: 5
2022-04-03 01:00:15,494 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:26] new[1:5]
2022-04-03 01:00:15,495 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 5 (to 4 in part parser)
2022-04-03 01:00:15,495 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-03 01:00:22,837 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-03 01:00:22,838 - parso.python.diff - DEBUG - diff update: line_lengths old: 5; new: 5
2022-04-03 01:00:22,838 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:3] new[1:3]
2022-04-03 01:00:22,839 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 5 (to 4 in part parser)
2022-04-03 01:00:22,839 - parso.python.diff - DEBUG - diff update: -> code[replace] old[4:4] new[4:4]
2022-04-03 01:00:22,839 - parso.python.diff - DEBUG - diff update: -> code[equal] old[5:5] new[5:5]
2022-04-03 01:00:22,839 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-03 01:41:03,857 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-03 01:51:38,320 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2022-04-03 01:51:38,362 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2022-04-03 01:51:42,516 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-03 01:51:42,516 - parso.python.diff - DEBUG - diff update: line_lengths old: 2; new: 2
2022-04-03 01:51:42,516 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:1] new[1:1]
2022-04-03 01:51:42,517 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:1] new[1:1]
2022-04-03 01:51:42,517 - parso.python.diff - DEBUG - diff update: -> code[replace] old[2:2] new[2:2]
2022-04-03 01:51:42,517 - parso.python.diff - DEBUG - diff _parse: parse_part from 2 to 2 (to 1 in part parser)
2022-04-03 01:51:42,517 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-03 02:14:19,510 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-03 02:14:19,512 - parso.python.diff - DEBUG - diff update: line_lengths old: 5; new: 6
2022-04-03 02:14:19,512 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:5] new[1:6]
2022-04-03 02:14:19,514 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 6 (to 5 in part parser)
2022-04-03 02:14:19,514 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-03 02:14:58,501 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-03 02:14:58,501 - parso.python.diff - DEBUG - diff update: line_lengths old: 6; new: 21
2022-04-03 02:14:58,501 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:6] new[1:21]
2022-04-03 02:14:58,504 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 21 (to 20 in part parser)
2022-04-03 02:14:58,504 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-03 02:22:16,617 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-03 02:22:16,618 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-03 02:22:16,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-03 02:22:16,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-03 02:22:16,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-03 02:22:16,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,619 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,620 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-03 02:22:16,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-03 02:22:16,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-03 02:22:16,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,621 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-03 02:22:16,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-03 02:22:16,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,622 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,623 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,623 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,623 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,623 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,623 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-03 02:22:16,623 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,623 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,623 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,623 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,623 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-03 02:22:16,623 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,623 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,623 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,623 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,623 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,624 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-03 02:22:16,624 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,624 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,624 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,624 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,624 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,624 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,624 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,624 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,624 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,624 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,624 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,624 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,624 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,625 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,625 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,625 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,625 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-03 02:22:16,625 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-03 02:22:16,625 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,625 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-03 02:22:16,625 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-03 02:22:16,625 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,625 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,625 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,625 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,625 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,625 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,625 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,626 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,626 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,626 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-03 02:22:16,626 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,626 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-03 02:22:16,626 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,626 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,626 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,626 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,626 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,626 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,626 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,626 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,626 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,627 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-03 02:22:16,627 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,627 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,627 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,627 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,627 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,627 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,627 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,627 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,627 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-03 02:22:16,627 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,627 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-03 02:22:16,627 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-03 02:22:16,627 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,627 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,628 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,628 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,628 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,628 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,628 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-03 02:22:16,628 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,628 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,628 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,628 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,628 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,628 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,628 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,628 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-03 02:22:16,628 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,628 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,629 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,629 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,629 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-03 02:22:16,629 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-03 02:22:16,629 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,629 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-03 02:22:16,629 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,629 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,629 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,629 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,629 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,629 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,629 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,629 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,630 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,630 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,630 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-03 02:22:16,630 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,630 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,630 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-03 02:22:16,630 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,630 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,630 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,630 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,630 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,630 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,630 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,630 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-03 02:22:16,630 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,631 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,631 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,631 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,631 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,631 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,631 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,631 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,631 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,631 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,631 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,631 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,631 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,632 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,632 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,632 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,632 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,632 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,632 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,632 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,632 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,632 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-03 02:22:16,632 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,632 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-03 02:22:16,632 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,632 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-03 02:22:16,632 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,632 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,633 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,633 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,633 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,633 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,633 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-03 02:22:16,633 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,633 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-03 02:22:16,633 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,633 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,633 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,633 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,633 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,633 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-03 02:22:16,633 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,634 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,634 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,634 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,634 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,634 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,634 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-03 02:22:16,634 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,634 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,634 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,634 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,634 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,634 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,634 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-03 02:22:16,634 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,634 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,635 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-03 02:22:16,635 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,635 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,635 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,635 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-03 02:22:16,635 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,635 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-03 02:22:16,635 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,635 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,635 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,635 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,635 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,635 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-03 02:22:16,635 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,635 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-03 02:22:16,636 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-03 02:22:16,636 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,636 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,636 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,636 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,636 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,636 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-03 02:22:16,636 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-03 02:22:16,636 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,636 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,636 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,636 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,636 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,637 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,637 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-03 02:22:16,637 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,637 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,637 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,637 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,637 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-03 02:22:16,637 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,637 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,637 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,637 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,637 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,637 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,637 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,637 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,638 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,638 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,638 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,638 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,638 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,638 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,638 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,638 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-03 02:22:16,638 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-03 02:22:16,638 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,638 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,638 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,638 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-03 02:22:16,638 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,639 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,639 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,639 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-03 02:22:16,639 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,639 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,639 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,639 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,639 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,639 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,639 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,639 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,639 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,639 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,639 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,640 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,640 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,640 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,640 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,640 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,640 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,640 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,640 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,640 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-03 02:22:16,640 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-03 02:22:16,640 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,640 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,640 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,640 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,640 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,641 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,641 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-03 02:22:16,641 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,641 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-03 02:22:16,641 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,641 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,641 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,641 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,641 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,641 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,641 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,641 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,641 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-03 02:22:16,641 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,642 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,642 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,642 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,642 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,642 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,642 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,642 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-03 02:22:16,642 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,642 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,642 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,642 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,642 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,642 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-03 02:22:16,643 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,643 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,643 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-03 02:22:16,643 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,643 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,643 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-03 02:22:16,643 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,643 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,643 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,643 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,643 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,643 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,643 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,643 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,643 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,644 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,644 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,644 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,644 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,644 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,644 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-03 02:22:16,644 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-03 02:22:16,644 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,644 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,644 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,644 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,644 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,644 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,644 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,645 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,645 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,645 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,645 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,645 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,645 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,645 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,645 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,645 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,645 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,645 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,645 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,645 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,645 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,645 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,646 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-03 02:22:16,646 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,646 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,646 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,646 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,646 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,646 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,646 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,646 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-03 02:22:16,646 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,646 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,646 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,646 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,646 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,647 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-03 02:22:16,647 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,647 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,647 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-03 02:22:16,647 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,647 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,647 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,647 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-03 02:22:16,647 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,647 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,647 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-03 02:22:16,647 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,647 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,647 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,647 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,648 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,648 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,648 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,648 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-03 02:22:16,648 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,648 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,648 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,648 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,648 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,648 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-03 02:22:16,648 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,649 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,649 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,649 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,649 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,649 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,649 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-03 02:22:16,649 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,649 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,649 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,649 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,649 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,650 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,650 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,650 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,650 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,650 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-03 02:22:16,650 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,650 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,650 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,650 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,650 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,651 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,651 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,651 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,651 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,651 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-03 02:22:16,651 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,651 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,651 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,651 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-03 02:22:16,651 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,651 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-03 02:22:16,651 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,651 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,652 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,652 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,652 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-03 02:22:16,652 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-03 02:22:16,652 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-03 02:22:16,652 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,652 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,652 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,652 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-03 02:22:16,652 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,652 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,652 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,652 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,653 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,653 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,653 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,653 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-03 02:22:16,653 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,653 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,653 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-03 02:22:16,653 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,653 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-03 02:22:16,653 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,653 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-03 02:22:16,653 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,653 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,654 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,654 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,654 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,654 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,654 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-03 02:22:16,654 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-03 02:22:16,654 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,654 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,654 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,654 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,654 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,654 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,654 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-03 02:22:16,654 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-11 22:37:04,123 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-11 23:14:04,152 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-11 23:14:12,155 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-11 23:14:12,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-11 23:14:12,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-11 23:14:12,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-11 23:14:12,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,156 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-11 23:14:12,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,157 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,158 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-11 23:14:12,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-11 23:14:12,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-11 23:14:12,159 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-11 23:14:12,160 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-11 23:14:12,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-11 23:14:12,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,161 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-11 23:14:12,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-11 23:14:12,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,162 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,163 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-11 23:14:12,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-11 23:14:12,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-11 23:14:12,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-11 23:14:12,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,164 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-11 23:14:12,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-11 23:14:12,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,165 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-11 23:14:12,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,166 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-11 23:14:12,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-11 23:14:12,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-11 23:14:12,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,167 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-11 23:14:12,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,168 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-11 23:14:12,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-11 23:14:12,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-11 23:14:12,169 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-11 23:14:12,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,170 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-11 23:14:12,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-11 23:14:12,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,171 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-11 23:14:12,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,172 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,173 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-11 23:14:12,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-11 23:14:12,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-11 23:14:12,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,174 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-11 23:14:12,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-11 23:14:12,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-11 23:14:12,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,175 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-11 23:14:12,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-11 23:14:12,176 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-11 23:14:12,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-11 23:14:12,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,177 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-11 23:14:12,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-11 23:14:12,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-11 23:14:12,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-11 23:14:12,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,178 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,179 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,179 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-11 23:14:12,179 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-11 23:14:12,179 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,179 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,179 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,179 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,179 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,179 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,179 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-11 23:14:12,179 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,179 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,179 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,179 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,180 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-11 23:14:12,180 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,180 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,180 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,180 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,180 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,180 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,180 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,180 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,180 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,180 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,180 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,180 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,181 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,181 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,181 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,181 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-11 23:14:12,181 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-11 23:14:12,181 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,181 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,181 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,182 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-11 23:14:12,182 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,182 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,182 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,182 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-11 23:14:12,182 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,182 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,182 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,182 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,182 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,182 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,182 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-11 23:14:12,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-11 23:14:12,183 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,184 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,184 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,184 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,184 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,184 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,184 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-11 23:14:12,184 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,184 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-11 23:14:12,184 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,184 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,184 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,184 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,184 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,184 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,185 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,185 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,185 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-11 23:14:12,185 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,185 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,185 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,185 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,185 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,185 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,185 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,185 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-11 23:14:12,185 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,186 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,186 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,186 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,186 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,186 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-11 23:14:12,186 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,186 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,186 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-11 23:14:12,187 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,187 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,187 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-11 23:14:12,187 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,187 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,187 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,187 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,187 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,187 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,187 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,187 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,188 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,188 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,188 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,188 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,188 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,188 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,188 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-11 23:14:12,188 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-11 23:14:12,188 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,188 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,188 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,188 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,188 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,189 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,189 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,189 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,189 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,189 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,189 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,189 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,190 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,190 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,190 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,190 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,190 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,191 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,191 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,191 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,191 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,191 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,191 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-11 23:14:12,191 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,191 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,191 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,192 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,192 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,192 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,192 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,192 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-11 23:14:12,193 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,193 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,193 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,193 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,193 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,193 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-11 23:14:12,193 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,193 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,193 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-11 23:14:12,193 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,193 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,193 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,194 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-11 23:14:12,194 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,194 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,194 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-11 23:14:12,194 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,194 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,194 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,194 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,194 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,194 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,194 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,194 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-11 23:14:12,194 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,194 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-11 23:14:12,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-11 23:14:12,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,195 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-11 23:14:12,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,196 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-11 23:14:12,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-11 23:14:12,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-11 23:14:12,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,197 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-11 23:14:12,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-11 23:14:12,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-11 23:14:12,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-11 23:14:12,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,198 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-11 23:14:12,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-11 23:14:12,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-11 23:14:12,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,199 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-11 23:14:12,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-11 23:14:12,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-11 23:14:12,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,200 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-11 23:14:12,201 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-12 01:16:08,950 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-12 01:16:36,834 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-12 01:16:36,834 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,835 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,835 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,835 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-12 01:16:36,835 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-12 01:16:36,835 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,835 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,835 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,835 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-12 01:16:36,835 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,835 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,835 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-12 01:16:36,836 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,836 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,836 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,836 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,836 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,836 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,836 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,836 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,836 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,836 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,836 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,836 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,836 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,837 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,837 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,837 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,837 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,837 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,837 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,837 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,837 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,838 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,838 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-12 01:16:36,838 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-12 01:16:36,838 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,838 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,838 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-12 01:16:36,838 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,838 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,838 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,838 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,838 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,839 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,839 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,839 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,839 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-12 01:16:36,839 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,839 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,839 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,839 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,839 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-12 01:16:36,839 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,839 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,839 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,840 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,840 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,840 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,840 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,840 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-12 01:16:36,840 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,840 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,840 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,840 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,840 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-12 01:16:36,841 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,841 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,841 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,841 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,841 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,841 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-12 01:16:36,841 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,841 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,841 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,842 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,842 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,842 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,842 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,842 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,842 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,842 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,842 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,842 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,842 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,842 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,843 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,843 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,843 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-12 01:16:36,843 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-12 01:16:36,843 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,843 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-12 01:16:36,843 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-12 01:16:36,843 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,843 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,843 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,843 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,844 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,844 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,844 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,844 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,844 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,844 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-12 01:16:36,844 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,845 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-12 01:16:36,845 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,845 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,845 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,845 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,845 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,845 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,846 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,846 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,846 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,846 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-12 01:16:36,846 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,846 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,846 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,846 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,846 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,846 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,847 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,847 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,847 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-12 01:16:36,847 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,847 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-12 01:16:36,847 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-12 01:16:36,847 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,847 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,847 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,847 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,847 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,847 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,847 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-12 01:16:36,847 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,848 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,848 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,848 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,848 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,848 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,848 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,848 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-12 01:16:36,848 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,848 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,848 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,848 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,848 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-12 01:16:36,848 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-12 01:16:36,848 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,849 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-12 01:16:36,849 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,849 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,849 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,849 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,849 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,849 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,849 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,849 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,849 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,849 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,849 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-12 01:16:36,849 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,849 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,850 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-12 01:16:36,850 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,850 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,850 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,850 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,850 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,850 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,850 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,850 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-12 01:16:36,850 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,850 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,850 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-12 01:16:36,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-12 01:16:36,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-12 01:16:36,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-12 01:16:36,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-12 01:16:36,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-12 01:16:36,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-12 01:16:36,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-12 01:16:36,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-12 01:16:36,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-12 01:16:36,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-12 01:16:36,856 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,856 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,856 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,856 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,856 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,856 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-12 01:16:36,856 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,856 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-12 01:16:36,856 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-12 01:16:36,856 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,856 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-12 01:16:36,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-12 01:16:36,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-12 01:16:36,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-12 01:16:36,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,859 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,859 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,859 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,859 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,859 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,859 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,859 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-12 01:16:36,859 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-12 01:16:36,859 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,860 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,860 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,860 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-12 01:16:36,860 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,860 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,860 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,861 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-12 01:16:36,861 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,861 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,861 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,861 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,861 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,862 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,862 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,862 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,862 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,862 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,863 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,863 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,864 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,864 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,864 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,864 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,864 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,865 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,865 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,865 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-12 01:16:36,865 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-12 01:16:36,865 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,865 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,865 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,865 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,865 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,865 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,866 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-12 01:16:36,866 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,866 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-12 01:16:36,866 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,866 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,866 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,866 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,867 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,867 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,867 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,867 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,867 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-12 01:16:36,867 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,867 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,867 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,867 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,867 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,868 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,868 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,868 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-12 01:16:36,868 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,868 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,869 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,869 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,869 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,869 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-12 01:16:36,869 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,869 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,870 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-12 01:16:36,871 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,871 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,871 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-12 01:16:36,871 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,871 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,871 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,872 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,872 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,872 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,872 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,872 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,872 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,873 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,873 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,873 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,873 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,873 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,873 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-12 01:16:36,873 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-12 01:16:36,873 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,873 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,874 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,874 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,874 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,874 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,874 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,874 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,874 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,874 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,874 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,874 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-12 01:16:36,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,876 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,876 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,876 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,876 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,876 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,876 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,876 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-12 01:16:36,876 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,877 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,877 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,877 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,877 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,877 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-12 01:16:36,877 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,877 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,878 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-12 01:16:36,878 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,878 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,878 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,878 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-12 01:16:36,878 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,878 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,879 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-12 01:16:36,879 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,879 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,879 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,879 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,879 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,879 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,879 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,880 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-12 01:16:36,880 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,880 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,881 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,881 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,881 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,881 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-12 01:16:36,881 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,881 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-12 01:16:36,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,883 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,883 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,883 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,883 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-12 01:16:36,883 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,883 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,883 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,883 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,883 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,883 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,884 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,884 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,884 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,884 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-12 01:16:36,884 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,884 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,885 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,885 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-12 01:16:36,885 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,885 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-12 01:16:36,885 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,885 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,885 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,886 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,886 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-12 01:16:36,886 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-12 01:16:36,886 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-12 01:16:36,886 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,886 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,887 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,887 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-12 01:16:36,887 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,887 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,888 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,888 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,888 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,888 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,888 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,888 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-12 01:16:36,888 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,888 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,888 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-12 01:16:36,889 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,889 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-12 01:16:36,889 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,889 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-12 01:16:36,889 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,889 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,889 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,889 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,889 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,889 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,890 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-12 01:16:36,890 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-12 01:16:36,890 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,890 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,890 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,890 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,890 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,890 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,890 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-12 01:16:36,890 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-13 00:42:02,229 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-13 00:42:02,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-13 00:42:02,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-13 00:42:02,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-13 00:42:02,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-13 00:42:02,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-13 00:42:02,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-13 00:42:02,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-13 00:42:02,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-13 00:42:02,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-13 00:42:02,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-13 00:42:02,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-13 00:42:02,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-13 00:42:02,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-13 00:42:02,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-13 00:42:02,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-13 00:42:02,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-13 00:42:02,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-13 00:42:02,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-13 00:42:02,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-13 00:42:02,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-13 00:42:02,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-13 00:42:02,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-13 00:42:02,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-13 00:42:02,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-13 00:42:02,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-13 00:42:02,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-13 00:42:02,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-13 00:42:02,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-13 00:42:02,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-13 00:42:02,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-13 00:42:02,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-13 00:42:02,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-13 00:42:02,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-13 00:42:02,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-13 00:42:02,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-13 00:42:02,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-13 00:42:02,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-13 00:42:02,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-13 00:42:02,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-13 00:42:02,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-13 00:42:02,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-13 00:42:02,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-13 00:42:02,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-13 00:42:02,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-13 00:42:02,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-13 00:42:02,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-13 00:42:02,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-13 00:42:02,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-13 00:42:02,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-13 00:42:02,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-13 00:42:02,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-13 00:42:02,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-13 00:42:02,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-13 00:42:02,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-13 00:42:02,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-13 00:42:02,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-13 00:42:02,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-13 00:42:02,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-13 00:42:02,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-13 00:42:02,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-13 00:42:02,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-13 00:42:02,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-13 00:42:02,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-13 00:42:02,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-13 00:42:02,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-13 00:42:02,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-13 00:42:02,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-13 00:42:02,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,780 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-13 00:42:02,780 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,780 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,780 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,780 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-13 00:42:02,780 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,780 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,780 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-13 00:42:02,781 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,781 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,782 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,782 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,782 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,782 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,782 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,782 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-13 00:42:02,782 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,783 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,783 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,783 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,783 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,783 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-13 00:42:02,783 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,783 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,784 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,784 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,784 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,784 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,784 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-13 00:42:02,784 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,785 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,785 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,785 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,785 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,785 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,785 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,785 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,785 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,785 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-13 00:42:02,786 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,786 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,786 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,786 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,786 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,786 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,786 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,786 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,786 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,786 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-13 00:42:02,787 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,787 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,787 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,787 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-13 00:42:02,787 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,787 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-13 00:42:02,787 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,787 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,787 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,788 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,788 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-13 00:42:02,788 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-13 00:42:02,788 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-13 00:42:02,788 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,788 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,788 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,788 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-13 00:42:02,788 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,788 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,789 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,789 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,789 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,789 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,789 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,789 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-13 00:42:02,789 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,789 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,789 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-13 00:42:02,789 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,790 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-13 00:42:02,790 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,790 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-13 00:42:02,790 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,790 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,790 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,790 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,790 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,790 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,790 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-13 00:42:02,790 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-13 00:42:02,791 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,791 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,791 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,791 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,791 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,791 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,791 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-13 00:42:02,791 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-15 01:48:39,577 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-15 01:48:40,954 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-15 01:48:40,954 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,954 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,955 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,955 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-15 01:48:40,955 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-15 01:48:40,955 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,955 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,955 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,955 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-15 01:48:40,955 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,955 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,956 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-15 01:48:40,956 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,956 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,956 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,956 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,956 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,956 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,956 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,957 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,957 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,957 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,957 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,957 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,957 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,957 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,957 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,957 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,957 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,957 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,957 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,957 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-15 01:48:40,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-15 01:48:40,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-15 01:48:40,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,958 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,959 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,959 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,959 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-15 01:48:40,959 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,959 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,959 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,959 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,959 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-15 01:48:40,959 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,959 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,959 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,959 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,959 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,960 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,960 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,960 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-15 01:48:40,960 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,960 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,960 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,960 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,960 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-15 01:48:40,960 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,960 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,960 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,960 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,960 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,960 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-15 01:48:40,961 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,961 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,961 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,961 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,961 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,961 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,961 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,961 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,961 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,962 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,962 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,962 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,962 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,962 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,962 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,962 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,962 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-15 01:48:40,962 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-15 01:48:40,962 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,962 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-15 01:48:40,962 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-15 01:48:40,962 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,963 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,963 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,963 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,963 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,963 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,963 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,963 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,963 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,963 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-15 01:48:40,963 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,963 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-15 01:48:40,963 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,963 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,963 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,964 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,964 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,964 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,964 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,964 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,964 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,964 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 01:48:40,964 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,964 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,964 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,964 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,964 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,964 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,965 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,965 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,965 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-15 01:48:40,965 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,965 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-15 01:48:40,965 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-15 01:48:40,965 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,965 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,965 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,965 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,965 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,965 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,965 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-15 01:48:40,965 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,965 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,966 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,966 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,966 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,966 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,966 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,966 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-15 01:48:40,966 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,966 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,966 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,966 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,966 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-15 01:48:40,966 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-15 01:48:40,966 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,966 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-15 01:48:40,966 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,967 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,967 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,967 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,967 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,967 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,967 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,967 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,967 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,967 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,967 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-15 01:48:40,967 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,967 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,967 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-15 01:48:40,967 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,968 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,968 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,968 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,968 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,968 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,968 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,968 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-15 01:48:40,968 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,968 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,968 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,968 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,968 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,968 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,968 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,968 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,969 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,969 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,969 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,969 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,969 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,969 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,969 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,969 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,969 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,969 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,969 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,969 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,969 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,969 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-15 01:48:40,970 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,970 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 01:48:40,970 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,970 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-15 01:48:40,970 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,970 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,970 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,970 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,970 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,970 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,970 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-15 01:48:40,970 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,970 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-15 01:48:40,970 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,971 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,971 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,971 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,971 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,971 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-15 01:48:40,971 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,971 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,971 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,971 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,971 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,971 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,972 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-15 01:48:40,972 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,972 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,972 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,972 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,972 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,972 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,972 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-15 01:48:40,972 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,972 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,972 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-15 01:48:40,972 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,972 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,973 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,973 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-15 01:48:40,973 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,973 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-15 01:48:40,973 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,973 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,973 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,973 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,973 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,973 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-15 01:48:40,973 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,973 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-15 01:48:40,973 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-15 01:48:40,973 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,974 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,974 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,974 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,974 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,974 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-15 01:48:40,974 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-15 01:48:40,974 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,974 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,974 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,974 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,974 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,974 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,974 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-15 01:48:40,974 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,975 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,975 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,975 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,975 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-15 01:48:40,975 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,975 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,975 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,975 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,975 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,975 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,975 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,975 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,975 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,975 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,976 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,976 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,976 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,976 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,976 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,976 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-15 01:48:40,976 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-15 01:48:40,976 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,976 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,976 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,976 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-15 01:48:40,976 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,976 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,976 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,976 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-15 01:48:40,977 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,977 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,977 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,977 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,977 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,977 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,977 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,977 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,977 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,977 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-15 01:48:40,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-15 01:48:40,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,978 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-15 01:48:40,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-15 01:48:40,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,979 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-15 01:48:40,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-15 01:48:40,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,980 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-15 01:48:40,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-15 01:48:40,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-15 01:48:40,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,981 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-15 01:48:40,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-15 01:48:40,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,982 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,983 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-15 01:48:40,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-15 01:48:40,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,984 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-15 01:48:40,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-15 01:48:40,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-15 01:48:40,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-15 01:48:40,985 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-15 01:48:40,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-15 01:48:40,986 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-15 01:48:40,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,987 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-15 01:48:40,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,988 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-15 01:48:40,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-15 01:48:40,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 01:48:40,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-15 01:48:40,989 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-15 01:48:40,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-15 01:48:40,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 01:48:40,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 01:48:40,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,990 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-15 01:48:40,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 01:48:40,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 01:48:40,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-15 01:48:40,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 01:48:40,991 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,992 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,992 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,992 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,992 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,992 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,992 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-15 01:48:40,992 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-15 12:04:45,572 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-15 12:05:02,848 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-15 12:05:02,849 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,849 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,849 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,849 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-15 12:05:02,849 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-15 12:05:02,849 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,849 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,849 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,849 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-15 12:05:02,849 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,850 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,850 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-15 12:05:02,850 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,850 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,850 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,850 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,850 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,850 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,850 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,850 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,850 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,850 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,850 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-15 12:05:02,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-15 12:05:02,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,851 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-15 12:05:02,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-15 12:05:02,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,852 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-15 12:05:02,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-15 12:05:02,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,853 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-15 12:05:02,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-15 12:05:02,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,854 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-15 12:05:02,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-15 12:05:02,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-15 12:05:02,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-15 12:05:02,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,855 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,856 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,856 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,856 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,856 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,856 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,856 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,856 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-15 12:05:02,856 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,856 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-15 12:05:02,856 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,856 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,856 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,856 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,856 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 12:05:02,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-15 12:05:02,857 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-15 12:05:02,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-15 12:05:02,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-15 12:05:02,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,858 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,859 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,859 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-15 12:05:02,859 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,859 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,859 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,859 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,859 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-15 12:05:02,859 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-15 12:05:02,859 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,859 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-15 12:05:02,859 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,859 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,859 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,859 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,860 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,860 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,860 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,860 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,860 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,860 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,860 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:05:02,860 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,860 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,860 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-15 12:05:02,860 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,860 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,860 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,860 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,861 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,861 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,861 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,861 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-15 12:05:02,861 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,861 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,861 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,861 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,861 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,861 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,861 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,861 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,861 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,861 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,861 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,862 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,862 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,862 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,862 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,862 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,862 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,862 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,862 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,862 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,862 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,862 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-15 12:05:02,862 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,862 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 12:05:02,862 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,862 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-15 12:05:02,863 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,863 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,863 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,863 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,863 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,863 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,863 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-15 12:05:02,863 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,863 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-15 12:05:02,863 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,863 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,863 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,863 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,864 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,864 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:05:02,864 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,864 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,864 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,864 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,864 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,864 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,864 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-15 12:05:02,864 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,864 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,864 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,864 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,864 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,864 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,865 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-15 12:05:02,865 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,865 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,865 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-15 12:05:02,865 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,865 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,865 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,865 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-15 12:05:02,865 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,865 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-15 12:05:02,865 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,865 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,865 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,865 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,866 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,866 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:05:02,866 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,866 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-15 12:05:02,866 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-15 12:05:02,866 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,866 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,866 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,866 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,866 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,866 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-15 12:05:02,866 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-15 12:05:02,866 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,866 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,866 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,867 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,867 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,867 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,867 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-15 12:05:02,867 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,867 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,867 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,867 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,867 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-15 12:05:02,867 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,867 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,867 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,867 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,867 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,868 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,868 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,868 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,868 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,868 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,868 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,868 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,868 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,868 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,868 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,868 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-15 12:05:02,868 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:05:02,868 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,868 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,869 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,869 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:05:02,869 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,869 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,869 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,869 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-15 12:05:02,869 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,869 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,869 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,869 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,869 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,869 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,869 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,870 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,870 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,870 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,870 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,870 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,870 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,870 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,870 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,870 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,870 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,870 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,870 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,870 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-15 12:05:02,870 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-15 12:05:02,871 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,871 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,871 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,871 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,871 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,871 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,871 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-15 12:05:02,871 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,871 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-15 12:05:02,871 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,871 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,871 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,871 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,871 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,872 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,872 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,872 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,872 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-15 12:05:02,872 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,872 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,872 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,872 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,872 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,872 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,872 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,872 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-15 12:05:02,872 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,872 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,872 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,873 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,873 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,873 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-15 12:05:02,873 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,873 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,873 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-15 12:05:02,873 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,873 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,873 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-15 12:05:02,873 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,873 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,873 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,873 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,873 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,873 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,874 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,874 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,874 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,874 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,874 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,874 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,874 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,874 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,874 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-15 12:05:02,874 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-15 12:05:02,874 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,874 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,874 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,874 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,875 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,876 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,876 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,876 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,876 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-15 12:05:02,876 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,876 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,876 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,876 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,876 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,876 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,876 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,876 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-15 12:05:02,876 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,876 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,877 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,877 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,877 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,877 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-15 12:05:02,877 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,877 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,877 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:05:02,877 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,877 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,877 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,877 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-15 12:05:02,877 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,877 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,877 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-15 12:05:02,877 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,878 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,878 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,878 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,878 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,878 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,878 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,878 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-15 12:05:02,878 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,878 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,878 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,878 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,878 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,878 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-15 12:05:02,878 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,879 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,879 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,879 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,879 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,879 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,879 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-15 12:05:02,879 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,879 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,879 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,879 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,879 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,879 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,879 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,879 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,879 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,880 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-15 12:05:02,880 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,880 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,880 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,880 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,880 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,880 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,880 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,880 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,880 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,880 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:05:02,880 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,880 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,880 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,880 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-15 12:05:02,881 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,881 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 12:05:02,881 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,881 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,881 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,881 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,881 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-15 12:05:02,881 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-15 12:05:02,881 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-15 12:05:02,881 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,881 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,881 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,881 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 12:05:02,881 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:05:02,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-15 12:05:02,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:05:02,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:05:02,882 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,883 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,883 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,883 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,883 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,883 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,883 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-15 12:05:02,883 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 12:05:02,883 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,883 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,883 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,883 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,883 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,883 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,883 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:05:02,883 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-15 12:07:31,868 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-15 12:07:35,434 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-15 12:07:35,435 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,435 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,436 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,436 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-15 12:07:35,436 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-15 12:07:35,436 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,436 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,436 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,436 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-15 12:07:35,436 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,437 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,437 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-15 12:07:35,437 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,437 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,437 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,437 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,437 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,437 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,437 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,437 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,437 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,437 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,437 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,438 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,438 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,438 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,438 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,438 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,438 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,438 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,438 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,438 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,438 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,438 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,438 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-15 12:07:35,438 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-15 12:07:35,439 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,439 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,439 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-15 12:07:35,439 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,439 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,439 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,439 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,439 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,439 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,439 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,439 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,439 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-15 12:07:35,439 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,439 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,440 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,440 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,440 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-15 12:07:35,440 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,440 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,440 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,440 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,440 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,440 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,440 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,440 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-15 12:07:35,440 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,440 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,440 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,440 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,441 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-15 12:07:35,441 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,441 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,441 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,441 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,441 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,441 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-15 12:07:35,441 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,441 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,441 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,441 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,441 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,441 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,442 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,442 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,442 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,442 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,442 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,442 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,442 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,442 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,442 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,442 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,442 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-15 12:07:35,442 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-15 12:07:35,442 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,443 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-15 12:07:35,443 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-15 12:07:35,443 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,443 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,443 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,443 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,443 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,443 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,443 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,443 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,443 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,443 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-15 12:07:35,443 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,443 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-15 12:07:35,443 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,444 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,444 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,444 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,444 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,444 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,444 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,444 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,444 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,444 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 12:07:35,444 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,444 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,444 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,444 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,445 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,445 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,445 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,445 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,445 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-15 12:07:35,445 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,445 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-15 12:07:35,445 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-15 12:07:35,445 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,445 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,445 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,445 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,445 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,445 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,446 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-15 12:07:35,446 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,446 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,446 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,446 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,446 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,446 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,446 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,446 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-15 12:07:35,446 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,446 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,446 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,446 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,446 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-15 12:07:35,447 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-15 12:07:35,447 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,447 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-15 12:07:35,447 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,447 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,447 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,447 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,447 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,447 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,447 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,447 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,447 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,447 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,447 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:07:35,448 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,448 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,448 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-15 12:07:35,448 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,448 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,448 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,448 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,448 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,448 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,448 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,448 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-15 12:07:35,448 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,448 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,449 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,449 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,449 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,449 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,449 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,449 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,449 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,449 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,449 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,449 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,449 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,449 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,449 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,449 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,449 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,450 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,450 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,450 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,450 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,450 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-15 12:07:35,450 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,450 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 12:07:35,450 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,450 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-15 12:07:35,450 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,450 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,450 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,450 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,451 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,451 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,451 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-15 12:07:35,451 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,451 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-15 12:07:35,451 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,451 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,451 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,451 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,451 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,451 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:07:35,451 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,451 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,451 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,452 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,452 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,452 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,452 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-15 12:07:35,452 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,452 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,452 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,452 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,452 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,452 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,452 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-15 12:07:35,452 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,452 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,452 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-15 12:07:35,453 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,453 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,453 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,453 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-15 12:07:35,453 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,453 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-15 12:07:35,453 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,453 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,453 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,453 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,453 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,453 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:07:35,453 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,453 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-15 12:07:35,454 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-15 12:07:35,454 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,454 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,454 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,454 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,454 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,454 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-15 12:07:35,454 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-15 12:07:35,454 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,454 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,454 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,454 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,454 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,454 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,455 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-15 12:07:35,455 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,455 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,455 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,455 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,455 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-15 12:07:35,455 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,455 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,455 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,455 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,455 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,455 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,455 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,455 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,456 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,456 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,456 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,456 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,456 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,456 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,456 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,456 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-15 12:07:35,456 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:07:35,456 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,456 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,456 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,456 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:07:35,457 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,457 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,457 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,457 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-15 12:07:35,457 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,457 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,457 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,457 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,457 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,457 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,457 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,457 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,457 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,457 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,458 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,458 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,458 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,458 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,458 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,458 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,458 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,458 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,458 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,458 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-15 12:07:35,458 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-15 12:07:35,458 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,458 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,458 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,459 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,459 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,459 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,459 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-15 12:07:35,459 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,459 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-15 12:07:35,459 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,459 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,459 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,459 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,459 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,459 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,459 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,459 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,460 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-15 12:07:35,460 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,460 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,460 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,460 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,460 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,460 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,460 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,460 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-15 12:07:35,460 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,460 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,460 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,460 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,460 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,461 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-15 12:07:35,461 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,461 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,461 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-15 12:07:35,461 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,461 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,461 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-15 12:07:35,461 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,461 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,461 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,461 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,461 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,461 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,462 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,462 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,462 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,462 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,462 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,462 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,462 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,462 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,462 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-15 12:07:35,462 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-15 12:07:35,462 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,462 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,462 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,462 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,463 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,463 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,463 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,463 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,463 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,463 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,463 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,463 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,463 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,463 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,463 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,463 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,463 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,463 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,464 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,464 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,464 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,464 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,464 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-15 12:07:35,464 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,464 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,464 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,464 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,464 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,464 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,464 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,464 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-15 12:07:35,464 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,465 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,465 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,465 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,465 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,465 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-15 12:07:35,465 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,465 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,465 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:07:35,465 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,465 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,465 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,465 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-15 12:07:35,465 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,465 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,466 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-15 12:07:35,466 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,466 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,466 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,466 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,466 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,466 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,466 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,466 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-15 12:07:35,466 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,466 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,466 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,466 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,466 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,467 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-15 12:07:35,467 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,467 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,467 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,467 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,467 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,467 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,467 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-15 12:07:35,467 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,467 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,467 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,467 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,467 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,468 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,468 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,468 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,468 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,468 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-15 12:07:35,468 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,468 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,468 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,468 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,468 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,468 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,468 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,468 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,468 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,469 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:07:35,469 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,469 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,469 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,469 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-15 12:07:35,469 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,469 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 12:07:35,469 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,469 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,469 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,469 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,469 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-15 12:07:35,469 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-15 12:07:35,469 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-15 12:07:35,469 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,470 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,470 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,470 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 12:07:35,470 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,470 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,470 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,470 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,470 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,470 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,470 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,470 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:07:35,470 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,470 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,471 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-15 12:07:35,471 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,471 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:07:35,471 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,471 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:07:35,471 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,471 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,471 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,471 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,471 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,471 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,471 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-15 12:07:35,471 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 12:07:35,471 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,472 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,472 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,472 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,472 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,472 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,472 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:07:35,472 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-15 12:14:47,832 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-15 12:14:53,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-15 12:14:53,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,742 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-15 12:14:53,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-15 12:14:53,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-15 12:14:53,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-15 12:14:53,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,743 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,744 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-15 12:14:53,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-15 12:14:53,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-15 12:14:53,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-15 12:14:53,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-15 12:14:53,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-15 12:14:53,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-15 12:14:53,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-15 12:14:53,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-15 12:14:53,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-15 12:14:53,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-15 12:14:53,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-15 12:14:53,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-15 12:14:53,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-15 12:14:53,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 12:14:53,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-15 12:14:53,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-15 12:14:53,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-15 12:14:53,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-15 12:14:53,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-15 12:14:53,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-15 12:14:53,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-15 12:14:53,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-15 12:14:53,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:14:53,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-15 12:14:53,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-15 12:14:53,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-15 12:14:53,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 12:14:53,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-15 12:14:53,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-15 12:14:53,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-15 12:14:53,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:14:53,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-15 12:14:53,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-15 12:14:53,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-15 12:14:53,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-15 12:14:53,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-15 12:14:53,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:14:53,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-15 12:14:53,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-15 12:14:53,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-15 12:14:53,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-15 12:14:53,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-15 12:14:53,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-15 12:14:53,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-15 12:14:53,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:14:53,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:14:53,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-15 12:14:53,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-15 12:14:53,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-15 12:14:53,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-15 12:14:53,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-15 12:14:53,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-15 12:14:53,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-15 12:14:53,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-15 12:14:53,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-15 12:14:53,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-15 12:14:53,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-15 12:14:53,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-15 12:14:53,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-15 12:14:53,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-15 12:14:53,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-15 12:14:53,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:14:53,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-15 12:14:53,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-15 12:14:53,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-15 12:14:53,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-15 12:14:53,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-15 12:14:53,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-15 12:14:53,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,779 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:14:53,780 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,780 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,780 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,780 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-15 12:14:53,780 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,780 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 12:14:53,780 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,780 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,780 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,780 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,780 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-15 12:14:53,780 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-15 12:14:53,780 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-15 12:14:53,781 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,781 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,781 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,781 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 12:14:53,781 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,781 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,781 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,781 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,781 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,781 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,781 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,781 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:14:53,781 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,782 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,782 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-15 12:14:53,782 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,782 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:14:53,782 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,782 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:14:53,782 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,782 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,782 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,782 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,782 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,782 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,782 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-15 12:14:53,782 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 12:14:53,783 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,783 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,783 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,783 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,783 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,783 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,783 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:14:53,783 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-15 12:19:26,943 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2022-04-15 12:19:26,987 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2022-04-15 12:22:47,240 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-15 12:22:53,893 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-15 12:22:53,893 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,893 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,893 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-15 12:22:53,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-15 12:22:53,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-15 12:22:53,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-15 12:22:53,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,894 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,895 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-15 12:22:53,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-15 12:22:53,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-15 12:22:53,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,896 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-15 12:22:53,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-15 12:22:53,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,897 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-15 12:22:53,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-15 12:22:53,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,898 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-15 12:22:53,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,899 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-15 12:22:53,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-15 12:22:53,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-15 12:22:53,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-15 12:22:53,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,900 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,901 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,901 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,901 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-15 12:22:53,901 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,901 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-15 12:22:53,901 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,901 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,901 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,901 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,901 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,901 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,901 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,901 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,901 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,902 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 12:22:53,902 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,902 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,902 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,902 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,902 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,902 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,902 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,902 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,902 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-15 12:22:53,902 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,902 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-15 12:22:53,902 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-15 12:22:53,902 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-15 12:22:53,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,903 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-15 12:22:53,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-15 12:22:53,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-15 12:22:53,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-15 12:22:53,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,904 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:22:53,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-15 12:22:53,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,905 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-15 12:22:53,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,906 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-15 12:22:53,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 12:22:53,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,907 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-15 12:22:53,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-15 12:22:53,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-15 12:22:53,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,908 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:22:53,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-15 12:22:53,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,909 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-15 12:22:53,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-15 12:22:53,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-15 12:22:53,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-15 12:22:53,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,910 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:22:53,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-15 12:22:53,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-15 12:22:53,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-15 12:22:53,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-15 12:22:53,911 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,912 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,912 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,912 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,912 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,912 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,912 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-15 12:22:53,912 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,912 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,912 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,912 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,912 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-15 12:22:53,912 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,912 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,912 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-15 12:22:53,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:22:53,913 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:22:53,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-15 12:22:53,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,914 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,915 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,915 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,915 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,915 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,915 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,915 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,915 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,915 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,915 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,915 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,915 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,915 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,915 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,915 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-15 12:22:53,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-15 12:22:53,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-15 12:22:53,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-15 12:22:53,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,916 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-15 12:22:53,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-15 12:22:53,917 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-15 12:22:53,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-15 12:22:53,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-15 12:22:53,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,918 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-15 12:22:53,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-15 12:22:53,919 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,920 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-15 12:22:53,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,921 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-15 12:22:53,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-15 12:22:53,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:22:53,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,922 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-15 12:22:53,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-15 12:22:53,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-15 12:22:53,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,923 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-15 12:22:53,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-15 12:22:53,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,924 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-15 12:22:53,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,925 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-15 12:22:53,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-15 12:22:53,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 12:22:53,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,926 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-15 12:22:53,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-15 12:22:53,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-15 12:22:53,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 12:22:53,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,927 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 12:22:53,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-15 12:22:53,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 12:22:53,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 12:22:53,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,928 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-15 12:22:53,929 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 12:22:53,929 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,929 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,929 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,929 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,929 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,929 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,929 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-15 12:22:53,929 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-15 12:33:12,957 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2022-04-15 12:33:13,009 - parso.cache - DEBUG - cache _load_from_file_system: pickle loaded: /Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2022-04-15 12:33:45,339 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-15 12:33:45,339 - parso.python.diff - DEBUG - diff update: line_lengths old: 1; new: 3
2022-04-15 12:33:45,339 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:3]
2022-04-15 12:33:45,340 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 3 (to 2 in part parser)
2022-04-15 12:33:45,340 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-15 12:39:27,426 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-15 12:39:27,427 - parso.python.diff - DEBUG - diff update: line_lengths old: 3; new: 39
2022-04-15 12:39:27,428 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:1] new[1:33]
2022-04-15 12:39:27,432 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 39 (to 38 in part parser)
2022-04-15 12:39:27,432 - parso.python.diff - DEBUG - diff update: -> code[equal] old[2:2] new[34:34]
2022-04-15 12:39:27,432 - parso.python.diff - DEBUG - diff update: -> code[replace] old[3:3] new[35:39]
2022-04-15 12:39:27,432 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-15 12:39:33,939 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-15 12:39:33,940 - parso.python.diff - DEBUG - diff update: line_lengths old: 39; new: 40
2022-04-15 12:39:33,940 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:38] new[1:38]
2022-04-15 12:39:33,940 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:38] new[1:27]
2022-04-15 12:39:33,941 - parso.python.diff - DEBUG - diff _parse: parse_part from 28 to 40 (to 39 in part parser)
2022-04-15 12:39:33,941 - parso.python.diff - DEBUG - diff update: -> code[replace] old[39:39] new[39:40]
2022-04-15 12:39:33,941 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-15 12:41:55,867 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-15 12:41:55,869 - parso.python.diff - DEBUG - diff update: line_lengths old: 40; new: 41
2022-04-15 12:41:55,869 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:39] new[1:39]
2022-04-15 12:41:55,870 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:39] new[1:27]
2022-04-15 12:41:55,871 - parso.python.diff - DEBUG - diff _parse: parse_part from 28 to 41 (to 40 in part parser)
2022-04-15 12:41:55,871 - parso.python.diff - DEBUG - diff update: -> code[replace] old[40:40] new[40:41]
2022-04-15 12:41:55,872 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-15 12:45:52,366 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-15 12:45:52,367 - parso.python.diff - DEBUG - diff update: line_lengths old: 41; new: 32
2022-04-15 12:45:52,367 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:11] new[1:11]
2022-04-15 12:45:52,367 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:40] new[1:9]
2022-04-15 12:45:52,368 - parso.python.diff - DEBUG - diff _parse: parse_part from 10 to 14 (to 14 in part parser)
2022-04-15 12:45:52,368 - parso.python.diff - DEBUG - diff update: -> code[replace] old[12:12] new[12:12]
2022-04-15 12:45:52,369 - parso.python.diff - DEBUG - diff update: -> code[equal] old[13:31] new[13:31]
2022-04-15 12:45:52,369 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[15:27] new[15:27]
2022-04-15 12:45:52,369 - parso.python.diff - DEBUG - diff _parse: parse_part from 28 to 32 (to 31 in part parser)
2022-04-15 12:45:52,369 - parso.python.diff - DEBUG - diff update: -> code[replace] old[32:41] new[32:32]
2022-04-15 12:45:52,370 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-15 12:51:28,542 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-15 12:51:28,543 - parso.python.diff - DEBUG - diff update: line_lengths old: 32; new: 3
2022-04-15 12:51:28,543 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:32] new[1:3]
2022-04-15 12:51:28,544 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 3 (to 2 in part parser)
2022-04-15 12:51:28,545 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-15 12:51:29,551 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-15 12:51:29,551 - parso.python.diff - DEBUG - diff update: line_lengths old: 3; new: 3
2022-04-15 12:51:29,551 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:2] new[1:2]
2022-04-15 12:51:29,552 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:2] new[1:2]
2022-04-15 12:51:29,552 - parso.python.diff - DEBUG - diff update: -> code[replace] old[3:3] new[3:3]
2022-04-15 12:51:29,552 - parso.python.diff - DEBUG - diff _parse: parse_part from 3 to 3 (to 2 in part parser)
2022-04-15 12:51:29,552 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-15 12:51:32,015 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-15 12:51:32,015 - parso.python.diff - DEBUG - diff update: line_lengths old: 3; new: 3
2022-04-15 12:51:32,015 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:2] new[1:2]
2022-04-15 12:51:32,015 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:2] new[1:2]
2022-04-15 12:51:32,015 - parso.python.diff - DEBUG - diff update: -> code[replace] old[3:3] new[3:3]
2022-04-15 12:51:32,016 - parso.python.diff - DEBUG - diff _parse: parse_part from 3 to 3 (to 2 in part parser)
2022-04-15 12:51:32,016 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-15 12:51:35,183 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-15 12:51:35,183 - parso.python.diff - DEBUG - diff update: line_lengths old: 3; new: 3
2022-04-15 12:51:35,183 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:2] new[1:2]
2022-04-15 12:51:35,184 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:2] new[1:2]
2022-04-15 12:51:35,184 - parso.python.diff - DEBUG - diff update: -> code[replace] old[3:3] new[3:3]
2022-04-15 12:51:35,184 - parso.python.diff - DEBUG - diff _parse: parse_part from 3 to 3 (to 2 in part parser)
2022-04-15 12:51:35,184 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-15 12:51:38,871 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-15 12:51:38,872 - parso.python.diff - DEBUG - diff update: line_lengths old: 3; new: 3
2022-04-15 12:51:38,872 - parso.python.diff - DEBUG - diff update: -> code[equal] old[1:2] new[1:2]
2022-04-15 12:51:38,872 - parso.python.diff - DEBUG - diff _copy_from_old_parser: copy old[1:2] new[1:2]
2022-04-15 12:51:38,872 - parso.python.diff - DEBUG - diff update: -> code[replace] old[3:3] new[3:3]
2022-04-15 12:51:38,872 - parso.python.diff - DEBUG - diff _parse: parse_part from 3 to 3 (to 2 in part parser)
2022-04-15 12:51:38,872 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-15 12:54:11,545 - parso.python.diff - DEBUG - diff update: diff parser start
2022-04-15 12:54:11,546 - parso.python.diff - DEBUG - diff update: line_lengths old: 3; new: 2
2022-04-15 12:54:11,546 - parso.python.diff - DEBUG - diff update: -> code[replace] old[1:3] new[1:2]
2022-04-15 12:54:11,547 - parso.python.diff - DEBUG - diff _parse: parse_part from 1 to 2 (to 1 in part parser)
2022-04-15 12:54:11,547 - parso.python.diff - DEBUG - diff update: diff parser end
2022-04-15 13:52:28,821 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-15 13:52:30,793 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-15 13:52:30,794 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,794 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,794 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,794 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-15 13:52:30,794 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-15 13:52:30,794 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,794 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,794 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,794 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-15 13:52:30,794 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,794 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,795 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-15 13:52:30,795 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,795 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,795 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,795 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,795 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,795 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,795 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,795 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,795 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,795 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,795 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,795 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,796 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,796 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,796 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,796 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,796 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,796 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,796 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,796 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,796 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,796 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,796 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-15 13:52:30,796 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-15 13:52:30,796 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,796 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,797 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-15 13:52:30,797 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,797 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,797 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,797 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,797 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,797 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,797 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,797 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,797 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-15 13:52:30,797 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,797 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,797 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,797 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,798 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-15 13:52:30,798 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,798 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,798 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,798 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,798 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,798 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,798 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,798 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-15 13:52:30,798 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,798 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,798 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,798 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,798 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-15 13:52:30,799 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,799 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,799 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,799 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,799 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,799 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-15 13:52:30,799 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,799 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,799 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,799 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,799 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,799 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,799 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,799 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,799 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,800 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,800 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,800 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,800 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,800 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,800 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,800 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,800 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-15 13:52:30,800 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-15 13:52:30,800 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,800 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-15 13:52:30,800 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-15 13:52:30,800 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,801 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,801 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,801 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,801 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,801 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,801 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,801 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,801 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,801 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-15 13:52:30,801 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,801 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-15 13:52:30,801 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,801 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,801 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,802 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,802 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,802 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,802 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,802 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,802 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,802 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 13:52:30,802 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,802 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,802 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,802 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,802 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,802 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,803 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,803 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,803 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-15 13:52:30,803 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,803 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-15 13:52:30,803 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-15 13:52:30,803 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,803 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,803 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,803 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,803 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,803 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,804 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-15 13:52:30,804 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,804 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,804 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,804 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,804 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,804 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,804 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,805 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-15 13:52:30,805 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,805 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,805 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,805 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,805 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-15 13:52:30,805 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-15 13:52:30,805 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,805 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-15 13:52:30,805 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,806 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,806 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,806 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,806 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,806 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,806 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,806 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,806 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,806 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,806 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-15 13:52:30,806 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,806 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,806 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-15 13:52:30,807 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,807 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,807 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,807 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,807 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,807 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,807 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,807 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-15 13:52:30,807 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,807 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,807 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,807 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,807 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,808 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,808 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,808 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,808 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,808 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,808 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,808 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,808 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,808 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,808 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,808 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,808 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,808 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,809 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,809 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,809 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,809 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-15 13:52:30,809 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,809 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 13:52:30,809 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,809 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-15 13:52:30,809 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,809 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,809 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,809 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,809 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,809 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,810 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-15 13:52:30,810 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,810 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-15 13:52:30,810 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,810 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,810 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,810 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,810 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,810 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-15 13:52:30,810 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,810 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,810 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,810 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,811 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,811 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,811 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-15 13:52:30,811 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,811 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,811 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,811 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,811 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,811 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,811 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-15 13:52:30,811 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,811 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,811 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-15 13:52:30,811 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,812 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,812 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,812 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-15 13:52:30,812 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,812 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-15 13:52:30,812 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,812 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,812 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,812 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,812 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,812 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-15 13:52:30,812 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,812 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-15 13:52:30,812 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-15 13:52:30,813 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,813 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,813 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,813 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,813 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,813 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-15 13:52:30,813 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-15 13:52:30,813 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,813 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,814 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,814 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,814 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,814 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,814 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-15 13:52:30,814 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,814 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,814 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,814 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,814 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-15 13:52:30,814 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,814 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,814 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,814 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,815 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,815 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,815 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,815 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,815 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,815 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,815 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,815 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,815 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,815 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,815 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,815 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-15 13:52:30,815 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-15 13:52:30,815 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,816 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,816 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,816 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-15 13:52:30,816 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,816 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,816 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,816 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-15 13:52:30,816 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,816 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,816 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,816 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,816 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,816 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,817 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,817 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,817 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,817 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,817 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,817 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,817 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,817 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,817 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,817 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,817 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,817 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,817 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,817 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-15 13:52:30,818 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-15 13:52:30,818 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,818 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,818 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,818 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,818 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,818 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,818 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-15 13:52:30,818 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,818 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-15 13:52:30,818 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,818 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,818 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,818 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,819 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,819 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,819 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,819 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,819 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-15 13:52:30,819 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,819 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,819 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,819 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,819 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,819 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,819 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,819 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-15 13:52:30,819 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,820 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,820 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,820 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,820 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,820 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-15 13:52:30,820 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,820 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,820 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-15 13:52:30,820 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,820 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,820 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-15 13:52:30,820 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,820 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,820 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,821 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,821 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,821 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,821 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,821 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,821 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,821 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,821 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,821 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,821 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,821 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,821 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-15 13:52:30,821 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-15 13:52:30,822 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,822 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,822 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,822 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,822 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,822 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,822 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,822 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,822 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,822 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,822 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,822 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,822 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,822 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,823 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,823 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,823 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,823 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,823 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,823 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,823 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,823 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,823 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-15 13:52:30,823 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,823 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,823 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,823 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,824 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,824 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,824 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,824 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-15 13:52:30,824 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,824 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,824 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,824 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,824 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,824 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-15 13:52:30,824 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,825 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,825 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-15 13:52:30,825 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,825 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,825 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,825 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-15 13:52:30,825 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,825 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,825 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-15 13:52:30,825 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,825 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,825 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,825 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,825 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,826 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,826 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,826 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-15 13:52:30,826 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,826 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,826 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,826 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,826 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,826 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-15 13:52:30,826 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,826 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,827 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,827 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,827 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,827 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,827 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-15 13:52:30,827 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,827 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,827 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,827 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,827 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,827 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,828 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,828 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,828 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,828 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-15 13:52:30,828 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,828 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,828 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,828 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,828 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,828 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,828 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,828 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,828 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,829 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-15 13:52:30,829 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,829 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,829 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,829 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-15 13:52:30,829 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,829 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 13:52:30,829 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,829 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,829 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,829 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,829 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-15 13:52:30,829 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-15 13:52:30,830 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-15 13:52:30,830 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,830 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,830 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,830 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 13:52:30,830 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,830 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,830 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,830 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,830 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,830 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,830 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,830 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 13:52:30,830 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,831 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,831 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-15 13:52:30,831 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,831 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 13:52:30,831 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,831 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 13:52:30,831 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,831 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,831 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,831 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,831 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,831 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,831 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-15 13:52:30,832 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 13:52:30,832 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,832 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,832 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,832 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,832 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,832 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,832 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-15 13:52:30,832 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-15 16:04:54,456 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-15 16:04:55,373 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-15 16:04:55,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,374 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-15 16:04:55,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-15 16:04:55,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,375 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-15 16:04:55,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-15 16:04:55,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,376 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,377 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,378 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,379 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-15 16:04:55,380 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-15 16:04:55,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-15 16:04:55,381 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,382 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-15 16:04:55,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-15 16:04:55,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,383 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,384 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-15 16:04:55,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-15 16:04:55,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,385 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-15 16:04:55,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,386 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,387 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,388 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-15 16:04:55,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-15 16:04:55,389 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-15 16:04:55,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-15 16:04:55,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,390 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,391 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-15 16:04:55,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-15 16:04:55,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,392 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 16:04:55,393 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,394 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-15 16:04:55,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-15 16:04:55,395 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-15 16:04:55,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,396 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-15 16:04:55,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,397 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-15 16:04:55,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,398 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-15 16:04:55,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-15 16:04:55,399 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-15 16:04:55,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,400 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,401 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-15 16:04:55,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,402 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-15 16:04:55,403 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,403 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,403 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,403 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,403 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,403 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,403 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,404 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-15 16:04:55,404 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,404 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,404 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,404 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,405 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,405 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,405 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,405 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,405 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,405 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,405 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,406 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,406 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,406 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,406 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,406 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,407 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,407 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,407 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,407 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,407 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,408 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-15 16:04:55,408 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,408 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 16:04:55,408 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,408 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-15 16:04:55,408 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,409 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,409 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,409 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,409 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,409 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,409 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-15 16:04:55,410 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,410 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-15 16:04:55,410 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,410 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,410 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,411 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,411 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,411 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-15 16:04:55,411 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,411 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,412 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,412 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,412 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,412 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,412 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-15 16:04:55,412 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,413 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,413 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,414 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,414 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,414 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,414 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-15 16:04:55,415 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,415 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,415 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-15 16:04:55,415 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,416 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,416 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,416 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-15 16:04:55,416 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,416 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-15 16:04:55,416 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,417 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,417 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,417 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,417 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,417 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-15 16:04:55,417 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,417 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-15 16:04:55,417 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-15 16:04:55,418 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,418 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,418 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,418 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,418 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,418 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-15 16:04:55,418 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-15 16:04:55,419 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,419 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,419 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,419 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,419 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,419 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,420 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-15 16:04:55,420 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,420 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,420 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,420 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,420 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-15 16:04:55,421 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,421 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,421 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,421 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,421 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,421 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,422 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,422 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,422 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,422 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,422 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,422 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,422 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,422 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,423 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,423 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-15 16:04:55,423 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-15 16:04:55,423 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,423 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,423 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,423 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-15 16:04:55,423 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,424 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,424 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,424 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-15 16:04:55,424 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,424 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,424 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,425 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,425 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,425 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,425 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,425 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,426 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,426 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,426 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,426 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,426 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,426 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,426 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,427 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,427 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,427 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,427 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,427 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-15 16:04:55,427 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-15 16:04:55,427 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,428 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,428 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,428 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,428 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,428 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,428 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-15 16:04:55,429 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,429 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-15 16:04:55,429 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,429 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,429 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,429 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,429 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,429 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,430 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,430 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,430 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-15 16:04:55,430 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,430 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,430 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,431 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,431 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,431 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,431 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,431 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-15 16:04:55,431 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,432 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,432 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,432 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,432 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,432 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-15 16:04:55,432 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,432 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,433 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-15 16:04:55,433 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,433 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,433 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-15 16:04:55,433 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,433 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,433 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,434 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,434 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,434 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,434 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,434 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,434 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,435 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,435 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,435 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,435 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,435 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,435 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-15 16:04:55,435 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-15 16:04:55,436 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,436 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,436 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,436 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,436 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,436 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,436 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,437 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,437 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,437 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,437 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,437 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,437 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,437 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,438 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,438 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,438 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,438 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,438 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,438 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,439 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,439 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,439 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-15 16:04:55,439 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,439 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,440 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,440 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,440 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,440 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,441 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,441 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-15 16:04:55,441 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,441 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,441 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,442 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,442 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,442 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-15 16:04:55,442 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,442 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,443 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-15 16:04:55,443 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,443 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,443 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,443 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-15 16:04:55,443 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,443 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,443 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-15 16:04:55,444 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,444 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,444 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,444 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,444 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,444 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,445 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,445 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-15 16:04:55,445 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,445 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,445 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,445 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,446 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,446 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-15 16:04:55,446 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,446 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,446 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,446 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,447 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,447 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,447 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-15 16:04:55,447 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,447 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,448 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,448 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,448 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,448 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,448 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,448 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,448 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,449 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-15 16:04:55,449 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,449 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,449 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,450 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,450 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,450 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,450 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,450 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,451 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,451 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-15 16:04:55,451 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,451 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,451 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,451 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-15 16:04:55,452 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,452 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 16:04:55,452 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,452 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,452 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,453 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,453 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-15 16:04:55,453 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-15 16:04:55,453 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-15 16:04:55,453 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,454 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,454 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,454 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 16:04:55,454 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,454 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,455 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,455 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,455 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,455 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,456 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,456 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 16:04:55,456 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,456 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,456 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-15 16:04:55,456 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,457 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 16:04:55,457 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,457 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 16:04:55,457 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,457 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,458 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,458 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,458 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,458 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,458 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-15 16:04:55,459 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 16:04:55,459 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,459 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,459 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,459 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,460 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,460 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,460 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-15 16:04:55,460 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-15 22:56:13,249 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
2022-04-15 22:56:13,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-15 22:56:13,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,745 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-15 22:56:13,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-15 22:56:13,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-15 22:56:13,746 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-15 22:56:13,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,747 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-15 22:56:13,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-15 22:56:13,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-15 22:56:13,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,748 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline ExtraLightItalic.otf) italic normal 200 normal>) = 11.24
2022-04-15 22:56:13,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-15 22:56:13,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,749 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light for Powerline.ttf) normal normal 300 normal>) = 10.145
2022-04-15 22:56:13,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Light for Powerline' (Roboto Mono Light Italic for Powerline.ttf) italic normal 300 normal>) = 11.145
2022-04-15 22:56:13,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,750 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-04-15 22:56:13,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline Italic.otf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Slashed for Powerline' (Droid Sans Mono Slashed for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,751 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium for Powerline.ttf) normal normal 500 normal>) = 10.145
2022-04-15 22:56:13,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-15 22:56:13,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-15 22:56:13,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-15 22:56:13,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,752 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-15 22:56:13,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold Italic for Powerline.ttf) italic normal 600 normal>) = 11.24
2022-04-15 22:56:13,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Medium for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 22:56:13,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,753 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-15 22:56:13,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-15 22:56:13,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Semi-Narrow' (3270SemiNarrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-15 22:56:13,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,754 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-15 22:56:13,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-15 22:56:13,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-15 22:56:13,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-15 22:56:13,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,755 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-15 22:56:13,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono Dotted for Powerline' (Droid Sans Mono Dotted for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-15 22:56:13,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-15 22:56:13,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,756 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-15 22:56:13,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,757 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-15 22:56:13,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-g for Powerline' (Inconsolata-g for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 22:56:13,758 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Semibold for Powerline.otf) normal normal 600 normal>) = 10.24
2022-04-15 22:56:13,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont Bold For Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-15 22:56:13,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-15 22:56:13,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,759 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-15 22:56:13,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin for Powerline.ttf) normal normal 250 normal>) = 10.1925
2022-04-15 22:56:13,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Bold Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-15 22:56:13,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,760 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-15 22:56:13,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-15 22:56:13,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-15 22:56:13,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-15 22:56:13,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,761 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Oblique for Powerline.ttf) oblique normal 400 normal>) = 11.05
2022-04-15 22:56:13,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-15 22:56:13,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Thin for Powerline' (Roboto Mono Thin Italic for Powerline.ttf) italic normal 250 normal>) = 11.1925
2022-04-15 22:56:13,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-15 22:56:13,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,762 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-15 22:56:13,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-15 22:56:13,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Droid Sans Mono for Powerline' (Droid Sans Mono for Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,763 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S for Powerline' (Meslo LG S Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-15 22:56:13,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-15 22:56:13,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-15 22:56:13,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-15 22:56:13,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,764 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,765 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-15 22:56:13,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Go Mono for Powerline' (Go Mono Bold for Powerline.ttf) normal normal 600 normal>) = 10.24
2022-04-15 22:56:13,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270' (3270Medium.ttf) normal normal 500 normal>) = 10.145
2022-04-15 22:56:13,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-15 22:56:13,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,766 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-15 22:56:13,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-15 22:56:13,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,767 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Light for Powerline.otf) normal normal 300 normal>) = 10.145
2022-04-15 22:56:13,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-15 22:56:13,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Black for Powerline.otf) normal normal 900 normal>) = 10.525
2022-04-15 22:56:13,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,768 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hack' (Hack-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DejaVu Sans Mono for Powerline' (DejaVu Sans Mono Bold Oblique for Powerline.ttf) oblique normal 700 normal>) = 11.335
2022-04-15 22:56:13,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-15 22:56:13,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,769 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono for Powerline' (Roboto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Bold for Powerline.otf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Ubuntu Mono derivative Powerline' (Ubuntu Mono derivative Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M for Powerline' (Meslo LG M Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'monofur for Powerline' (Monofur for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,770 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-04-15 22:56:13,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG M DZ for Powerline' (Meslo LG M DZ Regular for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro ExtraLight for Powerline.otf) normal normal 200 normal>) = 10.24
2022-04-15 22:56:13,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,771 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-15 22:56:13,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Cousine for Powerline' (Cousine Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-15 22:56:13,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono for Powerline' (Space Mono Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-15 22:56:13,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-15 22:56:13,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arimo for Powerline' (Arimo Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L for Powerline' (Meslo LG L Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'NovaMono for Powerline' (NovaMono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,772 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-15 22:56:13,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'ProFont for Powerline' (ProFont For Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-15 22:56:13,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Regular Powerline.otf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline LightItalic.otf) italic normal 300 normal>) = 11.145
2022-04-15 22:56:13,773 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'IBM 3270 Narrow' (3270Narrow.ttf) normal normal 500 condensed>) = 10.344999999999999
2022-04-15 22:56:13,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Anonymous Pro for Powerline' (Anonymice Powerline Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG L DZ for Powerline' (Meslo LG L DZ Italic for Powerline.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Tinos for Powerline' (Tinos Bold Italic for Powerline.ttf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,774 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-15 22:56:13,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Liberation Mono for Powerline' (Literation Mono Powerline Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Source Code Pro for Powerline' (Source Code Pro Powerline BlackItalic.otf) italic normal 900 normal>) = 11.525
2022-04-15 22:56:13,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata-dz for Powerline' (Inconsolata-dz for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 22:56:13,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Symbol Neu for Powerline' (Symbol Neu for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-15 22:56:13,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-15 22:56:13,775 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-15 22:56:13,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Fira Mono for Powerline' (FuraMono-Medium Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 22:56:13,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Mono for Powerline' (Noto Mono for Powerline.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-15 22:56:13,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Space Mono' (SpaceMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,776 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Roboto Mono Medium for Powerline' (Roboto Mono Medium Italic for Powerline.ttf) italic normal 500 normal>) = 11.145
2022-04-15 22:56:13,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Meslo LG S DZ for Powerline' (Meslo LG S DZ Bold for Powerline.ttf) normal normal 700 normal>) = 10.335
2022-04-15 22:56:13,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-15 22:56:13,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-15 22:56:13,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Inconsolata for Powerline' (Inconsolata for Powerline.otf) normal normal 500 normal>) = 10.145
2022-04-15 22:56:13,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,777 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-15 22:56:13,778 - matplotlib.font_manager - DEBUG - font_manager _findfont_cached: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/watcharapongwongrattanasirikul/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-16 00:38:08,256 - numexpr.utils - INFO - utils _init_num_threads: NumExpr defaulting to 8 threads.
